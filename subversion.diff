Current version = 49

***************************
* Changes in revision 2 
***************************

------------------------------------------------------------------------
r2 | levi | 2009-03-23 17:47:15 -0500 (Mon, 23 Mar 2009) | 1 line

Initial copy to SVN
------------------------------------------------------------------------

Index: validator.pyc
===================================================================
Cannot display: file marked as a binary type.
svn:mime-type = application/octet-stream

Property changes on: validator.pyc
___________________________________________________________________
Added: svn:mime-type
   + application/octet-stream

Index: style/reset.css
===================================================================
0a1,50
> /*
>  * credit to Eric Meyer for this CSS reset
>  */
> 
> html, body, div, span, applet, object, iframe,
> h1, h2, h3, h4, h5, h6, p, blockquote, pre,
> a, abbr, acronym, address, big, cite, code,
> del, dfn, em, font, img, ins, kbd, q, s, samp,
> small, strike, strong, sub, sup, tt, var,
> b, u, i, center,
> dl, dt, dd, ol, ul, li,
> fieldset, form, label, legend,
> table, caption, tbody, tfoot, thead, tr, th, td {
> 	margin: 0;
> 	padding: 0;
> 	border: 0;
> 	outline: 0;
> 	font-size: 100%;
> 	vertical-align: baseline;
> 	background: transparent;
> }
> body {
> 	line-height: 1;
> }
> ol, ul {
> 	list-style: none;
> }
> blockquote, q {
> 	quotes: none;
> }
> 
> /* remember to define focus styles! */
> :focus {
> 	outline: 0;
> }
> 
> /* remember to highlight inserts somehow! */
> ins {
> 	text-decoration: none;
> }
> del {
> 	text-decoration: line-through;
> }
> 
> /* tables still need 'cellspacing="0"' in the markup */
> table {
> 	border-collapse: collapse;
> 	border-spacing: 0;
> }
> 
Index: style/main.css
===================================================================
0a1,83
> form {
> 	background-color: #EEE;
> 	border: 1px solid #CCC;
> 	font: small Verdana, Helvetica, Geneva, Arial, sans-serif;
> 	padding: 10px;
> 	margin: 10px;
> 	width: 400px;
> }
> 
> form dl {
> 	text-align: right;
> }
> 
> form dl dt {
> 	background-color: #FFF;
> 	border-left: 3px solid #CCC;
> 	float: left;
> 	line-height: 200%;
> 	padding: 0px 10px 0px 5px;
> }
> 
> form dl dd {
> 	padding: 0px 0px 10px 0px;
> 	position: relative;
> }
> 
> form dl dd input {
> 	width: 250px;
> }
> 
> form dl dd textarea {
> 	height: 100px;
> 	width: 250px;
> }
> 
> form dl dd span {
> 	background-color: #FF0;
> 	border: 1px solid #CC0;
> 	display: none;
> 	font: x-small Courier New, serif;
> 	padding: 2px;
> 	position: absolute;
> 	width: 150px;
> 	right: -180px;
> 	text-align: center;
> 	top: 4px;
> }
> 
> form dl dd span.error {
> 	background-color: #F00;
> 	border: 1px solid #000;
> 	display: inline;
> }
> 
> form div {
> 	text-align: right;
> }
> 
> form div input {
> 	background-color: #CCC;
> 	border: 1px outset #CCC;
> }
> 
> .onFocus {
> 	border: 2px solid #FF0;
> 	margin: 1px;
> }
> 
> .onBlur {
> 	border: 1px solid #000;
> 	margin: 2px;
> }
> 
> .valid {
> 	border: 3px solid #0F0;
> 	margin: 0px;
> }
> 
> .invalid {
> 	border: 3px solid #F00;
> 	margin: 0px;
> }
> 
Index: app.yaml
===================================================================
0a1,15
> application: cs373-54270-teamd
> version: 6
> runtime: python
> api_version: 1
> 
> handlers:
> - url: /js
>   static_dir: js
> 
> - url: /style
>   static_dir: style
> 
> - url: /.*
>   script: index.py
> 
Index: index.yaml
===================================================================
0a1,11
> indexes:
> 
> # AUTOGENERATED
> 
> # This index.yaml is automatically updated whenever the dev_appserver
> # detects that a new type of query is run.  If you want to manage the
> # index.yaml file manually, remove the above marker line (the line
> # saying "# AUTOGENERATED").  If you want to manage some indexes
> # manually, move them above the marker line.  The index.yaml file is
> # automatically uploaded to the admin console when you next deploy
> # your application using appcfg.py.
Index: index.html
===================================================================
0a1,29
> <!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
> <html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
> 	<head>
> 		<title>C S 373: 54270: TA Matching</title>
> 
> 		<link rel="stylesheet" type="text/css" href="/style/reset.css" />
> 		<link rel="stylesheet" type="text/css" href="/style/main.css" />
> 
> 		<script type="text/javascript" src="/js/load.js"></script>
> 		<script type="text/javascript" src="/js/setHighlight.js"></script>
> 		<script type="text/javascript" src="/js/formInputHighlight.js"></script>
> 		<script type="text/javascript" src="/js/formTextareaHighlight.js"></script>
> 	</head>
> 
> 	<body>
> 		<form action="/submitted" method="post">
> 			<dl>
> 				<dt><label for="name_test">Name</label></dt><dd><input type="text" name="name_test" id="name_test" {% if results %}{% for result in results %}{% ifequal result.key 'name_test' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Type in your name, at least one char</span></dd>
> 				<dt><label for="password_test">Password</label></dt><dd><input type="password" name="password_test" id="password_test" {% if results %}{% for result in results %}{% ifequal result.key 'password_test' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Type in your password, at least six chars</span></dd>
> 				<dt><label for="address_test">Address</label></dt><dd><input type="text" name="address_test" id="address_test" {% if results %}{% for result in results %}{% ifequal result.key 'address_test' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Type in your address</span></dd>
> 				<dt><label for="phone_test">Phone</label></dt><dd><input type="text" name="phone_test" id="phone_test" {% if results %}{% for result in results %}{% ifequal result.key 'phone_test' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Type in your phone number</span></dd>
> 				<dt><label for="email_test">Email</label></dt><dd><input type="text" name="email_test" id="email_test" {% if results %}{% for result in results %}{% ifequal result.key 'email_test' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Type in your email address</span></dd>
> 				<dt><label for="comment_test">Comment</label></dt><dd><textarea name="comment_test" id="comment_test">{% if results %}{% for result in results %}{% ifequal result.key 'comment_test' %}{% if result.valid %}{{ result.value }}</textarea><span{% else %}</textarea><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}</textarea><span{% endif %}>Type in your comment</span></dd>
> 			</dl>
> 			<div><input type="submit" value="Submit" /></div>
> 		</form>
> 	</body>
> </html>
> 
Index: js/formTextareaHighlight.js
===================================================================
0a1,10
> function formTextareaHighlight() {
> 	if(!document.getElementsByTagName) return;
> 
> 	var textareas = document.getElementsByTagName("textarea");
> 	for(var lcv = 0; lcv < textareas.length; ++lcv)
> 		setHighlight(textareas[lcv]);
> }
> 
> load(formTextareaHighlight);
> 
Index: js/formInputHighlight.js
===================================================================
0a1,14
> function formInputHighlight() {
> 	if(!document.getElementsByTagName) return;
> 
> 	var inputs = document.getElementsByTagName('input');
> 	for(var lcv = 0; lcv < inputs.length; ++lcv) {
> 		var input = inputs[lcv];
> 		var inputType = input.getAttribute('type');
> 		if(inputType == 'text' || inputType == 'password')
> 			setHighlight(input);
> 	}
> }
> 
> load(formInputHighlight);
> 
Index: js/load.js
===================================================================
0a1,12
> function load(func) {
> 	var old = window.onload;
> 	if(typeof window.onload != 'function')
> 		window.onload = func;
> 	else
> 		window.onload = function() {
> 			if(old)
> 				old();
> 			func();
> 		}
> }
> 
Index: js/setHighlight.js
===================================================================
0a1,46
> function setHighlight(field) {
> 	field.onfocus = function() {
> 		this.className = 'onFocus';
> 		this.parentNode.getElementsByTagName('span')[0].className = '';
> 		this.parentNode.getElementsByTagName('span')[0].style.display = 'inline';
> 	}
> 
> 	field.onblur = function() {
> 		var xmlHttp;
> 		try {
> 			// Firefox, Opera 8.0+, Safari
> 			xmlHttp = new XMLHttpRequest();
> 		}
> 		catch(e) {
> 			// Internet Explorer
> 			try {
> 				xmlHttp = new ActiveXObject("Msxml2.XMLHTTP");
> 			}
> 			catch(e) {
> 				try {
> 					xmlHttp=new ActiveXObject("Microsoft.XMLHTTP");
> 				}
> 				catch(e) {
> 					alert("Your browser does not support AJAX!");
> 					return false;
> 				}
> 			}
> 		}
> 		xmlHttp.onreadystatechange = function() {
> 			if(xmlHttp.readyState == 4) {
> 				var result = xmlHttp.responseXML.getElementsByTagName('field')[0].getAttribute('valid');
> 				if(result == 'True')
> 					field.className = 'valid';
> 				else if(result == 'False')
> 					field.className = 'invalid';
> 			}
> 		}
> 		this.className = 'onBlur';
> 		xmlHttp.open('GET','is_valid?key=' + this.getAttribute('name') + '&value=' + this.value, true);
> 		xmlHttp.send(null);
> 		this.parentNode.getElementsByTagName('span')[0].style.display = 'none';
> 	}
> 
> 	field.className = 'onBlur';
> }
> 
Index: validator.py
===================================================================
0a1,27
> import re
> 
> class Validator:
> 	def __init__(self, form_data):
> 		self.results = []
> 
> 		#TODO: how would this happen?
> #		if not form_data:
> #			self.valid = False
> #			self.errors.append('You POSTed without data.')
> 
> 		for key, value in form_data:
> 			result = {}
> 			result['key'] = key
> 			result['value'] = value
> 			ghetto_switch = {
> 				'name'     : lambda: True if re.match('.+', value) else False,
> 				'password' : lambda: True if re.match('.{6,30}', value) else False,
> 				'address'  : lambda: True if re.match('.+', value) else False,
> 				'phone'    : lambda: True if re.match('.+', value) else False,
> 				# lol, this is ALMOST to RFC 2822, doesn't handle double quoted sections before '@' or square bracket Internet address after, perfect bug op
> 				'email'    : lambda: True if re.match('[a-zA-Z0-9!#$%&\'*+/=?^_`{|}~-]+(?:\.[a-zA-Z0-9!#$%&\'*+/=?^_`{|}~-]+)*@(?:[a-zA-Z0-9](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?\.)+[a-zA-Z0-9](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?', value) else False,
> 				'comment'  : lambda: True if re.match('.+', value) else False,
> 			}[key.split('_')[0]]()
> 			result['valid'] = True if ghetto_switch else False
> 			self.results.append(result)
> 
Index: index.py
===================================================================
0a1,48
> import os
> from google.appengine.ext import webapp
> from google.appengine.ext.webapp import template
> from google.appengine.ext.webapp.util import run_wsgi_app
> from validator import Validator
> 
> class Index(webapp.RequestHandler):
> 	def __init__(self):
> 		self.results = []
> 
> 	def get(self):
> 		self.template()
> 
> 	def post(self):
> 		validator = Validator(self.request.params.items())
> 		self.results.extend(validator.results)
> 		self.template()
> 
> 	def template(self):
> 		template_values = {
> 			'results': self.results,
> 		}
> 		path = os.path.join(os.path.dirname(__file__), 'index.html')
> 		self.response.out.write(template.render(path, template_values))
> 
> class Is_valid(webapp.RequestHandler):
> 	def get(self):
> 		key = self.request.get('key')
> 		value = self.request.get('value')
> 		validator = Validator([(key, value)])
> #		self.response.headers['Content-Type'] = 'text/html'
> #		self.response.out.write('True' if validator.valid else 'False')
> 		self.response.headers['Content-Type'] = 'text/xml'
> 		self.response.out.write("<?xml version=\"1.0\" encoding=\"utf-8\"?>\n")
> 		self.response.out.write("<fields>\n")
> 		self.response.out.write("\t<field key=\"" + key + '" value="' + value + '" valid="' + str(validator.results[0]['valid']) + "\" />\n")
> 		self.response.out.write("</fields>\n")
> 
> application = webapp.WSGIApplication([('/is_valid', Is_valid),
>                                       ('/.*', Index)],
>                                      debug=True)
> 
> def main():
> 	run_wsgi_app(application)
> 
> if __name__ == "__main__":
> 	main()
> 

***************************
* Changes in revision 3 
***************************

------------------------------------------------------------------------
r3 | estesox | 2009-03-23 18:47:18 -0500 (Mon, 23 Mar 2009) | 1 line


------------------------------------------------------------------------

Index: TA1.txt
===================================================================
1c1
< -----
---
> ----
16,17c16,17
< Name:
< EID:
---
> Name:Ji-Hoon Woo
> EID:jw3352
19c19
< E-mail address:
---
> E-mail address: estesox@gmail.com

***************************
* Changes in revision 4 
***************************

------------------------------------------------------------------------
r4 | jeffery | 2009-03-23 18:52:26 -0500 (Mon, 23 Mar 2009) | 2 lines

Jeff's info for TA1.txt

------------------------------------------------------------------------

Index: TA1.txt
===================================================================
31,32c31,32
< Name:
< EID:
---
> Name: Jeffery Zhu
> EID: JZ995
34c34
< E-mail address:
---
> E-mail address: jz9901@mail.utexas.edu

***************************
* Changes in revision 5 
***************************

------------------------------------------------------------------------
r5 | levi | 2009-03-23 19:11:42 -0500 (Mon, 23 Mar 2009) | 1 line

Copied first form so we have 3 now
------------------------------------------------------------------------

Index: validator.pyc
===================================================================
Cannot display: file marked as a binary type.
svn:mime-type = application/octet-stream
Index: index.py
===================================================================
7c7
< class Index(webapp.RequestHandler):
---
> class Applicant(webapp.RequestHandler):
23c23,61
< 		path = os.path.join(os.path.dirname(__file__), 'index.html')
---
> 		path = os.path.join(os.path.dirname(__file__), 'applicant.html')
> 		self.response.out.write(template.render(path, template_values))
> 
> class Instructor(webapp.RequestHandler):
> 	def __init__(self):
> 		self.results = []
> 
> 	def get(self):
> 		self.template()
> 
> 	def post(self):
> 		validator = Validator(self.request.params.items())
> 		self.results.extend(validator.results)
> 		self.template()
> 
> 	def template(self):
> 		template_values = {
> 			'results': self.results,
> 		}
> 		path = os.path.join(os.path.dirname(__file__), 'instructor.html')
> 		self.response.out.write(template.render(path, template_values))
> 
> class Admin(webapp.RequestHandler):
> 	def __init__(self):
> 		self.results = []
> 
> 	def get(self):
> 		self.template()
> 
> 	def post(self):
> 		validator = Validator(self.request.params.items())
> 		self.results.extend(validator.results)
> 		self.template()
> 
> 	def template(self):
> 		template_values = {
> 			'results': self.results,
> 		}
> 		path = os.path.join(os.path.dirname(__file__), 'admin.html')
40c78,80
<                                       ('/.*', Index)],
---
>                                       ('/applicant', Applicant),
>                                       ('/instructor', Instructor),
>                                       ('/admin', Admin)],

***************************
* Changes in revision 6 
***************************

------------------------------------------------------------------------
r6 | ting | 2009-03-23 19:13:04 -0500 (Mon, 23 Mar 2009) | 1 line

updated TA1.txt with template info
------------------------------------------------------------------------

Index: TA1.txt
===================================================================
21c21
< Name:
---
> Name: Levi Wiseman
24c24
< E-mail address:
---
> E-mail address: lwiseman@mail.utexas.edu
26c26
< Name:
---
> Name: Sariph Shrestha
29c29
< E-mail address:
---
> E-mail address: sariph.shrestha@gmail.com

***************************
* Changes in revision 7 
***************************

------------------------------------------------------------------------
r7 | levi | 2009-03-23 19:13:37 -0500 (Mon, 23 Mar 2009) | 1 line

Copied first form so we have 3 now, needed to add first
------------------------------------------------------------------------

Index: index.html
===================================================================
1,29d0
< <!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
< <html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
< 	<head>
< 		<title>C S 373: 54270: TA Matching</title>
< 
< 		<link rel="stylesheet" type="text/css" href="/style/reset.css" />
< 		<link rel="stylesheet" type="text/css" href="/style/main.css" />
< 
< 		<script type="text/javascript" src="/js/load.js"></script>
< 		<script type="text/javascript" src="/js/setHighlight.js"></script>
< 		<script type="text/javascript" src="/js/formInputHighlight.js"></script>
< 		<script type="text/javascript" src="/js/formTextareaHighlight.js"></script>
< 	</head>
< 
< 	<body>
< 		<form action="/submitted" method="post">
< 			<dl>
< 				<dt><label for="name_test">Name</label></dt><dd><input type="text" name="name_test" id="name_test" {% if results %}{% for result in results %}{% ifequal result.key 'name_test' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Type in your name, at least one char</span></dd>
< 				<dt><label for="password_test">Password</label></dt><dd><input type="password" name="password_test" id="password_test" {% if results %}{% for result in results %}{% ifequal result.key 'password_test' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Type in your password, at least six chars</span></dd>
< 				<dt><label for="address_test">Address</label></dt><dd><input type="text" name="address_test" id="address_test" {% if results %}{% for result in results %}{% ifequal result.key 'address_test' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Type in your address</span></dd>
< 				<dt><label for="phone_test">Phone</label></dt><dd><input type="text" name="phone_test" id="phone_test" {% if results %}{% for result in results %}{% ifequal result.key 'phone_test' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Type in your phone number</span></dd>
< 				<dt><label for="email_test">Email</label></dt><dd><input type="text" name="email_test" id="email_test" {% if results %}{% for result in results %}{% ifequal result.key 'email_test' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Type in your email address</span></dd>
< 				<dt><label for="comment_test">Comment</label></dt><dd><textarea name="comment_test" id="comment_test">{% if results %}{% for result in results %}{% ifequal result.key 'comment_test' %}{% if result.valid %}{{ result.value }}</textarea><span{% else %}</textarea><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}</textarea><span{% endif %}>Type in your comment</span></dd>
< 			</dl>
< 			<div><input type="submit" value="Submit" /></div>
< 		</form>
< 	</body>
< </html>
< 
Index: instructor.html
===================================================================
0a1,29
> <!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
> <html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
> 	<head>
> 		<title>C S 373: 54270: TA Matching: Instructor</title>
> 
> 		<link rel="stylesheet" type="text/css" href="/style/reset.css" />
> 		<link rel="stylesheet" type="text/css" href="/style/main.css" />
> 
> 		<script type="text/javascript" src="/js/load.js"></script>
> 		<script type="text/javascript" src="/js/setHighlight.js"></script>
> 		<script type="text/javascript" src="/js/formInputHighlight.js"></script>
> 		<script type="text/javascript" src="/js/formTextareaHighlight.js"></script>
> 	</head>
> 
> 	<body>
> 		<form action="/submitted" method="post">
> 			<dl>
> 				<dt><label for="name_test">Name</label></dt><dd><input type="text" name="name_test" id="name_test" {% if results %}{% for result in results %}{% ifequal result.key 'name_test' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Type in your name, at least one char</span></dd>
> 				<dt><label for="password_test">Password</label></dt><dd><input type="password" name="password_test" id="password_test" {% if results %}{% for result in results %}{% ifequal result.key 'password_test' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Type in your password, at least six chars</span></dd>
> 				<dt><label for="address_test">Address</label></dt><dd><input type="text" name="address_test" id="address_test" {% if results %}{% for result in results %}{% ifequal result.key 'address_test' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Type in your address</span></dd>
> 				<dt><label for="phone_test">Phone</label></dt><dd><input type="text" name="phone_test" id="phone_test" {% if results %}{% for result in results %}{% ifequal result.key 'phone_test' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Type in your phone number</span></dd>
> 				<dt><label for="email_test">Email</label></dt><dd><input type="text" name="email_test" id="email_test" {% if results %}{% for result in results %}{% ifequal result.key 'email_test' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Type in your email address</span></dd>
> 				<dt><label for="comment_test">Comment</label></dt><dd><textarea name="comment_test" id="comment_test">{% if results %}{% for result in results %}{% ifequal result.key 'comment_test' %}{% if result.valid %}{{ result.value }}</textarea><span{% else %}</textarea><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}</textarea><span{% endif %}>Type in your comment</span></dd>
> 			</dl>
> 			<div><input type="submit" value="Submit" /></div>
> 		</form>
> 	</body>
> </html>
> 
Index: admin.html
===================================================================
0a1,29
> <!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
> <html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
> 	<head>
> 		<title>C S 373: 54270: TA Matching: Admin</title>
> 
> 		<link rel="stylesheet" type="text/css" href="/style/reset.css" />
> 		<link rel="stylesheet" type="text/css" href="/style/main.css" />
> 
> 		<script type="text/javascript" src="/js/load.js"></script>
> 		<script type="text/javascript" src="/js/setHighlight.js"></script>
> 		<script type="text/javascript" src="/js/formInputHighlight.js"></script>
> 		<script type="text/javascript" src="/js/formTextareaHighlight.js"></script>
> 	</head>
> 
> 	<body>
> 		<form action="/submitted" method="post">
> 			<dl>
> 				<dt><label for="name_test">Name</label></dt><dd><input type="text" name="name_test" id="name_test" {% if results %}{% for result in results %}{% ifequal result.key 'name_test' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Type in your name, at least one char</span></dd>
> 				<dt><label for="password_test">Password</label></dt><dd><input type="password" name="password_test" id="password_test" {% if results %}{% for result in results %}{% ifequal result.key 'password_test' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Type in your password, at least six chars</span></dd>
> 				<dt><label for="address_test">Address</label></dt><dd><input type="text" name="address_test" id="address_test" {% if results %}{% for result in results %}{% ifequal result.key 'address_test' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Type in your address</span></dd>
> 				<dt><label for="phone_test">Phone</label></dt><dd><input type="text" name="phone_test" id="phone_test" {% if results %}{% for result in results %}{% ifequal result.key 'phone_test' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Type in your phone number</span></dd>
> 				<dt><label for="email_test">Email</label></dt><dd><input type="text" name="email_test" id="email_test" {% if results %}{% for result in results %}{% ifequal result.key 'email_test' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Type in your email address</span></dd>
> 				<dt><label for="comment_test">Comment</label></dt><dd><textarea name="comment_test" id="comment_test">{% if results %}{% for result in results %}{% ifequal result.key 'comment_test' %}{% if result.valid %}{{ result.value }}</textarea><span{% else %}</textarea><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}</textarea><span{% endif %}>Type in your comment</span></dd>
> 			</dl>
> 			<div><input type="submit" value="Submit" /></div>
> 		</form>
> 	</body>
> </html>
> 
Index: applicant.html
===================================================================
0a1,29
> <!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
> <html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
> 	<head>
> 		<title>C S 373: 54270: TA Matching: Applicant</title>
> 
> 		<link rel="stylesheet" type="text/css" href="/style/reset.css" />
> 		<link rel="stylesheet" type="text/css" href="/style/main.css" />
> 
> 		<script type="text/javascript" src="/js/load.js"></script>
> 		<script type="text/javascript" src="/js/setHighlight.js"></script>
> 		<script type="text/javascript" src="/js/formInputHighlight.js"></script>
> 		<script type="text/javascript" src="/js/formTextareaHighlight.js"></script>
> 	</head>
> 
> 	<body>
> 		<form action="/submitted" method="post">
> 			<dl>
> 				<dt><label for="name_test">Name</label></dt><dd><input type="text" name="name_test" id="name_test" {% if results %}{% for result in results %}{% ifequal result.key 'name_test' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Type in your name, at least one char</span></dd>
> 				<dt><label for="password_test">Password</label></dt><dd><input type="password" name="password_test" id="password_test" {% if results %}{% for result in results %}{% ifequal result.key 'password_test' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Type in your password, at least six chars</span></dd>
> 				<dt><label for="address_test">Address</label></dt><dd><input type="text" name="address_test" id="address_test" {% if results %}{% for result in results %}{% ifequal result.key 'address_test' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Type in your address</span></dd>
> 				<dt><label for="phone_test">Phone</label></dt><dd><input type="text" name="phone_test" id="phone_test" {% if results %}{% for result in results %}{% ifequal result.key 'phone_test' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Type in your phone number</span></dd>
> 				<dt><label for="email_test">Email</label></dt><dd><input type="text" name="email_test" id="email_test" {% if results %}{% for result in results %}{% ifequal result.key 'email_test' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Type in your email address</span></dd>
> 				<dt><label for="comment_test">Comment</label></dt><dd><textarea name="comment_test" id="comment_test">{% if results %}{% for result in results %}{% ifequal result.key 'comment_test' %}{% if result.valid %}{{ result.value }}</textarea><span{% else %}</textarea><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}</textarea><span{% endif %}>Type in your comment</span></dd>
> 			</dl>
> 			<div><input type="submit" value="Submit" /></div>
> 		</form>
> 	</body>
> </html>
> 

***************************
* Changes in revision 8 
***************************

------------------------------------------------------------------------
r8 | levi | 2009-03-23 19:21:21 -0500 (Mon, 23 Mar 2009) | 1 line

Added index.html to link to forms
------------------------------------------------------------------------

Index: index.html
===================================================================
0a1,13
> <!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
> <html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
> 	<head>
> 		<title>C S 373: 54270: TA Matching</title>
> 	</head>
> 
> 	<body>
> 		<div><a href="applicant">Applicants</a></div>
> 		<div><a href="instructor">Instructors</a></div>
> 		<div><a href="admin">Admins</a></div>
> 	</body>
> </html>
> 

***************************
* Changes in revision 9 
***************************

------------------------------------------------------------------------
r9 | levi | 2009-03-23 19:30:27 -0500 (Mon, 23 Mar 2009) | 1 line

Added index.html to link to forms - fixed
------------------------------------------------------------------------

Index: index.html
===================================================================
1,13d0
< <!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
< <html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
< 	<head>
< 		<title>C S 373: 54270: TA Matching</title>
< 	</head>
< 
< 	<body>
< 		<div><a href="applicant">Applicants</a></div>
< 		<div><a href="instructor">Instructors</a></div>
< 		<div><a href="admin">Admins</a></div>
< 	</body>
< </html>
< 
Index: app.yaml
===================================================================
12a13,15
> - url: /
>   static_dir: static_html
> 
Index: static_html/index.html
===================================================================
0a1,13
> <!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
> <html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
> 	<head>
> 		<title>C S 373: 54270: TA Matching</title>
> 	</head>
> 
> 	<body>
> 		<div><a href="applicant">Applicants</a></div>
> 		<div><a href="instructor">Instructors</a></div>
> 		<div><a href="admin">Admins</a></div>
> 	</body>
> </html>
> 

***************************
* Changes in revision 10 
***************************

------------------------------------------------------------------------
r10 | levi | 2009-03-23 19:57:33 -0500 (Mon, 23 Mar 2009) | 1 line

Added support for future dynamic version of index.html
------------------------------------------------------------------------

Index: app.yaml
===================================================================
13,15d12
< - url: /
<   static_dir: static_html
< 
Index: index.html
===================================================================
0a1,13
> <!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
> <html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
> 	<head>
> 		<title>C S 373: 54270: TA Matching</title>
> 	</head>
> 
> 	<body>
> 		<div><a href="applicant">Applicants</a></div>
> 		<div><a href="instructor">Instructors</a></div>
> 		<div><a href="admin">Admins</a></div>
> 	</body>
> </html>
> 
Index: applicant.html
===================================================================
18,19c18,20
< 				<dt><label for="name_test">Name</label></dt><dd><input type="text" name="name_test" id="name_test" {% if results %}{% for result in results %}{% ifequal result.key 'name_test' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Type in your name, at least one char</span></dd>
< 				<dt><label for="password_test">Password</label></dt><dd><input type="password" name="password_test" id="password_test" {% if results %}{% for result in results %}{% ifequal result.key 'password_test' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Type in your password, at least six chars</span></dd>
---
> 				<dt><label for="phone_applicant">Phone</label></dt><dd><input type="text" name="phone_applicant" id="phone_applicant" {% if results %}{% for result in results %}{% ifequal result.key 'phone_applicant' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Type in your phone number</span></dd>
> 				<dt><label for="email_test">Email</label></dt><dd><input type="text" name="email_test" id="email_test" {% if results %}{% for result in results %}{% ifequal result.key 'email_test' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Type in your email address</span></dd>
> 				<dt><label for="date_test">Phone</label></dt><dd><input type="text" name="phone_test" id="phone_test" {% if results %}{% for result in results %}{% ifequal result.key 'phone_test' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Type in your phone number</span></dd>
21d21
< 				<dt><label for="phone_test">Phone</label></dt><dd><input type="text" name="phone_test" id="phone_test" {% if results %}{% for result in results %}{% ifequal result.key 'phone_test' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Type in your phone number</span></dd>
Index: index.py
===================================================================
6a7,12
> class Index(webapp.RequestHandler):
> 	def get(self):
> 		template_values = {}
> 		path = os.path.join(os.path.dirname(__file__), 'index.html')
> 		self.response.out.write(template.render(path, template_values))
> 
69,70d74
< #		self.response.headers['Content-Type'] = 'text/html'
< #		self.response.out.write('True' if validator.valid else 'False')
80c84,85
<                                       ('/admin', Admin)],
---
>                                       ('/admin', Admin),
>                                       ('/.*', Index)],

***************************
* Changes in revision 11 
***************************

------------------------------------------------------------------------
r11 | levi | 2009-03-23 22:40:26 -0500 (Mon, 23 Mar 2009) | 1 line

Made applicant form
------------------------------------------------------------------------

Index: applicant.html
===================================================================
16c16
< 		<form action="/submitted" method="post">
---
> 		<form action="/applicant" method="post">
18,23c18,29
< 				<dt><label for="phone_applicant">Phone</label></dt><dd><input type="text" name="phone_applicant" id="phone_applicant" {% if results %}{% for result in results %}{% ifequal result.key 'phone_applicant' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Type in your phone number</span></dd>
< 				<dt><label for="email_test">Email</label></dt><dd><input type="text" name="email_test" id="email_test" {% if results %}{% for result in results %}{% ifequal result.key 'email_test' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Type in your email address</span></dd>
< 				<dt><label for="date_test">Phone</label></dt><dd><input type="text" name="phone_test" id="phone_test" {% if results %}{% for result in results %}{% ifequal result.key 'phone_test' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Type in your phone number</span></dd>
< 				<dt><label for="address_test">Address</label></dt><dd><input type="text" name="address_test" id="address_test" {% if results %}{% for result in results %}{% ifequal result.key 'address_test' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Type in your address</span></dd>
< 				<dt><label for="email_test">Email</label></dt><dd><input type="text" name="email_test" id="email_test" {% if results %}{% for result in results %}{% ifequal result.key 'email_test' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Type in your email address</span></dd>
< 				<dt><label for="comment_test">Comment</label></dt><dd><textarea name="comment_test" id="comment_test">{% if results %}{% for result in results %}{% ifequal result.key 'comment_test' %}{% if result.valid %}{{ result.value }}</textarea><span{% else %}</textarea><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}</textarea><span{% endif %}>Type in your comment</span></dd>
---
> 				<dt><label for="phone_applicant">Phone</label></dt><dd><input type="text" name="phone_applicant" id="phone_applicant" {% if results %}{% for result in results %}{% ifequal result.key 'phone_applicant' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>What is your phone number?</span></dd>
> 				<dt><label for="email_applicant">Email</label></dt><dd><input type="text" name="email_applicant" id="email_applicant" {% if results %}{% for result in results %}{% ifequal result.key 'email_applicant' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>What is your email address?</span></dd>
> 				<dt><label for="comment_major">Major field</label></dt><dd><input type="text" name="comment_major" id="comment_major" {% if results %}{% for result in results %}{% ifequal result.key 'comment_major' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>What is your major field?</span></dd>
> 				<dt><label for="comment_admission">Admission date</label></dt><dd><input type="text" name="comment_admission" id="comment_admission" {% if results %}{% for result in results %}{% ifequal result.key 'comment_admission' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>What is your admission date?</span></dd>
> 				<dt><label for="comment_phd">PhD or Masters</label></dt><dd><input type="text" name="comment_phd" id="comment_phd" {% if results %}{% for result in results %}{% ifequal result.key 'comment_phd' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Do you have a PhD or Masters? Type in "PhD" or "Masters".</span></dd>
> 				<dt><label for="comment_supervising">Supervising professor</label></dt><dd><input type="text" name="comment_supervising" id="comment_supervising" {% if results %}{% for result in results %}{% ifequal result.key 'comment_supervising' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Who is your supervising professor?</span></dd>
> 				<dt><label for="comment_citizen">Citizen or resident</label></dt><dd><input type="text" name="comment_citizen" id="comment_citizen" {% if results %}{% for result in results %}{% ifequal result.key 'comment_citizen' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Are you a citizen or resident? Type in "citizen" or "resident".</span></dd>
> 				<dt><label for="comment_native">Native English speaker</label></dt><dd><input type="text" name="comment_native" id="comment_native" {% if results %}{% for result in results %}{% ifequal result.key 'comment_native' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Are you a native English speaker? Type in "yes" or "no".</span></dd>
> 				<dt><label for="comment_ta">TA history</label></dt><dd><input type="text" name="comment_ta" id="comment_ta" {% if results %}{% for result in results %}{% ifequal result.key 'comment_ta' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Do you have a history being a TA? Type in "yes" or "no".</span></dd>
> 				<dt><label for="comment_programming">Programming languages</label></dt><dd><input type="text" name="comment_programming" id="comment_programming" {% if results %}{% for result in results %}{% ifequal result.key 'comment_programming' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>What programming languages do you know?</span></dd>
> 				<dt><label for="comment_area">Area of specialization</label></dt><dd><input type="text" name="comment_area" id="comment_area" {% if results %}{% for result in results %}{% ifequal result.key 'comment_area' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>What is your area of specialization?</span></dd>
> 				<dt><label for="comment_qualified">Course qualified to teach</label></dt><dd><input type="text" name="comment_qualified" id="comment_qualified" {% if results %}{% for result in results %}{% ifequal result.key 'comment_qualified' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>What course(s) are you qualified to teach?</span></dd>

***************************
* Changes in revision 12 
***************************

------------------------------------------------------------------------
r12 | levi | 2009-03-23 22:55:05 -0500 (Mon, 23 Mar 2009) | 1 line

Added instructor form
------------------------------------------------------------------------

Index: instructor.html
===================================================================
16c16
< 		<form action="/submitted" method="post">
---
> 		<form action="instructor" method="post">
18,23c18,21
< 				<dt><label for="name_test">Name</label></dt><dd><input type="text" name="name_test" id="name_test" {% if results %}{% for result in results %}{% ifequal result.key 'name_test' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Type in your name, at least one char</span></dd>
< 				<dt><label for="password_test">Password</label></dt><dd><input type="password" name="password_test" id="password_test" {% if results %}{% for result in results %}{% ifequal result.key 'password_test' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Type in your password, at least six chars</span></dd>
< 				<dt><label for="address_test">Address</label></dt><dd><input type="text" name="address_test" id="address_test" {% if results %}{% for result in results %}{% ifequal result.key 'address_test' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Type in your address</span></dd>
< 				<dt><label for="phone_test">Phone</label></dt><dd><input type="text" name="phone_test" id="phone_test" {% if results %}{% for result in results %}{% ifequal result.key 'phone_test' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Type in your phone number</span></dd>
< 				<dt><label for="email_test">Email</label></dt><dd><input type="text" name="email_test" id="email_test" {% if results %}{% for result in results %}{% ifequal result.key 'email_test' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Type in your email address</span></dd>
< 				<dt><label for="comment_test">Comment</label></dt><dd><textarea name="comment_test" id="comment_test">{% if results %}{% for result in results %}{% ifequal result.key 'comment_test' %}{% if result.valid %}{{ result.value }}</textarea><span{% else %}</textarea><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}</textarea><span{% endif %}>Type in your comment</span></dd>
---
> 				<dt><label for="comment_wanted">Specific wanted students</label></dt><dd><input type="text" name="comment_wanted" id="comment_wanted" {% if results %}{% for result in results %}{% ifequal result.key 'comment_wanted' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Are there any students you specifically want?</span></dd>
> 				<dt><label for="comment_unwanted">Specific unwanted students</label></dt><dd><input type="text" name="comment_unwanted" id="comment_unwanted" {% if results %}{% for result in results %}{% ifequal result.key 'comment_unwanted' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Are there any students you specifically don't want?</span></dd>
> 				<dt><label for="comment_native">Native English speaker</label></dt><dd><input type="text" name="comment_native" id="comment_native" {% if results %}{% for result in results %}{% ifequal result.key 'comment_native' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Are you a native English speaker? Type in "yes" or "no".</span></dd>
> 				<dt><label for="comment_specialization">Background in a particular area of specialization</label></dt><dd><input type="text" name="comment_specialization" id="comment_specialization" {% if results %}{% for result in results %}{% ifequal result.key 'comment_specialization' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Background in a particular area of specialization?</span></dd>
Index: applicant.html
===================================================================
16c16
< 		<form action="/applicant" method="post">
---
> 		<form action="applicant" method="post">

***************************
* Changes in revision 13 
***************************

------------------------------------------------------------------------
r13 | levi | 2009-03-23 23:05:50 -0500 (Mon, 23 Mar 2009) | 1 line

Added admin form
------------------------------------------------------------------------

Index: admin.html
===================================================================
16c16
< 		<form action="/submitted" method="post">
---
> 		<form action="admin" method="post">
18,23c18,22
< 				<dt><label for="name_test">Name</label></dt><dd><input type="text" name="name_test" id="name_test" {% if results %}{% for result in results %}{% ifequal result.key 'name_test' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Type in your name, at least one char</span></dd>
< 				<dt><label for="password_test">Password</label></dt><dd><input type="password" name="password_test" id="password_test" {% if results %}{% for result in results %}{% ifequal result.key 'password_test' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Type in your password, at least six chars</span></dd>
< 				<dt><label for="address_test">Address</label></dt><dd><input type="text" name="address_test" id="address_test" {% if results %}{% for result in results %}{% ifequal result.key 'address_test' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Type in your address</span></dd>
< 				<dt><label for="phone_test">Phone</label></dt><dd><input type="text" name="phone_test" id="phone_test" {% if results %}{% for result in results %}{% ifequal result.key 'phone_test' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Type in your phone number</span></dd>
< 				<dt><label for="email_test">Email</label></dt><dd><input type="text" name="email_test" id="email_test" {% if results %}{% for result in results %}{% ifequal result.key 'email_test' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Type in your email address</span></dd>
< 				<dt><label for="comment_test">Comment</label></dt><dd><textarea name="comment_test" id="comment_test">{% if results %}{% for result in results %}{% ifequal result.key 'comment_test' %}{% if result.valid %}{{ result.value }}</textarea><span{% else %}</textarea><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}</textarea><span{% endif %}>Type in your comment</span></dd>
---
> 				<dt><label for="comment_class_name">Class number/name</label></dt><dd><input type="text" name="comment_class_name" id="comment_class_name" {% if results %}{% for result in results %}{% ifequal result.key 'comment_class_name' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>What is the class's number/name?</span></dd>
> 				<dt><label for="comment_inst_name">Instructor's name</label></dt><dd><input type="text" name="comment_inst_name" id="comment_inst_name" {% if results %}{% for result in results %}{% ifequal result.key 'comment_inst_name' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>What instructor will teach the class?</span></dd>
> 				<dt><label for="comment_exp_enrollment">Expected enrollment</label></dt><dd><input type="text" name="comment_exp_enrollment" id="comment_exp_enrollment" {% if results %}{% for result in results %}{% ifequal result.key 'comment_exp_enrollment' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>How many students are expected to enroll?</span></dd>
> 				<dt><label for="comment_num_ta_needed">Number of TAs needed</label></dt><dd><input type="text" name="comment_num_ta_needed" id="comment_num_ta_needed" {% if results %}{% for result in results %}{% ifequal result.key 'comment_num_ta_needed' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>How many TAs will be needed?</span></dd>
> 				<dt><label for="comment_num_ta_assigned">Number of TAs assigned</label></dt><dd><input type="text" name="comment_num_ta_assigned" id="comment_num_ta_assigned" {% if results %}{% for result in results %}{% ifequal result.key 'comment_num_ta_assigned' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>How many TAs are assigned?</span></dd>

***************************
* Changes in revision 14 
***************************

------------------------------------------------------------------------
r14 | levi | 2009-03-24 00:21:47 -0500 (Tue, 24 Mar 2009) | 1 line

Cleaned up index.py
------------------------------------------------------------------------

Index: index.py
===================================================================
9d8
< 		template_values = {}
11c10
< 		self.response.out.write(template.render(path, template_values))
---
> 		self.response.out.write(template.render(path, {}))

***************************
* Changes in revision 15 
***************************

------------------------------------------------------------------------
r15 | estesox | 2009-03-24 16:31:06 -0500 (Tue, 24 Mar 2009) | 2 lines

Jeffery Zhu and Ji-Hoon Woo's Validations and Unit Tests

------------------------------------------------------------------------

Index: TestValidation.py
===================================================================
0a1,148
> #!/usr/bin/env python
> 
> # ------------
> # TestValidation.py
> # ------------
> 
> import unittest
> import Validation
> 
> # ---------
> # TestAdmin
> # ---------
> 
> class TestAdmin (unittest.TestCase) :
>     # ------------
>     # phone_number
>     # ------------
>     def testPhoneNumber1 (self) :
>         self.assert_(not Validation.phone_number('abc'))
>     def testPhoneNumber2 (self) :
>         self.assert_(Validation.phone_number('123-4567'))
>     def testPhoneNumber3 (self) :
>         self.assert_(not Validation.phone_number('11-123-4567'))
>     def testPhoneNumber4 (self) :
>         self.assert_(Validation.phone_number('123-123-4567'))
>     def testPhoneNumber5 (self) :
>         self.assert_(not Validation.phone_number('123-45-67'))
>     def testPhoneNumber6 (self) :
>         self.assert_(not Validation.phone_number('123-4567-1'))
>     # ------------
>     # phone_number_ext
>     # ------------
>     def testphone_number_ext1 (self) :
>         self.assert_(not Validation.phone_number_ext('abc'))
>     def testphone_number_ext2 (self) :
>         self.assert_(Validation.phone_number_ext(''))
>     def testphone_number_ext3 (self) :
>         self.assert_(Validation.phone_number_ext('11'))
>     def testphone_number_ext4 (self) :
>         self.assert_(Validation.phone_number_ext('11111'))
>     # ------------
>     # email
>     # ------------
>     def testemail1 (self) :
>         self.assert_(not Validation.email('abc'))
>     def testemail2 (self) :
>         self.assert_(not Validation.email('abc@11..com'))
>     def testemail3 (self) :
>         self.assert_(not Validation.email('abc..aa@asdf.com'))
>     def testemail4 (self) :
>         self.assert_(Validation.email('abc_asdf@adsfasd.org'))
>     def testemail5 (self) :
>         self.assert_(Validation.email('asdfasdf@cs.asdf.edu'))
>     def testemail6 (self) :
>         self.assert_(Validation.email('abc@asdf.asdf.asdf.asdf.asdf.com'))
>     def testemail7 (self) :
>         self.assert_(not Validation.email('.asdf@sdfsdaf.com'))
>     def testemail8 (self) :
>         self.assert_(not Validation.email('abc.@asdfasd.com'))
>     def testemail9 (self) :
>         self.assert_(Validation.email('-abc@asdfasd.com'))
>     def testemail10 (self) :
>         self.assert_(Validation.email('abc.aaa@asdfasd.com'))
>     def testemail11 (self) :
>         self.assert_(not Validation.email('ab c@asdfasd.com'))
>     def testemail12 (self) :
>         self.assert_(not Validation.email('ab#$c@asdfasd.com'))
>     def testemail13 (self) :
>         self.assert_(not Validation.email('ab@c@asdfasd.com'))
>     # ------------
>     # date
>     # ------------
>     def testdate1 (self) :
>         self.assert_(not Validation.date('00-12-1999'))
>     def testdate2 (self) :
>         self.assert_(not Validation.date('02-30-1999'))
>     def testdate3 (self) :
>         self.assert_(not Validation.date('13-12-1999'))
>     def testdate4 (self) :
>         self.assert_(not Validation.date('01-00-1999'))
>     def testdate5 (self) :
>         self.assert_(Validation.date('02-28-1999'))
>     def testdate6 (self) :
>         self.assert_(not Validation.date('00-42-1999'))
>     def testdate7 (self) :
>         self.assert_(not Validation.date('00-12-99'))
>     def testdate8 (self) :
>         self.assert_(not Validation.date('00-00-12-1999'))
>     def testdate9 (self) :
>         self.assert_(not Validation.date('01-1-1999'))
>     def testdate10 (self) :
>         self.assert_(not Validation.date('5-12-1999'))
>     def testdate11 (self) :
>         self.assert_(not Validation.date('04-31-1999'))
>     def testdate12 (self) :
>         self.assert_(Validation.date('04-30-1999'))
>     # ------------
>     # name
>     # ------------
>     def testname1 (self) :
>         self.assert_(not Validation.name('aaa'))
>     def testname2 (self) :
>         self.assert_(Validation.name('Aaa'))
>     def testname3 (self) :
>         self.assert_(Validation.name('Aaa-dd'))
>     def testname4 (self) :
>         self.assert_(not Validation.name('8aaa'))
>     def testname5 (self) :
>         self.assert_(not Validation.name(''))
>     def testname6 (self) :
>         self.assert_(not Validation.name('Baa--'))
>     def testname7 (self) :
>         self.assert_(not Validation.name('Aa$'))
>     def testname8 (self) :
>         self.assert_(not Validation.name('Ba a'))
>     # ------------
>     # class_number
>     # ------------
>     def testclass_number1 (self) :
>         self.assert_(not Validation.class_number('aaa'))
>     def testclass_number2 (self) :
>         self.assert_(not Validation.class_number('cs'))
>     def testclass_number3 (self) :
>         self.assert_(not Validation.class_number('cs1'))
>     def testclass_number4 (self) :
>         self.assert_(Validation.class_number('cs987'))
>     def testclass_number5 (self) :
>         self.assert_(Validation.class_number('CS987'))
>     def testclass_number6 (self) :
>         self.assert_(not Validation.class_number('cs*76'))
>     def testclass_number7 (self) :
>         self.assert_(not Validation.class_number('Cs333'))
>     def testclass_number8 (self) :
>         self.assert_(not Validation.class_number('cS123'))
>     def testclass_number9 (self) :
>         self.assert_(not Validation.class_number('ee315'))
>     # ------------
>     # number
>     # ------------
>     def testnumber1 (self) :
>         self.assert_(not Validation.number('aaa'))
>     def testnumber2 (self) :
>         self.assert_(not Validation.number(''))
>     def testnumber3 (self) :
>         self.assert_(Validation.number('12312323'))
> 
> if __name__ == "__main__" :
>     unittest.main()
Index: Validation.py
===================================================================
0a1,50
> #!/usr/bin/env python
> 
> # -------------
> # Validation.py
> # -------------
> 
> import re
> 
> # ------------
> # phone_number
> # ------------
> def phone_number (s) :
>         return not re.search('^(\d\d\d-)?\d\d\d-\d\d\d\d$', s) is None
> # ----------------
> # phone_number_ext
> # ----------------
> def phone_number_ext (s) :
>         return not re.search('^(\d)*$',s) is None
> # ------------
> # email
> # ------------
> def email (s) :
>         return not re.search('(^(\w|\-|\_)+((\.)?(\w|\-|\_)+)*)\@(\w)+(\-|\w)*(\w)+((\.)?(\w)+(\-|\w)*(\w)+)*\.(com|net|org|gov|edu)$', s) is None
> # ------------
> # date
> # ------------
> def date (s) :
>         result = False
>         #Feb
>         if(not re.search('^(02)\-((0[1-9])|((1|2)(\d)))\-[0-9][0-9][0-9][0-9]$',s) is None): return True
>         #Jan, Mar, May...
>         if(not re.search('^(01|03|05|07|08|10|12)\-(30|31|(((0[1-9])|((1|2)(\d)))))\-[0-9][0-9][0-9][0-9]$',s) is None): return True
>         #Apr, Jun, Sep, Nov
>         if(not re.search('^(04|06|09|11)\-(30|(((0[1-9])|((1|2)(\d)))))\-[0-9][0-9][0-9][0-9]$',s) is None): return True
>         return False
> # ------------
> # name
> # ------------
> def name (s) :
>         return not re.search('^[A-Z][a-zA-Z\'\-]*[a-zA-Z]$',s) is None
> # ------------
> # class_number
> # ------------
> def class_number (s) :
>         return not re.search('(^cs\d\d\d)|(^CS\d\d\d)',s) is None
> # ------------
> # number
> # ------------
> def number (s) :
>         return not re.search('^(\d)+$',s) is None

***************************
* Changes in revision 16 
***************************

------------------------------------------------------------------------
r16 | ting | 2009-03-25 14:13:28 -0500 (Wed, 25 Mar 2009) | 1 line

modify TA1.txt to include section for own contributions.
------------------------------------------------------------------------

Index: TA1.txt
===================================================================
42a43,48
> ------------------------------
> My Contribution to the Project
> ------------------------------
> 
> 
> 
46a53,61
> Name: HanPing Ting
> 
> Name: Ji-Hoon Woo
> 
> Name: Levi Wiseman
> 
> Name: Sariph Shrestha
> 
> Name: Jeffery Zhu

***************************
* Changes in revision 17 
***************************

------------------------------------------------------------------------
r17 | jeffery | 2009-03-25 14:16:54 -0500 (Wed, 25 Mar 2009) | 5 lines

Made applicant.html more readable.
Started using Validation.py's functions in validator.py

Jeffery Zhu

------------------------------------------------------------------------

Index: validator.py
===================================================================
1a2
> import Validation
17c18
< 				'name'     : lambda: True if re.match('.+', value) else False,
---
> 				'name'     : Validation.name(value),
20c21
< 				'phone'    : lambda: True if re.match('.+', value) else False,
---
> 				'phone'    : Validation.phone_number(value),
22c23
< 				'email'    : lambda: True if re.match('[a-zA-Z0-9!#$%&\'*+/=?^_`{|}~-]+(?:\.[a-zA-Z0-9!#$%&\'*+/=?^_`{|}~-]+)*@(?:[a-zA-Z0-9](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?\.)+[a-zA-Z0-9](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?', value) else False,
---
> 				'email'    : Validation.email(value),
27a29,44
> #		for key, value in form_data:
> #			result = {}
> #			result['key'] = key
> #			result['value'] = value
> #			ghetto_switch = {
> #				'name'     : lambda: True if re.match('.+', value) else False,
> #				'password' : lambda: True if re.match('.{6,30}', value) else False,
> #				'address'  : lambda: True if re.match('.+', value) else False,
> #				'phone'    : lambda: True if re.match('.+', value) else False,
> #				# lol, this is ALMOST to RFC 2822, doesn't handle double quoted sections before '@' or square bracket Internet address after, perfect bug op
> #				'email'    : lambda: True if re.match('[a-zA-Z0-9!#$%&\'*+/=?^_`{|}~-]+(?:\.[a-zA-Z0-9!#$%&\'*+/=?^_`{|}~-]+)*@(?:[a-zA-Z0-9](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?\.)+[a-zA-Z0-9](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?', value) else False,
> #				'comment'  : lambda: True if re.match('.+', value) else False,
> #			}[key.split('_')[0]]()
> #			result['valid'] = True if ghetto_switch else False
> #			self.results.append(result)
> 
Index: applicant.html
===================================================================
18,29c18,77
< 				<dt><label for="phone_applicant">Phone</label></dt><dd><input type="text" name="phone_applicant" id="phone_applicant" {% if results %}{% for result in results %}{% ifequal result.key 'phone_applicant' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>What is your phone number?</span></dd>
< 				<dt><label for="email_applicant">Email</label></dt><dd><input type="text" name="email_applicant" id="email_applicant" {% if results %}{% for result in results %}{% ifequal result.key 'email_applicant' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>What is your email address?</span></dd>
< 				<dt><label for="comment_major">Major field</label></dt><dd><input type="text" name="comment_major" id="comment_major" {% if results %}{% for result in results %}{% ifequal result.key 'comment_major' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>What is your major field?</span></dd>
< 				<dt><label for="comment_admission">Admission date</label></dt><dd><input type="text" name="comment_admission" id="comment_admission" {% if results %}{% for result in results %}{% ifequal result.key 'comment_admission' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>What is your admission date?</span></dd>
< 				<dt><label for="comment_phd">PhD or Masters</label></dt><dd><input type="text" name="comment_phd" id="comment_phd" {% if results %}{% for result in results %}{% ifequal result.key 'comment_phd' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Do you have a PhD or Masters? Type in "PhD" or "Masters".</span></dd>
< 				<dt><label for="comment_supervising">Supervising professor</label></dt><dd><input type="text" name="comment_supervising" id="comment_supervising" {% if results %}{% for result in results %}{% ifequal result.key 'comment_supervising' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Who is your supervising professor?</span></dd>
< 				<dt><label for="comment_citizen">Citizen or resident</label></dt><dd><input type="text" name="comment_citizen" id="comment_citizen" {% if results %}{% for result in results %}{% ifequal result.key 'comment_citizen' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Are you a citizen or resident? Type in "citizen" or "resident".</span></dd>
< 				<dt><label for="comment_native">Native English speaker</label></dt><dd><input type="text" name="comment_native" id="comment_native" {% if results %}{% for result in results %}{% ifequal result.key 'comment_native' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Are you a native English speaker? Type in "yes" or "no".</span></dd>
< 				<dt><label for="comment_ta">TA history</label></dt><dd><input type="text" name="comment_ta" id="comment_ta" {% if results %}{% for result in results %}{% ifequal result.key 'comment_ta' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Do you have a history being a TA? Type in "yes" or "no".</span></dd>
< 				<dt><label for="comment_programming">Programming languages</label></dt><dd><input type="text" name="comment_programming" id="comment_programming" {% if results %}{% for result in results %}{% ifequal result.key 'comment_programming' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>What programming languages do you know?</span></dd>
< 				<dt><label for="comment_area">Area of specialization</label></dt><dd><input type="text" name="comment_area" id="comment_area" {% if results %}{% for result in results %}{% ifequal result.key 'comment_area' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>What is your area of specialization?</span></dd>
< 				<dt><label for="comment_qualified">Course qualified to teach</label></dt><dd><input type="text" name="comment_qualified" id="comment_qualified" {% if results %}{% for result in results %}{% ifequal result.key 'comment_qualified' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>What course(s) are you qualified to teach?</span></dd>
---
> 				<dt><label for="phone_applicant">Phone</label></dt><dd>
> 				<input type="text" name="phone_applicant" id="phone_applicant" {% if results %}{% for result in results %}{% ifequal result.key 'phone_applicant' %}{% if result.valid %}value="{{ result.value }}" />
> 				<span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><
> 				span{% endif %}>What is your phone number?</span></dd>
> 
> 				<dt><label for="email_applicant">Email</label></dt><dd>
> 				<input type="text" name="email_applicant" id="email_applicant" {% if results %}{% for result in results %}{% ifequal result.key 'email_applicant' %}{% if result.valid %}value="{{ result.value }}" />
> 				<span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/>
> 				<span{% endif %}>What is your email address?</span></dd>
> 
> 				<dt><label for="comment_major">Major field</label></dt><dd>
> 				<input type="text" name="comment_major" id="comment_major" {% if results %}{% for result in results %}{% ifequal result.key 'comment_major' %}{% if result.valid %}value="{{ result.value }}" />
> 				<span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/>
> 				<span{% endif %}>What is your major field?</span></dd>
> 
> 				<dt><label for="comment_admission">Admission date</label></dt>
> 				<dd><input type="text" name="comment_admission" id="comment_admission" {% if results %}{% for result in results %}{% ifequal result.key 'comment_admission' %}{% if result.valid %}value="{{ result.value }}" />
> 				<span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/>
> 				<span{% endif %}>What is your admission date?</span></dd>
> 
> 				<dt><label for="comment_phd">PhD or Masters</label></dt>
> 				<dd><input type="text" name="comment_phd" id="comment_phd" {% if results %}{% for result in results %}{% ifequal result.key 'comment_phd' %}{% if result.valid %}value="{{ result.value }}" />
> 				<span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/>
> 				<span{% endif %}>Do you have a PhD or Masters? Type in "PhD" or "Masters".</span></dd>
> 
> 				<dt><label for="comment_supervising">Supervising professor</label></dt>
> 				<dd><input type="text" name="comment_supervising" id="comment_supervising" {% if results %}{% for result in results %}{% ifequal result.key 'comment_supervising' %}{% if result.valid %}value="{{ result.value }}" />
> 				<span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/>
> 				<span{% endif %}>Who is your supervising professor?</span></dd>
> 
> 				<dt><label for="comment_citizen">Citizen or resident</label></dt>
> 				<dd><input type="text" name="comment_citizen" id="comment_citizen" {% if results %}{% for result in results %}{% ifequal result.key 'comment_citizen' %}{% if result.valid %}value="{{ result.value }}" />
> 				<span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/>
> 				<span{% endif %}>Are you a citizen or resident? Type in "citizen" or "resident".</span></dd>
> 
> 				<dt><label for="comment_native">Native English speaker</label></dt>
> 				<dd><input type="text" name="comment_native" id="comment_native" {% if results %}{% for result in results %}{% ifequal result.key 'comment_native' %}{% if result.valid %}value="{{ result.value }}" />
> 				<span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/>
> 				<span{% endif %}>Are you a native English speaker? Type in "yes" or "no".</span></dd>
> 
> 				<dt><label for="comment_ta">TA history</label></dt>
> 				<dd><input type="text" name="comment_ta" id="comment_ta" {% if results %}{% for result in results %}{% ifequal result.key 'comment_ta' %}{% if result.valid %}value="{{ result.value }}" />
> 				<span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/>
> 				<span{% endif %}>Do you have a history being a TA? Type in "yes" or "no".</span></dd>
> 
> 				<dt><label for="comment_programming">Programming languages</label></dt>
> 				<dd><input type="text" name="comment_programming" id="comment_programming" {% if results %}{% for result in results %}{% ifequal result.key 'comment_programming' %}{% if result.valid %}value="{{ result.value }}" />
> 				<span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/>
> 				<span{% endif %}>What programming languages do you know?</span></dd>
> 
> 				<dt><label for="comment_area">Area of specialization</label></dt>
> 				<dd><input type="text" name="comment_area" id="comment_area" {% if results %}{% for result in results %}{% ifequal result.key 'comment_area' %}{% if result.valid %}value="{{ result.value }}" />
> 				<span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/>
> 				<span{% endif %}>What is your area of specialization?</span></dd>
> 
> 				<dt><label for="comment_qualified">Course qualified to teach</label></dt>
> 				<dd><input type="text" name="comment_qualified" id="comment_qualified" {% if results %}{% for result in results %}{% ifequal result.key 'comment_qualified' %}{% if result.valid %}value="{{ result.value }}" />
> 				<span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/>
> 				<span{% endif %}>What course(s) are you qualified to teach?</span></dd>
> 

***************************
* Changes in revision 18 
***************************

------------------------------------------------------------------------
r18 | jeffery | 2009-03-25 14:18:26 -0500 (Wed, 25 Mar 2009) | 2 lines

Minor fix. Jeffery Zhu

------------------------------------------------------------------------

Index: applicant.html
===================================================================
20,21c20,21
< 				<span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><
< 				span{% endif %}>What is your phone number?</span></dd>
---
> 				<span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/>
> 				<span{% endif %}>What is your phone number?</span></dd>

***************************
* Changes in revision 19 
***************************

------------------------------------------------------------------------
r19 | jeffery | 2009-03-25 14:37:23 -0500 (Wed, 25 Mar 2009) | 7 lines

Made instructor.html and admin.html more readable.

Added all fields to validator.py and used Validation.py functions to perform validation.

Jeffery Zhu


------------------------------------------------------------------------

Index: instructor.html
===================================================================
18,21c18,36
< 				<dt><label for="comment_wanted">Specific wanted students</label></dt><dd><input type="text" name="comment_wanted" id="comment_wanted" {% if results %}{% for result in results %}{% ifequal result.key 'comment_wanted' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Are there any students you specifically want?</span></dd>
< 				<dt><label for="comment_unwanted">Specific unwanted students</label></dt><dd><input type="text" name="comment_unwanted" id="comment_unwanted" {% if results %}{% for result in results %}{% ifequal result.key 'comment_unwanted' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Are there any students you specifically don't want?</span></dd>
< 				<dt><label for="comment_native">Native English speaker</label></dt><dd><input type="text" name="comment_native" id="comment_native" {% if results %}{% for result in results %}{% ifequal result.key 'comment_native' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Are you a native English speaker? Type in "yes" or "no".</span></dd>
< 				<dt><label for="comment_specialization">Background in a particular area of specialization</label></dt><dd><input type="text" name="comment_specialization" id="comment_specialization" {% if results %}{% for result in results %}{% ifequal result.key 'comment_specialization' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Background in a particular area of specialization?</span></dd>
---
> 				<dt><label for="comment_wanted">Specific wanted students</label></dt>
> 				<dd><input type="text" name="comment_wanted" id="comment_wanted" {% if results %}{% for result in results %}{% ifequal result.key 'comment_wanted' %}{% if result.valid %}value="{{ result.value }}" />
> 				<span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/>
> 				<span{% endif %}>Are there any students you specifically want?</span></dd>
> 
> 				<dt><label for="comment_unwanted">Specific unwanted students</label></dt>
> 				<dd><input type="text" name="comment_unwanted" id="comment_unwanted" {% if results %}{% for result in results %}{% ifequal result.key 'comment_unwanted' %}{% if result.valid %}value="{{ result.value }}" />
> 				<span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/>
> 				<span{% endif %}>Are there any students you specifically don't want?</span></dd>
> 
> 				<dt><label for="comment_native">Native English speaker</label></dt>
> 				<dd><input type="text" name="comment_native" id="comment_native" {% if results %}{% for result in results %}{% ifequal result.key 'comment_native' %}{% if result.valid %}value="{{ result.value }}" />
> 				<span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/>
> 				<span{% endif %}>Are you a native English speaker? Type in "yes" or "no".</span></dd>
> 
> 				<dt><label for="comment_specialization">Background in a particular area of specialization</label>
> 				</dt><dd><input type="text" name="comment_specialization" id="comment_specialization" {% if results %}{% for result in results %}{% ifequal result.key 'comment_specialization' %}{% if result.valid %}value="{{ result.value }}" />
> 				<span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/>
> 				<span{% endif %}>Background in a particular area of specialization?</span></dd>
Index: Validation.py
===================================================================
50a51,56
> 
> # ------------
> # comment
> # ------------
> def comment (s) :
>         return not re.search('.+',s) is None
\ No newline at end of file
Index: index.html
===================================================================
7a8
> 		<div>TA Assignment Page for Applicants and Administration
Index: admin.html
===================================================================
18,22c18,41
< 				<dt><label for="comment_class_name">Class number/name</label></dt><dd><input type="text" name="comment_class_name" id="comment_class_name" {% if results %}{% for result in results %}{% ifequal result.key 'comment_class_name' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>What is the class's number/name?</span></dd>
< 				<dt><label for="comment_inst_name">Instructor's name</label></dt><dd><input type="text" name="comment_inst_name" id="comment_inst_name" {% if results %}{% for result in results %}{% ifequal result.key 'comment_inst_name' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>What instructor will teach the class?</span></dd>
< 				<dt><label for="comment_exp_enrollment">Expected enrollment</label></dt><dd><input type="text" name="comment_exp_enrollment" id="comment_exp_enrollment" {% if results %}{% for result in results %}{% ifequal result.key 'comment_exp_enrollment' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>How many students are expected to enroll?</span></dd>
< 				<dt><label for="comment_num_ta_needed">Number of TAs needed</label></dt><dd><input type="text" name="comment_num_ta_needed" id="comment_num_ta_needed" {% if results %}{% for result in results %}{% ifequal result.key 'comment_num_ta_needed' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>How many TAs will be needed?</span></dd>
< 				<dt><label for="comment_num_ta_assigned">Number of TAs assigned</label></dt><dd><input type="text" name="comment_num_ta_assigned" id="comment_num_ta_assigned" {% if results %}{% for result in results %}{% ifequal result.key 'comment_num_ta_assigned' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>How many TAs are assigned?</span></dd>
---
> 				<dt><label for="comment_class_name">Class number/name</label></dt>
> 				<dd><input type="text" name="comment_class_name" id="comment_class_name" {% if results %}{% for result in results %}{% ifequal result.key 'comment_class_name' %}{% if result.valid %}value="{{ result.value }}" />
> 				<span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/>
> 				<span{% endif %}>What is the class's number/name?</span></dd>
> 
> 				<dt><label for="comment_inst_name">Instructor's name</label></dt>
> 				<dd><input type="text" name="comment_inst_name" id="comment_inst_name" {% if results %}{% for result in results %}{% ifequal result.key 'comment_inst_name' %}{% if result.valid %}value="{{ result.value }}" />
> 				<span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/>
> 				<span{% endif %}>What instructor will teach the class?</span></dd>
> 
> 				<dt><label for="comment_exp_enrollment">Expected enrollment</label></dt>
> 				<dd><input type="text" name="comment_exp_enrollment" id="comment_exp_enrollment" {% if results %}{% for result in results %}{% ifequal result.key 'comment_exp_enrollment' %}{% if result.valid %}value="{{ result.value }}" />
> 				<span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/>
> 				<span{% endif %}>How many students are expected to enroll?</span></dd>
> 
> 				<dt><label for="comment_num_ta_needed">Number of TAs needed</label></dt>
> 				<dd><input type="text" name="comment_num_ta_needed" id="comment_num_ta_needed" {% if results %}{% for result in results %}{% ifequal result.key 'comment_num_ta_needed' %}{% if result.valid %}value="{{ result.value }}" />
> 				<span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/>
> 				<span{% endif %}>How many TAs will be needed?</span></dd>
> 
> 				<dt><label for="comment_num_ta_assigned">Number of TAs assigned</label></dt>
> 				<dd><input type="text" name="comment_num_ta_assigned" id="comment_num_ta_assigned" {% if results %}{% for result in results %}{% ifequal result.key 'comment_num_ta_assigned' %}{% if result.valid %}value="{{ result.value }}" />
> 				<span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/>
> 				<span{% endif %}>How many TAs are assigned?</span></dd>
Index: validator.py
===================================================================
18,21c18,21
< 				'name'     : Validation.name(value),
< 				'password' : lambda: True if re.match('.{6,30}', value) else False,
< 				'address'  : lambda: True if re.match('.+', value) else False,
< 				'phone'    : Validation.phone_number(value),
---
> 				#'name'     : Validation.name(value),
> 				#'password' : lambda: True if re.match('.{6,30}', value) else False,
> 				#'address'  : lambda: True if re.match('.+', value) else False,
> 				#'phone'    : Validation.phone_number(value),
23,24c23,53
< 				'email'    : Validation.email(value),
< 				'comment'  : lambda: True if re.match('.+', value) else False,
---
> 				#'email'    : Validation.email(value),
> 				#'comment'  : lambda: True if re.match('.+', value) else False,
> 				
> 				#TA Applicant switches
> 				'phone_applicant'		: Validation.phone_number(value)
> 				'email_applicant'		: Validation.email(value)
> 				'comment_major'			: Validation.comment(value)
> 				'comment_admission'		: Validation.comment(value)
> 				'comment_phd'			: Validation.comment(value)
> 				'comment_supervising'		: Validation.comment(value)
> 				'comment_citizen'		: Validation.comment(value)
> 				'comment_native'		: Validation.comment(value)
> 				'comment_ta'			: Validation.comment(value)
> 				'comment_programming'		: Validation.comment(value)
> 				'comment_area'			: Validation.comment(value)
> 				'comment_qualified'		: Validation.comment(value)
> 			
> 				#Instructor Swicthes
> 				'comment_wanted'		: Validation.comment(value)
> 				'comment_unwanted'		: Validation.comment(value)
> 				'comment_native'		: Validation.comment(value)
> 				'comment_specialization'	: Validation.comment(value)
> 				#Admin switches	
> 				
> 				'comment_class_name'		: Validation.comment(value)
> 				'comment_inst_name'		: Validation.comment(value)
> 				'comment_exp_enrollment'	: Validation.comment(value)
> 				'comment_num_ta_needed'		: Validation.comment(value)
> 				'comment_num_ta_assigned'	: Validation.comment(value)
> 				
> 				

***************************
* Changes in revision 20 
***************************

------------------------------------------------------------------------
r20 | ting | 2009-03-25 16:22:37 -0500 (Wed, 25 Mar 2009) | 1 line

added area code unit test
------------------------------------------------------------------------

Index: TestValidation.py
===================================================================
29a30,31
> 	def testPhoneNumber7 (self) :
> 		self.assert_(Validation.phone_number('(000)123-4567'))
Index: validator.py
===================================================================

***************************
* Changes in revision 21 
***************************

------------------------------------------------------------------------
r21 | ting | 2009-03-25 16:41:21 -0500 (Wed, 25 Mar 2009) | 1 line

modified html files to use relative pathing vs. absolute pathing
------------------------------------------------------------------------

Index: instructor.html
===================================================================
6,7c6,7
< 		<link rel="stylesheet" type="text/css" href="/style/reset.css" />
< 		<link rel="stylesheet" type="text/css" href="/style/main.css" />
---
> 		<link rel="stylesheet" type="text/css" href="style/reset.css" />
> 		<link rel="stylesheet" type="text/css" href="style/main.css" />
9,12c9,12
< 		<script type="text/javascript" src="/js/load.js"></script>
< 		<script type="text/javascript" src="/js/setHighlight.js"></script>
< 		<script type="text/javascript" src="/js/formInputHighlight.js"></script>
< 		<script type="text/javascript" src="/js/formTextareaHighlight.js"></script>
---
> 		<script type="text/javascript" src="js/load.js"></script>
> 		<script type="text/javascript" src="js/setHighlight.js"></script>
> 		<script type="text/javascript" src="js/formInputHighlight.js"></script>
> 		<script type="text/javascript" src="js/formTextareaHighlight.js"></script>
Index: admin.html
===================================================================
6,7c6,7
< 		<link rel="stylesheet" type="text/css" href="/style/reset.css" />
< 		<link rel="stylesheet" type="text/css" href="/style/main.css" />
---
> 		<link rel="stylesheet" type="text/css" href="style/reset.css" />
> 		<link rel="stylesheet" type="text/css" href="style/main.css" />
9,12c9,12
< 		<script type="text/javascript" src="/js/load.js"></script>
< 		<script type="text/javascript" src="/js/setHighlight.js"></script>
< 		<script type="text/javascript" src="/js/formInputHighlight.js"></script>
< 		<script type="text/javascript" src="/js/formTextareaHighlight.js"></script>
---
> 		<script type="text/javascript" src="js/load.js"></script>
> 		<script type="text/javascript" src="js/setHighlight.js"></script>
> 		<script type="text/javascript" src="js/formInputHighlight.js"></script>
> 		<script type="text/javascript" src="js/formTextareaHighlight.js"></script>
Index: applicant.html
===================================================================
6,7c6,7
< 		<link rel="stylesheet" type="text/css" href="/style/reset.css" />
< 		<link rel="stylesheet" type="text/css" href="/style/main.css" />
---
> 		<link rel="stylesheet" type="text/css" href="style/reset.css" />
> 		<link rel="stylesheet" type="text/css" href="style/main.css" />
9,12c9,12
< 		<script type="text/javascript" src="/js/load.js"></script>
< 		<script type="text/javascript" src="/js/setHighlight.js"></script>
< 		<script type="text/javascript" src="/js/formInputHighlight.js"></script>
< 		<script type="text/javascript" src="/js/formTextareaHighlight.js"></script>
---
> 		<script type="text/javascript" src="js/load.js"></script>
> 		<script type="text/javascript" src="js/setHighlight.js"></script>
> 		<script type="text/javascript" src="js/formInputHighlight.js"></script>
> 		<script type="text/javascript" src="js/formTextareaHighlight.js"></script>

***************************
* Changes in revision 22 
***************************

------------------------------------------------------------------------
r22 | ting | 2009-03-25 17:15:21 -0500 (Wed, 25 Mar 2009) | 1 line

javascript/html broken.  rollback to r16
------------------------------------------------------------------------

Index: instructor.html
===================================================================
6,7c6,7
< 		<link rel="stylesheet" type="text/css" href="style/reset.css" />
< 		<link rel="stylesheet" type="text/css" href="style/main.css" />
---
> 		<link rel="stylesheet" type="text/css" href="/style/reset.css" />
> 		<link rel="stylesheet" type="text/css" href="/style/main.css" />
9,12c9,12
< 		<script type="text/javascript" src="js/load.js"></script>
< 		<script type="text/javascript" src="js/setHighlight.js"></script>
< 		<script type="text/javascript" src="js/formInputHighlight.js"></script>
< 		<script type="text/javascript" src="js/formTextareaHighlight.js"></script>
---
> 		<script type="text/javascript" src="/js/load.js"></script>
> 		<script type="text/javascript" src="/js/setHighlight.js"></script>
> 		<script type="text/javascript" src="/js/formInputHighlight.js"></script>
> 		<script type="text/javascript" src="/js/formTextareaHighlight.js"></script>
18,36c18,21
< 				<dt><label for="comment_wanted">Specific wanted students</label></dt>
< 				<dd><input type="text" name="comment_wanted" id="comment_wanted" {% if results %}{% for result in results %}{% ifequal result.key 'comment_wanted' %}{% if result.valid %}value="{{ result.value }}" />
< 				<span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/>
< 				<span{% endif %}>Are there any students you specifically want?</span></dd>
< 
< 				<dt><label for="comment_unwanted">Specific unwanted students</label></dt>
< 				<dd><input type="text" name="comment_unwanted" id="comment_unwanted" {% if results %}{% for result in results %}{% ifequal result.key 'comment_unwanted' %}{% if result.valid %}value="{{ result.value }}" />
< 				<span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/>
< 				<span{% endif %}>Are there any students you specifically don't want?</span></dd>
< 
< 				<dt><label for="comment_native">Native English speaker</label></dt>
< 				<dd><input type="text" name="comment_native" id="comment_native" {% if results %}{% for result in results %}{% ifequal result.key 'comment_native' %}{% if result.valid %}value="{{ result.value }}" />
< 				<span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/>
< 				<span{% endif %}>Are you a native English speaker? Type in "yes" or "no".</span></dd>
< 
< 				<dt><label for="comment_specialization">Background in a particular area of specialization</label>
< 				</dt><dd><input type="text" name="comment_specialization" id="comment_specialization" {% if results %}{% for result in results %}{% ifequal result.key 'comment_specialization' %}{% if result.valid %}value="{{ result.value }}" />
< 				<span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/>
< 				<span{% endif %}>Background in a particular area of specialization?</span></dd>
---
> 				<dt><label for="comment_wanted">Specific wanted students</label></dt><dd><input type="text" name="comment_wanted" id="comment_wanted" {% if results %}{% for result in results %}{% ifequal result.key 'comment_wanted' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Are there any students you specifically want?</span></dd>
> 				<dt><label for="comment_unwanted">Specific unwanted students</label></dt><dd><input type="text" name="comment_unwanted" id="comment_unwanted" {% if results %}{% for result in results %}{% ifequal result.key 'comment_unwanted' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Are there any students you specifically don't want?</span></dd>
> 				<dt><label for="comment_native">Native English speaker</label></dt><dd><input type="text" name="comment_native" id="comment_native" {% if results %}{% for result in results %}{% ifequal result.key 'comment_native' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Are you a native English speaker? Type in "yes" or "no".</span></dd>
> 				<dt><label for="comment_specialization">Background in a particular area of specialization</label></dt><dd><input type="text" name="comment_specialization" id="comment_specialization" {% if results %}{% for result in results %}{% ifequal result.key 'comment_specialization' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Background in a particular area of specialization?</span></dd>
Index: TestValidation.py
===================================================================
30,31d29
< 	def testPhoneNumber7 (self) :
< 		self.assert_(Validation.phone_number('(000)123-4567'))
Index: Validation.py
===================================================================
51,56d50
< 
< # ------------
< # comment
< # ------------
< def comment (s) :
<         return not re.search('.+',s) is None
\ No newline at end of file
Index: index.html
===================================================================
8d7
< 		<div>TA Assignment Page for Applicants and Administration
Index: admin.html
===================================================================
6,7c6,7
< 		<link rel="stylesheet" type="text/css" href="style/reset.css" />
< 		<link rel="stylesheet" type="text/css" href="style/main.css" />
---
> 		<link rel="stylesheet" type="text/css" href="/style/reset.css" />
> 		<link rel="stylesheet" type="text/css" href="/style/main.css" />
9,12c9,12
< 		<script type="text/javascript" src="js/load.js"></script>
< 		<script type="text/javascript" src="js/setHighlight.js"></script>
< 		<script type="text/javascript" src="js/formInputHighlight.js"></script>
< 		<script type="text/javascript" src="js/formTextareaHighlight.js"></script>
---
> 		<script type="text/javascript" src="/js/load.js"></script>
> 		<script type="text/javascript" src="/js/setHighlight.js"></script>
> 		<script type="text/javascript" src="/js/formInputHighlight.js"></script>
> 		<script type="text/javascript" src="/js/formTextareaHighlight.js"></script>
18,41c18,22
< 				<dt><label for="comment_class_name">Class number/name</label></dt>
< 				<dd><input type="text" name="comment_class_name" id="comment_class_name" {% if results %}{% for result in results %}{% ifequal result.key 'comment_class_name' %}{% if result.valid %}value="{{ result.value }}" />
< 				<span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/>
< 				<span{% endif %}>What is the class's number/name?</span></dd>
< 
< 				<dt><label for="comment_inst_name">Instructor's name</label></dt>
< 				<dd><input type="text" name="comment_inst_name" id="comment_inst_name" {% if results %}{% for result in results %}{% ifequal result.key 'comment_inst_name' %}{% if result.valid %}value="{{ result.value }}" />
< 				<span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/>
< 				<span{% endif %}>What instructor will teach the class?</span></dd>
< 
< 				<dt><label for="comment_exp_enrollment">Expected enrollment</label></dt>
< 				<dd><input type="text" name="comment_exp_enrollment" id="comment_exp_enrollment" {% if results %}{% for result in results %}{% ifequal result.key 'comment_exp_enrollment' %}{% if result.valid %}value="{{ result.value }}" />
< 				<span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/>
< 				<span{% endif %}>How many students are expected to enroll?</span></dd>
< 
< 				<dt><label for="comment_num_ta_needed">Number of TAs needed</label></dt>
< 				<dd><input type="text" name="comment_num_ta_needed" id="comment_num_ta_needed" {% if results %}{% for result in results %}{% ifequal result.key 'comment_num_ta_needed' %}{% if result.valid %}value="{{ result.value }}" />
< 				<span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/>
< 				<span{% endif %}>How many TAs will be needed?</span></dd>
< 
< 				<dt><label for="comment_num_ta_assigned">Number of TAs assigned</label></dt>
< 				<dd><input type="text" name="comment_num_ta_assigned" id="comment_num_ta_assigned" {% if results %}{% for result in results %}{% ifequal result.key 'comment_num_ta_assigned' %}{% if result.valid %}value="{{ result.value }}" />
< 				<span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/>
< 				<span{% endif %}>How many TAs are assigned?</span></dd>
---
> 				<dt><label for="comment_class_name">Class number/name</label></dt><dd><input type="text" name="comment_class_name" id="comment_class_name" {% if results %}{% for result in results %}{% ifequal result.key 'comment_class_name' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>What is the class's number/name?</span></dd>
> 				<dt><label for="comment_inst_name">Instructor's name</label></dt><dd><input type="text" name="comment_inst_name" id="comment_inst_name" {% if results %}{% for result in results %}{% ifequal result.key 'comment_inst_name' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>What instructor will teach the class?</span></dd>
> 				<dt><label for="comment_exp_enrollment">Expected enrollment</label></dt><dd><input type="text" name="comment_exp_enrollment" id="comment_exp_enrollment" {% if results %}{% for result in results %}{% ifequal result.key 'comment_exp_enrollment' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>How many students are expected to enroll?</span></dd>
> 				<dt><label for="comment_num_ta_needed">Number of TAs needed</label></dt><dd><input type="text" name="comment_num_ta_needed" id="comment_num_ta_needed" {% if results %}{% for result in results %}{% ifequal result.key 'comment_num_ta_needed' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>How many TAs will be needed?</span></dd>
> 				<dt><label for="comment_num_ta_assigned">Number of TAs assigned</label></dt><dd><input type="text" name="comment_num_ta_assigned" id="comment_num_ta_assigned" {% if results %}{% for result in results %}{% ifequal result.key 'comment_num_ta_assigned' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>How many TAs are assigned?</span></dd>
Index: validator.py
===================================================================
2d1
< import Validation
18,21c17,20
< 				#'name'     : Validation.name(value),
< 				#'password' : lambda: True if re.match('.{6,30}', value) else False,
< 				#'address'  : lambda: True if re.match('.+', value) else False,
< 				#'phone'    : Validation.phone_number(value),
---
> 				'name'     : lambda: True if re.match('.+', value) else False,
> 				'password' : lambda: True if re.match('.{6,30}', value) else False,
> 				'address'  : lambda: True if re.match('.+', value) else False,
> 				'phone'    : lambda: True if re.match('.+', value) else False,
23,53c22,23
< 				#'email'    : Validation.email(value),
< 				#'comment'  : lambda: True if re.match('.+', value) else False,
< 
< 				#TA Applicant switches
< 				'phone_applicant'		: Validation.phone_number(value)
< 				'email_applicant'		: Validation.email(value)
< 				'comment_major'			: Validation.comment(value)
< 				'comment_admission'		: Validation.comment(value)
< 				'comment_phd'			: Validation.comment(value)
< 				'comment_supervising'		: Validation.comment(value)
< 				'comment_citizen'		: Validation.comment(value)
< 				'comment_native'		: Validation.comment(value)
< 				'comment_ta'			: Validation.comment(value)
< 				'comment_programming'		: Validation.comment(value)
< 				'comment_area'			: Validation.comment(value)
< 				'comment_qualified'		: Validation.comment(value)
< 
< 				#Instructor Swicthes
< 				'comment_wanted'		: Validation.comment(value)
< 				'comment_unwanted'		: Validation.comment(value)
< 				'comment_native'		: Validation.comment(value)
< 				'comment_specialization'	: Validation.comment(value)
< 				#Admin switches	
< 
< 				'comment_class_name'		: Validation.comment(value)
< 				'comment_inst_name'		: Validation.comment(value)
< 				'comment_exp_enrollment'	: Validation.comment(value)
< 				'comment_num_ta_needed'		: Validation.comment(value)
< 				'comment_num_ta_assigned'	: Validation.comment(value)
< 
< 
---
> 				'email'    : lambda: True if re.match('[a-zA-Z0-9!#$%&\'*+/=?^_`{|}~-]+(?:\.[a-zA-Z0-9!#$%&\'*+/=?^_`{|}~-]+)*@(?:[a-zA-Z0-9](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?\.)+[a-zA-Z0-9](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?', value) else False,
> 				'comment'  : lambda: True if re.match('.+', value) else False,
58,73d27
< #		for key, value in form_data:
< #			result = {}
< #			result['key'] = key
< #			result['value'] = value
< #			ghetto_switch = {
< #				'name'     : lambda: True if re.match('.+', value) else False,
< #				'password' : lambda: True if re.match('.{6,30}', value) else False,
< #				'address'  : lambda: True if re.match('.+', value) else False,
< #				'phone'    : lambda: True if re.match('.+', value) else False,
< #				# lol, this is ALMOST to RFC 2822, doesn't handle double quoted sections before '@' or square bracket Internet address after, perfect bug op
< #				'email'    : lambda: True if re.match('[a-zA-Z0-9!#$%&\'*+/=?^_`{|}~-]+(?:\.[a-zA-Z0-9!#$%&\'*+/=?^_`{|}~-]+)*@(?:[a-zA-Z0-9](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?\.)+[a-zA-Z0-9](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?', value) else False,
< #				'comment'  : lambda: True if re.match('.+', value) else False,
< #			}[key.split('_')[0]]()
< #			result['valid'] = True if ghetto_switch else False
< #			self.results.append(result)
< 
Index: applicant.html
===================================================================
6,7c6,7
< 		<link rel="stylesheet" type="text/css" href="style/reset.css" />
< 		<link rel="stylesheet" type="text/css" href="style/main.css" />
---
> 		<link rel="stylesheet" type="text/css" href="/style/reset.css" />
> 		<link rel="stylesheet" type="text/css" href="/style/main.css" />
9,12c9,12
< 		<script type="text/javascript" src="js/load.js"></script>
< 		<script type="text/javascript" src="js/setHighlight.js"></script>
< 		<script type="text/javascript" src="js/formInputHighlight.js"></script>
< 		<script type="text/javascript" src="js/formTextareaHighlight.js"></script>
---
> 		<script type="text/javascript" src="/js/load.js"></script>
> 		<script type="text/javascript" src="/js/setHighlight.js"></script>
> 		<script type="text/javascript" src="/js/formInputHighlight.js"></script>
> 		<script type="text/javascript" src="/js/formTextareaHighlight.js"></script>
18,77c18,29
< 				<dt><label for="phone_applicant">Phone</label></dt><dd>
< 				<input type="text" name="phone_applicant" id="phone_applicant" {% if results %}{% for result in results %}{% ifequal result.key 'phone_applicant' %}{% if result.valid %}value="{{ result.value }}" />
< 				<span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/>
< 				<span{% endif %}>What is your phone number?</span></dd>
< 
< 				<dt><label for="email_applicant">Email</label></dt><dd>
< 				<input type="text" name="email_applicant" id="email_applicant" {% if results %}{% for result in results %}{% ifequal result.key 'email_applicant' %}{% if result.valid %}value="{{ result.value }}" />
< 				<span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/>
< 				<span{% endif %}>What is your email address?</span></dd>
< 
< 				<dt><label for="comment_major">Major field</label></dt><dd>
< 				<input type="text" name="comment_major" id="comment_major" {% if results %}{% for result in results %}{% ifequal result.key 'comment_major' %}{% if result.valid %}value="{{ result.value }}" />
< 				<span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/>
< 				<span{% endif %}>What is your major field?</span></dd>
< 
< 				<dt><label for="comment_admission">Admission date</label></dt>
< 				<dd><input type="text" name="comment_admission" id="comment_admission" {% if results %}{% for result in results %}{% ifequal result.key 'comment_admission' %}{% if result.valid %}value="{{ result.value }}" />
< 				<span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/>
< 				<span{% endif %}>What is your admission date?</span></dd>
< 
< 				<dt><label for="comment_phd">PhD or Masters</label></dt>
< 				<dd><input type="text" name="comment_phd" id="comment_phd" {% if results %}{% for result in results %}{% ifequal result.key 'comment_phd' %}{% if result.valid %}value="{{ result.value }}" />
< 				<span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/>
< 				<span{% endif %}>Do you have a PhD or Masters? Type in "PhD" or "Masters".</span></dd>
< 
< 				<dt><label for="comment_supervising">Supervising professor</label></dt>
< 				<dd><input type="text" name="comment_supervising" id="comment_supervising" {% if results %}{% for result in results %}{% ifequal result.key 'comment_supervising' %}{% if result.valid %}value="{{ result.value }}" />
< 				<span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/>
< 				<span{% endif %}>Who is your supervising professor?</span></dd>
< 
< 				<dt><label for="comment_citizen">Citizen or resident</label></dt>
< 				<dd><input type="text" name="comment_citizen" id="comment_citizen" {% if results %}{% for result in results %}{% ifequal result.key 'comment_citizen' %}{% if result.valid %}value="{{ result.value }}" />
< 				<span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/>
< 				<span{% endif %}>Are you a citizen or resident? Type in "citizen" or "resident".</span></dd>
< 
< 				<dt><label for="comment_native">Native English speaker</label></dt>
< 				<dd><input type="text" name="comment_native" id="comment_native" {% if results %}{% for result in results %}{% ifequal result.key 'comment_native' %}{% if result.valid %}value="{{ result.value }}" />
< 				<span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/>
< 				<span{% endif %}>Are you a native English speaker? Type in "yes" or "no".</span></dd>
< 
< 				<dt><label for="comment_ta">TA history</label></dt>
< 				<dd><input type="text" name="comment_ta" id="comment_ta" {% if results %}{% for result in results %}{% ifequal result.key 'comment_ta' %}{% if result.valid %}value="{{ result.value }}" />
< 				<span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/>
< 				<span{% endif %}>Do you have a history being a TA? Type in "yes" or "no".</span></dd>
< 
< 				<dt><label for="comment_programming">Programming languages</label></dt>
< 				<dd><input type="text" name="comment_programming" id="comment_programming" {% if results %}{% for result in results %}{% ifequal result.key 'comment_programming' %}{% if result.valid %}value="{{ result.value }}" />
< 				<span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/>
< 				<span{% endif %}>What programming languages do you know?</span></dd>
< 
< 				<dt><label for="comment_area">Area of specialization</label></dt>
< 				<dd><input type="text" name="comment_area" id="comment_area" {% if results %}{% for result in results %}{% ifequal result.key 'comment_area' %}{% if result.valid %}value="{{ result.value }}" />
< 				<span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/>
< 				<span{% endif %}>What is your area of specialization?</span></dd>
< 
< 				<dt><label for="comment_qualified">Course qualified to teach</label></dt>
< 				<dd><input type="text" name="comment_qualified" id="comment_qualified" {% if results %}{% for result in results %}{% ifequal result.key 'comment_qualified' %}{% if result.valid %}value="{{ result.value }}" />
< 				<span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/>
< 				<span{% endif %}>What course(s) are you qualified to teach?</span></dd>
< 
---
> 				<dt><label for="phone_applicant">Phone</label></dt><dd><input type="text" name="phone_applicant" id="phone_applicant" {% if results %}{% for result in results %}{% ifequal result.key 'phone_applicant' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>What is your phone number?</span></dd>
> 				<dt><label for="email_applicant">Email</label></dt><dd><input type="text" name="email_applicant" id="email_applicant" {% if results %}{% for result in results %}{% ifequal result.key 'email_applicant' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>What is your email address?</span></dd>
> 				<dt><label for="comment_major">Major field</label></dt><dd><input type="text" name="comment_major" id="comment_major" {% if results %}{% for result in results %}{% ifequal result.key 'comment_major' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>What is your major field?</span></dd>
> 				<dt><label for="comment_admission">Admission date</label></dt><dd><input type="text" name="comment_admission" id="comment_admission" {% if results %}{% for result in results %}{% ifequal result.key 'comment_admission' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>What is your admission date?</span></dd>
> 				<dt><label for="comment_phd">PhD or Masters</label></dt><dd><input type="text" name="comment_phd" id="comment_phd" {% if results %}{% for result in results %}{% ifequal result.key 'comment_phd' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Do you have a PhD or Masters? Type in "PhD" or "Masters".</span></dd>
> 				<dt><label for="comment_supervising">Supervising professor</label></dt><dd><input type="text" name="comment_supervising" id="comment_supervising" {% if results %}{% for result in results %}{% ifequal result.key 'comment_supervising' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Who is your supervising professor?</span></dd>
> 				<dt><label for="comment_citizen">Citizen or resident</label></dt><dd><input type="text" name="comment_citizen" id="comment_citizen" {% if results %}{% for result in results %}{% ifequal result.key 'comment_citizen' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Are you a citizen or resident? Type in "citizen" or "resident".</span></dd>
> 				<dt><label for="comment_native">Native English speaker</label></dt><dd><input type="text" name="comment_native" id="comment_native" {% if results %}{% for result in results %}{% ifequal result.key 'comment_native' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Are you a native English speaker? Type in "yes" or "no".</span></dd>
> 				<dt><label for="comment_ta">TA history</label></dt><dd><input type="text" name="comment_ta" id="comment_ta" {% if results %}{% for result in results %}{% ifequal result.key 'comment_ta' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Do you have a history being a TA? Type in "yes" or "no".</span></dd>
> 				<dt><label for="comment_programming">Programming languages</label></dt><dd><input type="text" name="comment_programming" id="comment_programming" {% if results %}{% for result in results %}{% ifequal result.key 'comment_programming' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>What programming languages do you know?</span></dd>
> 				<dt><label for="comment_area">Area of specialization</label></dt><dd><input type="text" name="comment_area" id="comment_area" {% if results %}{% for result in results %}{% ifequal result.key 'comment_area' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>What is your area of specialization?</span></dd>
> 				<dt><label for="comment_qualified">Course qualified to teach</label></dt><dd><input type="text" name="comment_qualified" id="comment_qualified" {% if results %}{% for result in results %}{% ifequal result.key 'comment_qualified' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>What course(s) are you qualified to teach?</span></dd>

***************************
* Changes in revision 23 
***************************

------------------------------------------------------------------------
r23 | levi | 2009-03-25 17:20:44 -0500 (Wed, 25 Mar 2009) | 1 line

Updated TA1.txt with my EID
------------------------------------------------------------------------

Index: validator.pyc
===================================================================
Cannot display: file marked as a binary type.
svn:mime-type = application/octet-stream
Index: TA1.txt
===================================================================
22c22
< EID:
---
> EID: lbw429

***************************
* Changes in revision 24 
***************************

------------------------------------------------------------------------
r24 | ting | 2009-03-25 17:22:02 -0500 (Wed, 25 Mar 2009) | 1 line

removing unnecessary .pyc files
------------------------------------------------------------------------

Index: validator.pyc
===================================================================
Cannot display: file marked as a binary type.
svn:mime-type = application/octet-stream

***************************
* Changes in revision 25 
***************************

------------------------------------------------------------------------
r25 | jeffery | 2009-03-25 19:21:51 -0500 (Wed, 25 Mar 2009) | 5 lines

Validation is working
Cleaned up a little html, will do more

Jeffery Zhu

------------------------------------------------------------------------

Index: Validation.py
===================================================================
50a51,56
> 
> # ------------
> # comment
> # ------------
> def comment (s) :
>         return not re.search('.+',s) is None
\ No newline at end of file
Index: app.yaml
===================================================================
2c2
< version: 6
---
> version: 7
Index: validator.py
===================================================================
1a2
> import Validation
17,20c18,21
< 				'name'     : lambda: True if re.match('.+', value) else False,
< 				'password' : lambda: True if re.match('.{6,30}', value) else False,
< 				'address'  : lambda: True if re.match('.+', value) else False,
< 				'phone'    : lambda: True if re.match('.+', value) else False,
---
> 				#'name'     : Validation.name(value),
> 				#'password' : lambda: True if re.match('.{6,30}', value) else False,
> 				#'address'  : lambda: True if re.match('.+', value) else False,
> 				#'phone'    : Validation.phone_number(value),
22,24c23,55
< 				'email'    : lambda: True if re.match('[a-zA-Z0-9!#$%&\'*+/=?^_`{|}~-]+(?:\.[a-zA-Z0-9!#$%&\'*+/=?^_`{|}~-]+)*@(?:[a-zA-Z0-9](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?\.)+[a-zA-Z0-9](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?', value) else False,
< 				'comment'  : lambda: True if re.match('.+', value) else False,
< 			}[key.split('_')[0]]()
---
> 				#'email'    : Validation.email(value),
> 				#'comment'  : lambda: True if re.match('.+', value) else False,
> 				
> 				#TA Applicant switches
> 				'phone_applicant'		: lambda x: Validation.phone_number(x),
> 				'email_applicant'		: lambda x: Validation.email(x),
> 				'comment_major'			: lambda x: Validation.comment(x),
> 				'comment_admission'		: lambda x: Validation.comment(x),
> 				'comment_phd'			: lambda x: Validation.comment(x),
> 				'comment_supervising'		: lambda x: Validation.comment(x),
> 				'comment_citizen'		: lambda x: Validation.comment(x),
> 				'comment_native'		: lambda x: Validation.comment(x),
> 				'comment_ta'			: lambda x: Validation.comment(x),
> 				'comment_programming'		: lambda x: Validation.comment(x),
> 				'comment_area'			: lambda x: Validation.comment(x),
> 				'comment_qualified'		: lambda x: Validation.comment(x),
> 			
> 				#Instructor Swicthes
> 				'comment_wanted'		: lambda x: Validation.comment(x),
> 				'comment_unwanted'		: lambda x: Validation.comment(x),
> 				'comment_native'		: lambda x: Validation.comment(x),
> 				'comment_specialization'	: lambda x: Validation.comment(x),
> 				#Admin switches	
> 				
> 				'comment_class_name'		: lambda x: Validation.comment(x),
> 				'comment_inst_name'		: lambda x: Validation.comment(x),
> 				'comment_exp_enrollment'	: lambda x: Validation.comment(x),
> 				'comment_num_ta_needed'		: lambda x: Validation.comment(x),
> 				'comment_num_ta_assigned'	: lambda x: Validation.comment(x),
> 				
> 				
> 			}[key](value)
> 			
27a59,74
> #		for key, value in form_data:
> #			result = {}
> #			result['key'] = key
> #			result['value'] = value
> #			ghetto_switch = {
> #				'name'     : lambda: True if re.match('.+', value) else False,
> #				'password' : lambda: True if re.match('.{6,30}', value) else False,
> #				'address'  : lambda: True if re.match('.+', value) else False,
> #				'phone'    : lambda: True if re.match('.+', value) else False,
> #				# lol, this is ALMOST to RFC 2822, doesn't handle double quoted sections before '@' or square bracket Internet address after, perfect bug op
> #				'email'    : lambda: True if re.match('[a-zA-Z0-9!#$%&\'*+/=?^_`{|}~-]+(?:\.[a-zA-Z0-9!#$%&\'*+/=?^_`{|}~-]+)*@(?:[a-zA-Z0-9](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?\.)+[a-zA-Z0-9](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?', value) else False,
> #				'comment'  : lambda: True if re.match('.+', value) else False,
> #			}[key.split('_')[0]]()
> #			result['valid'] = True if ghetto_switch else False
> #			self.results.append(result)
> 
Index: applicant.html
===================================================================
18,29c18,72
< 				<dt><label for="phone_applicant">Phone</label></dt><dd><input type="text" name="phone_applicant" id="phone_applicant" {% if results %}{% for result in results %}{% ifequal result.key 'phone_applicant' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>What is your phone number?</span></dd>
< 				<dt><label for="email_applicant">Email</label></dt><dd><input type="text" name="email_applicant" id="email_applicant" {% if results %}{% for result in results %}{% ifequal result.key 'email_applicant' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>What is your email address?</span></dd>
< 				<dt><label for="comment_major">Major field</label></dt><dd><input type="text" name="comment_major" id="comment_major" {% if results %}{% for result in results %}{% ifequal result.key 'comment_major' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>What is your major field?</span></dd>
< 				<dt><label for="comment_admission">Admission date</label></dt><dd><input type="text" name="comment_admission" id="comment_admission" {% if results %}{% for result in results %}{% ifequal result.key 'comment_admission' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>What is your admission date?</span></dd>
< 				<dt><label for="comment_phd">PhD or Masters</label></dt><dd><input type="text" name="comment_phd" id="comment_phd" {% if results %}{% for result in results %}{% ifequal result.key 'comment_phd' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Do you have a PhD or Masters? Type in "PhD" or "Masters".</span></dd>
< 				<dt><label for="comment_supervising">Supervising professor</label></dt><dd><input type="text" name="comment_supervising" id="comment_supervising" {% if results %}{% for result in results %}{% ifequal result.key 'comment_supervising' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Who is your supervising professor?</span></dd>
< 				<dt><label for="comment_citizen">Citizen or resident</label></dt><dd><input type="text" name="comment_citizen" id="comment_citizen" {% if results %}{% for result in results %}{% ifequal result.key 'comment_citizen' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Are you a citizen or resident? Type in "citizen" or "resident".</span></dd>
< 				<dt><label for="comment_native">Native English speaker</label></dt><dd><input type="text" name="comment_native" id="comment_native" {% if results %}{% for result in results %}{% ifequal result.key 'comment_native' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Are you a native English speaker? Type in "yes" or "no".</span></dd>
< 				<dt><label for="comment_ta">TA history</label></dt><dd><input type="text" name="comment_ta" id="comment_ta" {% if results %}{% for result in results %}{% ifequal result.key 'comment_ta' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Do you have a history being a TA? Type in "yes" or "no".</span></dd>
< 				<dt><label for="comment_programming">Programming languages</label></dt><dd><input type="text" name="comment_programming" id="comment_programming" {% if results %}{% for result in results %}{% ifequal result.key 'comment_programming' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>What programming languages do you know?</span></dd>
< 				<dt><label for="comment_area">Area of specialization</label></dt><dd><input type="text" name="comment_area" id="comment_area" {% if results %}{% for result in results %}{% ifequal result.key 'comment_area' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>What is your area of specialization?</span></dd>
< 				<dt><label for="comment_qualified">Course qualified to teach</label></dt><dd><input type="text" name="comment_qualified" id="comment_qualified" {% if results %}{% for result in results %}{% ifequal result.key 'comment_qualified' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>What course(s) are you qualified to teach?</span></dd>
---
> 				<dt><label for="phone_applicant">Phone</label></dt>
> 				<dd><input type="text" name="phone_applicant" id="phone_applicant" {% if results %}{% for result in results %}{% ifequal result.key 'phone_applicant' %}{% if result.valid %}value="{{ result.value }}" />
> 				<span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/>
> 				<span{% endif %}>What is your phone number?</span></dd>
> 
> 				<dt><label for="email_applicant">Email</label></dt>
> 				<dd><input type="text" name="email_applicant" id="email_applicant" {% if results %}{% for result in results %}{% ifequal result.key 'email_applicant' %}{% if result.valid %}value="{{ result.value }}" />
> 				<span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/>
> 				<span{% endif %}>What is your email address?</span></dd>
> 
> 				<dt><label for="comment_major">Major field</label></dt>
> 				<dd><input type="text" name="comment_major" id="comment_major" {% if results %}{% for result in results %}{% ifequal result.key 'comment_major' %}{% if result.valid %}value="{{ result.value }}" />
> 				<span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/>
> 				<span{% endif %}>What is your major field?</span></dd>
> 
> 				<dt><label for="comment_admission">Admission date</label></dt><dd><input type="text" name="comment_admission" id="comment_admission" {% if results %}{% for result in results %}{% ifequal result.key 'comment_admission' %}{% if result.valid %}value="{{ result.value }}" />
> 				<span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/>
> 				<span{% endif %}>What is your admission date?</span></dd>
> 
> 				<dt><label for="comment_phd">PhD or Masters</label></dt><dd><input type="text" name="comment_phd" id="comment_phd" {% if results %}{% for result in results %}{% ifequal result.key 'comment_phd' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/>
> 				<span{% endif %}>Do you have a PhD or Masters? Type in "PhD" or "Masters".</span></dd>
> 
> 				<dt><label for="comment_supervising">Supervising professor</label></dt>
> 				<dd><input type="text" name="comment_supervising" id="comment_supervising" {% if results %}{% for result in results %}{% ifequal result.key 'comment_supervising' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/>
> 				<span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/>
> 				<span{% endif %}>Who is your supervising professor?</span></dd>
> 
> 				<dt><label for="comment_citizen">Citizen or resident</label></dt>
> 				<dd><input type="text" name="comment_citizen" id="comment_citizen" {% if results %}{% for result in results %}{% ifequal result.key 'comment_citizen' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/>
> 				<span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/>
> 				<span{% endif %}>Are you a citizen or resident? Type in "citizen" or "resident".</span></dd>
> 
> 				<dt><label for="comment_native">Native English speaker</label></dt>
> 				<dd><input type="text" name="comment_native" id="comment_native" {% if results %}{% for result in results %}{% ifequal result.key 'comment_native' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/>
> 				<span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/>
> 				<span{% endif %}>Are you a native English speaker? Type in "yes" or "no".</span></dd>
> 
> 				<dt><label for="comment_ta">TA history</label></dt><dd><input type="text" name="comment_ta" id="comment_ta" {% if results %}{% for result in results %}{% ifequal result.key 'comment_ta' %}{% if result.valid %}value="{{ result.value }}" />
> 				<span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/>
> 				<span{% endif %}>Do you have a history being a TA? Type in "yes" or "no".</span></dd>
> 
> 				<dt><label for="comment_programming">Programming languages</label></dt>
> 				<dd><input type="text" name="comment_programming" id="comment_programming" {% if results %}{% for result in results %}{% ifequal result.key 'comment_programming' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/>
> 				<span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/>
> 				<span{% endif %}>What programming languages do you know?</span></dd>
> 
> 				<dt><label for="comment_area">Area of specialization</label></dt>
> 				<dd><input type="text" name="comment_area" id="comment_area" {% if results %}{% for result in results %}{% ifequal result.key 'comment_area' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/>
> 				<span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/>
> 				<span{% endif %}>What is your area of specialization?</span></dd>
> 
> 				<dt><label for="comment_qualified">Course qualified to teach</label></dt>
> 				<dd><input type="text" name="comment_qualified" id="comment_qualified" {% if results %}{% for result in results %}{% ifequal result.key 'comment_qualified' %}{% if result.valid %}value="{{ result.value }}" />
> 				<span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/>
> 				<span{% endif %}>What course(s) are you qualified to teach?</span></dd>

***************************
* Changes in revision 26 
***************************

------------------------------------------------------------------------
r26 | jeffery | 2009-03-25 20:12:58 -0500 (Wed, 25 Mar 2009) | 4 lines

Added more validations to the validator
Cleaned up the html, the test boxes on the right don't over lap any more
Jeffery Zhu

------------------------------------------------------------------------

Index: instructor.html
===================================================================
18,21c18,42
< 				<dt><label for="comment_wanted">Specific wanted students</label></dt><dd><input type="text" name="comment_wanted" id="comment_wanted" {% if results %}{% for result in results %}{% ifequal result.key 'comment_wanted' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Are there any students you specifically want?</span></dd>
< 				<dt><label for="comment_unwanted">Specific unwanted students</label></dt><dd><input type="text" name="comment_unwanted" id="comment_unwanted" {% if results %}{% for result in results %}{% ifequal result.key 'comment_unwanted' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Are there any students you specifically don't want?</span></dd>
< 				<dt><label for="comment_native">Native English speaker</label></dt><dd><input type="text" name="comment_native" id="comment_native" {% if results %}{% for result in results %}{% ifequal result.key 'comment_native' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Are you a native English speaker? Type in "yes" or "no".</span></dd>
< 				<dt><label for="comment_specialization">Background in a particular area of specialization</label></dt><dd><input type="text" name="comment_specialization" id="comment_specialization" {% if results %}{% for result in results %}{% ifequal result.key 'comment_specialization' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Background in a particular area of specialization?</span></dd>
---
> 				<dt><label for="comment_wanted">Specific wanted students</label></dt>
> 				<dd><input type="text" name="comment_wanted" id="comment_wanted" {% if results %}{% for result in results %}{% ifequal result.key 'comment_wanted' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/>
> 				<span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/>
> 				<span{% endif %}>Are there any students you specifically want?</span></dd>
> 				
> 				<br />
> 
> 				<dt><label for="comment_unwanted">Specific unwanted students</label></dt>
> 				<dd><input type="text" name="comment_unwanted" id="comment_unwanted" {% if results %}{% for result in results %}{% ifequal result.key 'comment_unwanted' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/>
> 				<span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/>
> 				<span{% endif %}>Are there any students you specifically don't want?</span></dd>
> 
> 				<br />
> 
> 				<dt><label for="comment_native">Native English speaker</label></dt>
> 				<dd><input type="text" name="comment_native" id="comment_native" {% if results %}{% for result in results %}{% ifequal result.key 'comment_native' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/>
> 				<span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/>
> 				<span{% endif %}>Are you a native English speaker? Type in "yes" or "no".</span></dd>
> 
> 				<br />
> 
> 				<dt><label for="comment_specialization">Background in a particular area of specialization</label></dt>
> 				<dd><input type="text" name="comment_specialization" id="comment_specialization" {% if results %}{% for result in results %}{% ifequal result.key 'comment_specialization' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/>
> 				<span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/>
> 				<span{% endif %}>Background in a particular area of specialization?</span></dd>
Index: style/main.css
===================================================================
7c7
< 	width: 400px;
---
> 	width: 500px;
Index: Validation.py
===================================================================
56a57,74
> 
> # ------------
> # Degree type
> # ------------
> def degree_type (s) :
>         return not re.search('^(PhD|Masters)$',s) is None
> 
> # ------------
> # Citizen or Resident
> # ------------
> def citizen (s) :
>         return not re.search('^(citizen|resident)$',s) is None
> 
> # ------------
> # Yes or No
> # ------------
> def yes_no (s) :
>         return not re.search('^(yes|no)$',s) is None
Index: app.yaml
===================================================================
2c2
< version: 7
---
> version: 8
Index: admin.html
===================================================================
18,22c18,49
< 				<dt><label for="comment_class_name">Class number/name</label></dt><dd><input type="text" name="comment_class_name" id="comment_class_name" {% if results %}{% for result in results %}{% ifequal result.key 'comment_class_name' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>What is the class's number/name?</span></dd>
< 				<dt><label for="comment_inst_name">Instructor's name</label></dt><dd><input type="text" name="comment_inst_name" id="comment_inst_name" {% if results %}{% for result in results %}{% ifequal result.key 'comment_inst_name' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>What instructor will teach the class?</span></dd>
< 				<dt><label for="comment_exp_enrollment">Expected enrollment</label></dt><dd><input type="text" name="comment_exp_enrollment" id="comment_exp_enrollment" {% if results %}{% for result in results %}{% ifequal result.key 'comment_exp_enrollment' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>How many students are expected to enroll?</span></dd>
< 				<dt><label for="comment_num_ta_needed">Number of TAs needed</label></dt><dd><input type="text" name="comment_num_ta_needed" id="comment_num_ta_needed" {% if results %}{% for result in results %}{% ifequal result.key 'comment_num_ta_needed' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>How many TAs will be needed?</span></dd>
< 				<dt><label for="comment_num_ta_assigned">Number of TAs assigned</label></dt><dd><input type="text" name="comment_num_ta_assigned" id="comment_num_ta_assigned" {% if results %}{% for result in results %}{% ifequal result.key 'comment_num_ta_assigned' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>How many TAs are assigned?</span></dd>
---
> 				<dt><label for="comment_class_name">Class number/name</label></dt>
> 				<dd><input type="text" name="comment_class_name" id="comment_class_name" {% if results %}{% for result in results %}{% ifequal result.key 'comment_class_name' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/>
> 				<span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/>
> 				<span{% endif %}>What is the class's number/name?</span></dd>
> 
> 				<br />
> 
> 				<dt><label for="comment_inst_name">Instructor's name</label></dt>
> 				<dd><input type="text" name="comment_inst_name" id="comment_inst_name" {% if results %}{% for result in results %}{% ifequal result.key 'comment_inst_name' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/>
> 				<span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/>
> 				<span{% endif %}>What instructor will teach the class?</span></dd>
> 
> 				<br />
> 
> 				<dt><label for="comment_exp_enrollment">Expected enrollment</label></dt>
> 				<dd><input type="text" name="comment_exp_enrollment" id="comment_exp_enrollment" {% if results %}{% for result in results %}{% ifequal result.key 'comment_exp_enrollment' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/>
> 				<span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/>
> 				<span{% endif %}>How many students are expected to enroll?</span></dd>
> 
> 				<br />
> 
> 				<dt><label for="comment_num_ta_needed">Number of TAs needed</label></dt>
> 				<dd><input type="text" name="comment_num_ta_needed" id="comment_num_ta_needed" {% if results %}{% for result in results %}{% ifequal result.key 'comment_num_ta_needed' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/>
> 				<span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/>
> 				<span{% endif %}>How many TAs will be needed?</span></dd>
> 
> 				<br />
> 
> 				<dt><label for="comment_num_ta_assigned">Number of TAs assigned</label></dt>
> 				<dd><input type="text" name="comment_num_ta_assigned" id="comment_num_ta_assigned" {% if results %}{% for result in results %}{% ifequal result.key 'comment_num_ta_assigned' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/>
> 				<span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/>
> 				<span{% endif %}>How many TAs are assigned?</span></dd>
Index: validator.py
===================================================================
30,31c30,31
< 				'comment_admission'		: lambda x: Validation.comment(x),
< 				'comment_phd'			: lambda x: Validation.comment(x),
---
> 				'comment_admission'		: lambda x: Validation.date(x),
> 				'comment_phd'			: lambda x: Validation.degree_type(x),
33,35c33,35
< 				'comment_citizen'		: lambda x: Validation.comment(x),
< 				'comment_native'		: lambda x: Validation.comment(x),
< 				'comment_ta'			: lambda x: Validation.comment(x),
---
> 				'comment_citizen'		: lambda x: Validation.citizen(x),
> 				'comment_native'		: lambda x: Validation.yes_no(x),
> 				'comment_ta'			: lambda x: Validation.yes_no(x),
Index: applicant.html
===================================================================
22a23,24
> 				<br />
> 
27a30,31
> 				<br />
> 
33c37,39
< 				<dt><label for="comment_admission">Admission date</label></dt><dd><input type="text" name="comment_admission" id="comment_admission" {% if results %}{% for result in results %}{% ifequal result.key 'comment_admission' %}{% if result.valid %}value="{{ result.value }}" />
---
> 				<br />
> 
> 				<dt><label for="comment_admission">Admission date (DD-MM-YYYY)</label></dt><dd><input type="text" name="comment_admission" id="comment_admission" {% if results %}{% for result in results %}{% ifequal result.key 'comment_admission' %}{% if result.valid %}value="{{ result.value }}" />
36a43,44
> 				<br />
> 
39a48,49
> 				<br />
> 
44a55,56
> 				<br />
> 
49a62,63
> 				<br />
> 
54a69,70
> 				<br />
> 
58a75,76
> 				<br />
> 
63a82,83
> 				<br />
> 
68a89,90
> 				<br />
> 

***************************
* Changes in revision 27 
***************************

------------------------------------------------------------------------
r27 | estesox | 2009-03-25 20:22:53 -0500 (Wed, 25 Mar 2009) | 1 line

name validation enhanced
------------------------------------------------------------------------

Index: Validation.py
===================================================================
40c40
<         return not re.search('^[A-Z][a-zA-Z\'\-]*[a-zA-Z]$',s) is None
---
>         return not re.search('^^([A-Z]([a-zA-Z]*(\-|\')?[a-zA-Z]*[a-zA-Z](\')?)*(\s))+$',s) is None

***************************
* Changes in revision 28 
***************************

------------------------------------------------------------------------
r28 | estesox | 2009-03-25 20:24:47 -0500 (Wed, 25 Mar 2009) | 1 line

email validation enhanced
------------------------------------------------------------------------

Index: Validation.py
===================================================================
23c23
<         return not re.search('(^(\w|\-|\_)+((\.)?(\w|\-|\_)+)*)\@(\w)+(\-|\w)*(\w)+((\.)?(\w)+(\-|\w)*(\w)+)*\.(com|net|org|gov|edu)$', s) is None
---
>         return not re.search('(^(\w|\-|\_)+((\.)?(\w|\-|\_)+)*)\@(\w)+(\-|\w)*(\w)+((\.)?(\w)+(\-|\w)*(\w)+)*\.(com|net|org|gov|edu|info|biz|us)$', s) is None

***************************
* Changes in revision 29 
***************************

------------------------------------------------------------------------
r29 | estesox | 2009-03-25 20:29:18 -0500 (Wed, 25 Mar 2009) | 1 line

email validation enhanced
------------------------------------------------------------------------

Index: Validation.py
===================================================================
23c23
<         return not re.search('(^(\w|\-|\_)+((\.)?(\w|\-|\_)+)*)\@(\w)+(\-|\w)*(\w)+((\.)?(\w)+(\-|\w)*(\w)+)*\.(com|net|org|gov|edu|info|biz|us)$', s) is None
---
>         return not re.search('(^(\w|\-|\_)(\+)?((\.)?(\w|\-|\_)+)*)\@(\w)+(\-|\w)*(\w)+((\.)?(\w)+(\-|\w)*(\w)+)*\.(com|net|org|gov|edu|info|biz|us)$', s) is None

***************************
* Changes in revision 30 
***************************

------------------------------------------------------------------------
r30 | estesox | 2009-03-25 20:35:10 -0500 (Wed, 25 Mar 2009) | 1 line

minor fix of name validation
------------------------------------------------------------------------

Index: Validation.py
===================================================================
40c40
<         return not re.search('^^([A-Z]([a-zA-Z]*(\-|\')?[a-zA-Z]*[a-zA-Z](\')?)*(\s))+$',s) is None
---
>         return not re.search('^^([A-Z]([a-zA-Z]*(\-|\')?[a-zA-Z]*[a-zA-Z](\')?)*(\s)?)+$',s) is None

***************************
* Changes in revision 31 
***************************

------------------------------------------------------------------------
r31 | levi | 2009-03-25 21:03:34 -0500 (Wed, 25 Mar 2009) | 1 line

Added UML.pdf
------------------------------------------------------------------------

Index: UML.pdf
===================================================================
Cannot display: file marked as a binary type.
svn:mime-type = application/octet-stream

Property changes on: UML.pdf
___________________________________________________________________
Added: svn:mime-type
   + application/octet-stream


***************************
* Changes in revision 32 
***************************

------------------------------------------------------------------------
r32 | jeffery | 2009-03-25 21:37:26 -0500 (Wed, 25 Mar 2009) | 3 lines

Added unit tests for comment, degree type, yes or no, and resident fields
Jeffery Zhu

------------------------------------------------------------------------

Index: TestValidation.py
===================================================================
146a147,189
>     # ------------
>     # comment
>     # ------------
>     def testcomment1 (self) :
>         self.assert_(Validation.comment('aaa'))
> 
>     # ------------
>     # Degree type
>     # ------------
>     def testdegree1 (self) :
>         self.assert_(not Validation.degree_type('aaa'))
>     def testdegree2 (self) :
>         self.assert_(not Validation.degree_type(''))
>     def testdegree3 (self) :
>         self.assert_(Validation.degree_type('PhD'))
>     def testdegree4 (self) :
>         self.assert_(Validation.degree_type('Masters'))
> 
>     # ------------
>     # Citizen or Resident
>     # ------------
>     def testcitizen1 (self) :
>         self.assert_(not Validation.citizen('aaa'))
>     def testcitizen2 (self) :
>         self.assert_(not Validation.citizen(''))
>     def testcitizen3 (self) :
>         self.assert_( Validation.citizen('citizen'))
>     def testcitizen4 (self) :
>         self.assert_(Validation.citizen('resident'))
> 
>     # ------------
>     # Yes or No
>     # ------------
>     def testyesno1 (self) :
>         self.assert_(not Validation.yes_no('aaa'))
>     def testyesno2 (self) :
>         self.assert_(Validation.yes_no('yes'))
>     def testyesno3 (self) :
>         self.assert_(Validation.yes_no('no'))
>     def testyesno4 (self) :
>         self.assert_(not Validation.yes_no(''))
> 
> 
Index: app.yaml
===================================================================
2c2
< version: 8
---
> version: 10
Index: validator.py
===================================================================
18,21c18,19
< 				#'name'     : Validation.name(value),
< 				#'password' : lambda: True if re.match('.{6,30}', value) else False,
< 				#'address'  : lambda: True if re.match('.+', value) else False,
< 				#'phone'    : Validation.phone_number(value),
---
> 				
> 				#'email'    : lambda: True if re.match('[a-zA-Z0-9!#$%&\'*+/=?^_`{|}~-]+(?:\.[a-zA-Z0-9!#$%&\'*+/=?^_`{|}~-]+)*@(?:[a-zA-Z0-9](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?\.)+[a-zA-Z0-9](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?', value) else False,
23,24d20
< 				#'email'    : Validation.email(value),
< 				#'comment'  : lambda: True if re.match('.+', value) else False,
43c39
< 				'comment_native'		: lambda x: Validation.comment(x),
---
> 				'comment_native'		: lambda x: Validation.yes_no(x),
49,51c45,47
< 				'comment_exp_enrollment'	: lambda x: Validation.comment(x),
< 				'comment_num_ta_needed'		: lambda x: Validation.comment(x),
< 				'comment_num_ta_assigned'	: lambda x: Validation.comment(x),
---
> 				'comment_exp_enrollment'	: lambda x: Validation.number(x),
> 				'comment_num_ta_needed'		: lambda x: Validation.number(x),
> 				'comment_num_ta_assigned'	: lambda x: Validation.number(x),
58,74d53
< 
< #		for key, value in form_data:
< #			result = {}
< #			result['key'] = key
< #			result['value'] = value
< #			ghetto_switch = {
< #				'name'     : lambda: True if re.match('.+', value) else False,
< #				'password' : lambda: True if re.match('.{6,30}', value) else False,
< #				'address'  : lambda: True if re.match('.+', value) else False,
< #				'phone'    : lambda: True if re.match('.+', value) else False,
< #				# lol, this is ALMOST to RFC 2822, doesn't handle double quoted sections before '@' or square bracket Internet address after, perfect bug op
< #				'email'    : lambda: True if re.match('[a-zA-Z0-9!#$%&\'*+/=?^_`{|}~-]+(?:\.[a-zA-Z0-9!#$%&\'*+/=?^_`{|}~-]+)*@(?:[a-zA-Z0-9](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?\.)+[a-zA-Z0-9](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?', value) else False,
< #				'comment'  : lambda: True if re.match('.+', value) else False,
< #			}[key.split('_')[0]]()
< #			result['valid'] = True if ghetto_switch else False
< #			self.results.append(result)
< 
Index: applicant.html
===================================================================
18c18
< 				<dt><label for="phone_applicant">Phone</label></dt>
---
> 				<dt><label for="phone_applicant">Phone (xxx-xxx-xxxx)</label></dt>
25c25
< 				<dt><label for="email_applicant">Email</label></dt>
---
> 				<dt><label for="email_applicant">Email (xxx@xxx.xxx)</label></dt>

***************************
* Changes in revision 33 
***************************

------------------------------------------------------------------------
r33 | estesox | 2009-03-25 21:44:27 -0500 (Wed, 25 Mar 2009) | 1 line

TA1.txt updated to include everyone's EID
------------------------------------------------------------------------

Index: TA1.txt
===================================================================
27c27
< EID:
---
> EID:sks732

***************************
* Changes in revision 34 
***************************

------------------------------------------------------------------------
r34 | estesox | 2009-03-25 21:59:06 -0500 (Wed, 25 Mar 2009) | 1 line

applicant.html slightly modified
------------------------------------------------------------------------

Index: applicant.html
===================================================================
39c39
< 				<dt><label for="comment_admission">Admission date (DD-MM-YYYY)</label></dt><dd><input type="text" name="comment_admission" id="comment_admission" {% if results %}{% for result in results %}{% ifequal result.key 'comment_admission' %}{% if result.valid %}value="{{ result.value }}" />
---
> 				<dt><label for="comment_admission">Admission date (MM-DD-YYYY)</label></dt><dd><input type="text" name="comment_admission" id="comment_admission" {% if results %}{% for result in results %}{% ifequal result.key 'comment_admission' %}{% if result.valid %}value="{{ result.value }}" />

***************************
* Changes in revision 35 
***************************

------------------------------------------------------------------------
r35 | ting | 2009-03-25 22:05:46 -0500 (Wed, 25 Mar 2009) | 1 line

added code doc for index.py, TestValidation.py
------------------------------------------------------------------------

Index: TestValidation.py
===================================================================
3,6d2
< # ------------
< # TestValidation.py
< # ------------
< 
10,13d5
< # ---------
< # TestAdmin
< # ---------
< 
15,17c7,9
<     # ------------
<     # phone_number
<     # ------------
---
> 	"""
> 	Test phone number validation.
> 	"""
30,32c22,25
<     # ------------
<     # phone_number_ext
<     # ------------
---
> 
> 	"""
> 	Test phone number extension validation.
> 	"""
41,43c34,37
<     # ------------
<     # email
<     # ------------
---
> 
> 	"""
> 	Test e-mail validation.
> 	"""
70,72c64,67
<     # ------------
<     # date
<     # ------------
---
> 
> 	"""
> 	Test date validation.
> 	"""
97,99c92,95
<     # ------------
<     # name
<     # ------------
---
> 
> 	"""
> 	Test name validation.
> 	"""
116,118c112,115
<     # ------------
<     # class_number
<     # ------------
---
> 
> 	"""
> 	Test class number validation.
> 	"""
137,139c134
<     # ------------
<     # number
<     # ------------
---
> 
147,149c142,145
<     # ------------
<     # comment
<     # ------------
---
> 
> 	"""
> 	Test comment validation.
> 	"""
153,155c149,151
<     # ------------
<     # Degree type
<     # ------------
---
> 	"""
> 	Test degree validation.
> 	"""
165,167c161,163
<     # ------------
<     # Citizen or Resident
<     # ------------
---
> 	"""
> 	Test citizen/resident validation.
> 	"""
177,179c173,175
<     # ------------
<     # Yes or No
<     # ------------
---
> 	"""
> 	Test yes/no validation.
> 	"""
Index: index.py
===================================================================
7a8,10
> 	"""
> 	Default class if nothing is passed to the index.
> 	"""
8a12,14
> 		"""
> 		Displays the class template.
> 		"""
12a19,21
> 	"""
> 	Class for handling the applicant form and validation.
> 	"""
13a23,25
> 		"""
> 		Constructor initializes results.
> 		"""
16a29,31
> 		"""
> 		Displays the class template upon get request.
> 		"""
19a35,37
> 		"""
> 		Validates form elements and will eventually submit the information to a database.
> 		"""
24a43,45
> 		"""
> 		Renders the template.
> 		"""
31a53,55
> 	"""
> 	Class for handling the instructor form and validation.
> 	"""
32a57,59
> 		"""
> 		Constructor initializes results.
> 		"""
35a63,65
> 		"""
> 		Displays the class template upon get request.
> 		"""
38a69,71
> 		"""
> 		Validates form elements and will eventually submit the information to a database.
> 		"""
43a77,79
> 		"""
> 		Renders the template.
> 		"""
50a87,89
> 	"""
> 	Class for handling the admin form and validation.
> 	"""
51a91,93
> 		"""
> 		Constructor initializes results.
> 		"""
54a97,99
> 		"""
> 		Displays the class template upon get request.
> 		"""
57a103,105
> 		"""
> 		Validates form elements and will eventually submit the information to a database.
> 		"""
62a111,113
> 		"""
> 		Renders the template.
> 		"""
69a121,123
> 	"""
> 	Validates each field entry upon get request.
> 	"""
87a142,144
> 	"""
> 	Runs the program when called.
> 	"""

***************************
* Changes in revision 36 
***************************

------------------------------------------------------------------------
r36 | ting | 2009-03-25 22:20:22 -0500 (Wed, 25 Mar 2009) | 1 line

updated code doc for validator.py, validation.py
------------------------------------------------------------------------

Index: Validation.py
===================================================================
3,6d2
< # -------------
< # Validation.py
< # -------------
< 
9,11d4
< # ------------
< # phone_number
< # ------------
12a6,8
> 	"""
> 	Phone number validator.
> 	"""
14,16c10
< # ----------------
< # phone_number_ext
< # ----------------
---
> 
17a12,14
> 	"""
> 	Phone number extension validator.
> 	"""
19,21c16
< # ------------
< # email
< # ------------
---
> 
22a18,20
> 	"""
> 	E-mail address validator.
> 	"""
24,26c22
< # ------------
< # date
< # ------------
---
> 
27a24,26
> 	"""
> 	Date validator.
> 	"""
36,38c35
< # ------------
< # name
< # ------------
---
> 
39a37,39
> 	"""
> 	Name validator.
> 	"""
41,43c41
< # ------------
< # class_number
< # ------------
---
> 
44a43,45
> 	"""
> 	Class number validator.
> 	"""
46,48c47
< # ------------
< # number
< # ------------
---
> 
49a49,51
> 	"""
> 	Number validator.
> 	"""
52,54d53
< # ------------
< # comment
< # ------------
55a55,57
> 	"""
> 	Comment validator.
> 	"""
58,60d59
< # ------------
< # Degree type
< # ------------
61a61,63
> 	"""
> 	Degree validator.
> 	"""
64,66d65
< # ------------
< # Citizen or Resident
< # ------------
67a67,69
> 	"""
> 	Resident/Citizen validator.
> 	"""
70,72d71
< # ------------
< # Yes or No
< # ------------
73a73,75
> 	"""
> 	yes/no validator.
> 	"""
Index: TA1.txt
===================================================================
Index: validator.py
===================================================================
4a5,7
> 	"""
> 	Generic validator class depending on form type.
> 	"""
5a9,11
> 		"""
> 		Constructor validates k-v pairs found in form_data and returns results.
> 		"""
18d23
< 				
41d45
< 				#Admin switches	
42a47
> 				#Admin switches	
48,49d52
< 				
< 				

***************************
* Changes in revision 37 
***************************

------------------------------------------------------------------------
r37 | ting | 2009-03-25 22:26:53 -0500 (Wed, 25 Mar 2009) | 1 line

fixed TestValidation indention problems, add TestValidation.html
------------------------------------------------------------------------

Index: TestValidation.py
===================================================================
Index: TestValidation.html
===================================================================
0a1,320
> 
> <!doctype html PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
> <html><head><title>Python: module TestValidation</title>
> </head><body bgcolor="#f0f0f8">
> 
> <table width="100%" cellspacing=0 cellpadding=2 border=0 summary="heading">
> <tr bgcolor="#7799ee">
> <td valign=bottom>&nbsp;<br>
> <font color="#ffffff" face="helvetica, arial">&nbsp;<br><big><big><strong>TestValidation</strong></big></big></font></td
> ><td align=right valign=bottom
> ><font color="#ffffff" face="helvetica, arial"><a href=".">index</a><br><a href="file:/home/ting/svn/cs373_pj5/TestValidation.py">/home/ting/svn/cs373_pj5/TestValidation.py</a></font></td></tr></table>
>     <p></p>
> <p>
> <table width="100%" cellspacing=0 cellpadding=2 border=0 summary="section">
> <tr bgcolor="#aa55cc">
> <td colspan=3 valign=bottom>&nbsp;<br>
> <font color="#fffff" face="helvetica, arial"><big><strong>Modules</strong></big></font></td></tr>
>     
> <tr><td bgcolor="#aa55cc"><tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</tt></td><td>&nbsp;</td>
> <td width="100%"><table width="100%" summary="list"><tr><td width="25%" valign=top><a href="Validation.html">Validation</a><br>
> </td><td width="25%" valign=top><a href="unittest.html">unittest</a><br>
> </td><td width="25%" valign=top></td><td width="25%" valign=top></td></tr></table></td></tr></table><p>
> <table width="100%" cellspacing=0 cellpadding=2 border=0 summary="section">
> <tr bgcolor="#ee77aa">
> <td colspan=3 valign=bottom>&nbsp;<br>
> <font color="#ffffff" face="helvetica, arial"><big><strong>Classes</strong></big></font></td></tr>
>     
> <tr><td bgcolor="#ee77aa"><tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</tt></td><td>&nbsp;</td>
> <td width="100%"><dl>
> <dt><font face="helvetica, arial"><a href="unittest.html#TestCase">unittest.TestCase</a>(<a href="__builtin__.html#object">__builtin__.object</a>)
> </font></dt><dd>
> <dl>
> <dt><font face="helvetica, arial"><a href="TestValidation.html#TestAdmin">TestAdmin</a>
> </font></dt></dl>
> </dd>
> </dl>
>  <p>
> <table width="100%" cellspacing=0 cellpadding=2 border=0 summary="section">
> <tr bgcolor="#ffc8d8">
> <td colspan=3 valign=bottom>&nbsp;<br>
> <font color="#000000" face="helvetica, arial"><a name="TestAdmin">class <strong>TestAdmin</strong></a>(<a href="unittest.html#TestCase">unittest.TestCase</a>)</font></td></tr>
>     
> <tr bgcolor="#ffc8d8"><td rowspan=2><tt>&nbsp;&nbsp;&nbsp;</tt></td>
> <td colspan=2><tt>Test&nbsp;phone&nbsp;number&nbsp;validation.<br>&nbsp;</tt></td></tr>
> <tr><td>&nbsp;</td>
> <td width="100%"><dl><dt>Method resolution order:</dt>
> <dd><a href="TestValidation.html#TestAdmin">TestAdmin</a></dd>
> <dd><a href="unittest.html#TestCase">unittest.TestCase</a></dd>
> <dd><a href="__builtin__.html#object">__builtin__.object</a></dd>
> </dl>
> <hr>
> Methods defined here:<br>
> <dl><dt><a name="TestAdmin-testPhoneNumber1"><strong>testPhoneNumber1</strong></a>(self)</dt></dl>
> 
> <dl><dt><a name="TestAdmin-testPhoneNumber2"><strong>testPhoneNumber2</strong></a>(self)</dt></dl>
> 
> <dl><dt><a name="TestAdmin-testPhoneNumber3"><strong>testPhoneNumber3</strong></a>(self)</dt></dl>
> 
> <dl><dt><a name="TestAdmin-testPhoneNumber4"><strong>testPhoneNumber4</strong></a>(self)</dt></dl>
> 
> <dl><dt><a name="TestAdmin-testPhoneNumber5"><strong>testPhoneNumber5</strong></a>(self)</dt></dl>
> 
> <dl><dt><a name="TestAdmin-testPhoneNumber6"><strong>testPhoneNumber6</strong></a>(self)</dt></dl>
> 
> <dl><dt><a name="TestAdmin-testcitizen1"><strong>testcitizen1</strong></a>(self)</dt></dl>
> 
> <dl><dt><a name="TestAdmin-testcitizen2"><strong>testcitizen2</strong></a>(self)</dt></dl>
> 
> <dl><dt><a name="TestAdmin-testcitizen3"><strong>testcitizen3</strong></a>(self)</dt></dl>
> 
> <dl><dt><a name="TestAdmin-testcitizen4"><strong>testcitizen4</strong></a>(self)</dt></dl>
> 
> <dl><dt><a name="TestAdmin-testclass_number1"><strong>testclass_number1</strong></a>(self)</dt></dl>
> 
> <dl><dt><a name="TestAdmin-testclass_number2"><strong>testclass_number2</strong></a>(self)</dt></dl>
> 
> <dl><dt><a name="TestAdmin-testclass_number3"><strong>testclass_number3</strong></a>(self)</dt></dl>
> 
> <dl><dt><a name="TestAdmin-testclass_number4"><strong>testclass_number4</strong></a>(self)</dt></dl>
> 
> <dl><dt><a name="TestAdmin-testclass_number5"><strong>testclass_number5</strong></a>(self)</dt></dl>
> 
> <dl><dt><a name="TestAdmin-testclass_number6"><strong>testclass_number6</strong></a>(self)</dt></dl>
> 
> <dl><dt><a name="TestAdmin-testclass_number7"><strong>testclass_number7</strong></a>(self)</dt></dl>
> 
> <dl><dt><a name="TestAdmin-testclass_number8"><strong>testclass_number8</strong></a>(self)</dt></dl>
> 
> <dl><dt><a name="TestAdmin-testclass_number9"><strong>testclass_number9</strong></a>(self)</dt></dl>
> 
> <dl><dt><a name="TestAdmin-testcomment1"><strong>testcomment1</strong></a>(self)</dt></dl>
> 
> <dl><dt><a name="TestAdmin-testdate1"><strong>testdate1</strong></a>(self)</dt></dl>
> 
> <dl><dt><a name="TestAdmin-testdate10"><strong>testdate10</strong></a>(self)</dt></dl>
> 
> <dl><dt><a name="TestAdmin-testdate11"><strong>testdate11</strong></a>(self)</dt></dl>
> 
> <dl><dt><a name="TestAdmin-testdate12"><strong>testdate12</strong></a>(self)</dt></dl>
> 
> <dl><dt><a name="TestAdmin-testdate2"><strong>testdate2</strong></a>(self)</dt></dl>
> 
> <dl><dt><a name="TestAdmin-testdate3"><strong>testdate3</strong></a>(self)</dt></dl>
> 
> <dl><dt><a name="TestAdmin-testdate4"><strong>testdate4</strong></a>(self)</dt></dl>
> 
> <dl><dt><a name="TestAdmin-testdate5"><strong>testdate5</strong></a>(self)</dt></dl>
> 
> <dl><dt><a name="TestAdmin-testdate6"><strong>testdate6</strong></a>(self)</dt></dl>
> 
> <dl><dt><a name="TestAdmin-testdate7"><strong>testdate7</strong></a>(self)</dt></dl>
> 
> <dl><dt><a name="TestAdmin-testdate8"><strong>testdate8</strong></a>(self)</dt></dl>
> 
> <dl><dt><a name="TestAdmin-testdate9"><strong>testdate9</strong></a>(self)</dt></dl>
> 
> <dl><dt><a name="TestAdmin-testdegree1"><strong>testdegree1</strong></a>(self)</dt></dl>
> 
> <dl><dt><a name="TestAdmin-testdegree2"><strong>testdegree2</strong></a>(self)</dt></dl>
> 
> <dl><dt><a name="TestAdmin-testdegree3"><strong>testdegree3</strong></a>(self)</dt></dl>
> 
> <dl><dt><a name="TestAdmin-testdegree4"><strong>testdegree4</strong></a>(self)</dt></dl>
> 
> <dl><dt><a name="TestAdmin-testemail1"><strong>testemail1</strong></a>(self)</dt></dl>
> 
> <dl><dt><a name="TestAdmin-testemail10"><strong>testemail10</strong></a>(self)</dt></dl>
> 
> <dl><dt><a name="TestAdmin-testemail11"><strong>testemail11</strong></a>(self)</dt></dl>
> 
> <dl><dt><a name="TestAdmin-testemail12"><strong>testemail12</strong></a>(self)</dt></dl>
> 
> <dl><dt><a name="TestAdmin-testemail13"><strong>testemail13</strong></a>(self)</dt></dl>
> 
> <dl><dt><a name="TestAdmin-testemail2"><strong>testemail2</strong></a>(self)</dt></dl>
> 
> <dl><dt><a name="TestAdmin-testemail3"><strong>testemail3</strong></a>(self)</dt></dl>
> 
> <dl><dt><a name="TestAdmin-testemail4"><strong>testemail4</strong></a>(self)</dt></dl>
> 
> <dl><dt><a name="TestAdmin-testemail5"><strong>testemail5</strong></a>(self)</dt></dl>
> 
> <dl><dt><a name="TestAdmin-testemail6"><strong>testemail6</strong></a>(self)</dt></dl>
> 
> <dl><dt><a name="TestAdmin-testemail7"><strong>testemail7</strong></a>(self)</dt></dl>
> 
> <dl><dt><a name="TestAdmin-testemail8"><strong>testemail8</strong></a>(self)</dt></dl>
> 
> <dl><dt><a name="TestAdmin-testemail9"><strong>testemail9</strong></a>(self)</dt></dl>
> 
> <dl><dt><a name="TestAdmin-testname1"><strong>testname1</strong></a>(self)</dt></dl>
> 
> <dl><dt><a name="TestAdmin-testname2"><strong>testname2</strong></a>(self)</dt></dl>
> 
> <dl><dt><a name="TestAdmin-testname3"><strong>testname3</strong></a>(self)</dt></dl>
> 
> <dl><dt><a name="TestAdmin-testname4"><strong>testname4</strong></a>(self)</dt></dl>
> 
> <dl><dt><a name="TestAdmin-testname5"><strong>testname5</strong></a>(self)</dt></dl>
> 
> <dl><dt><a name="TestAdmin-testname6"><strong>testname6</strong></a>(self)</dt></dl>
> 
> <dl><dt><a name="TestAdmin-testname7"><strong>testname7</strong></a>(self)</dt></dl>
> 
> <dl><dt><a name="TestAdmin-testname8"><strong>testname8</strong></a>(self)</dt></dl>
> 
> <dl><dt><a name="TestAdmin-testnumber1"><strong>testnumber1</strong></a>(self)</dt></dl>
> 
> <dl><dt><a name="TestAdmin-testnumber2"><strong>testnumber2</strong></a>(self)</dt></dl>
> 
> <dl><dt><a name="TestAdmin-testnumber3"><strong>testnumber3</strong></a>(self)</dt></dl>
> 
> <dl><dt><a name="TestAdmin-testphone_number_ext1"><strong>testphone_number_ext1</strong></a>(self)</dt></dl>
> 
> <dl><dt><a name="TestAdmin-testphone_number_ext2"><strong>testphone_number_ext2</strong></a>(self)</dt></dl>
> 
> <dl><dt><a name="TestAdmin-testphone_number_ext3"><strong>testphone_number_ext3</strong></a>(self)</dt></dl>
> 
> <dl><dt><a name="TestAdmin-testphone_number_ext4"><strong>testphone_number_ext4</strong></a>(self)</dt></dl>
> 
> <dl><dt><a name="TestAdmin-testyesno1"><strong>testyesno1</strong></a>(self)</dt></dl>
> 
> <dl><dt><a name="TestAdmin-testyesno2"><strong>testyesno2</strong></a>(self)</dt></dl>
> 
> <dl><dt><a name="TestAdmin-testyesno3"><strong>testyesno3</strong></a>(self)</dt></dl>
> 
> <dl><dt><a name="TestAdmin-testyesno4"><strong>testyesno4</strong></a>(self)</dt></dl>
> 
> <hr>
> Methods inherited from <a href="unittest.html#TestCase">unittest.TestCase</a>:<br>
> <dl><dt><a name="TestAdmin-__call__"><strong>__call__</strong></a>(self, *args, **kwds)</dt></dl>
> 
> <dl><dt><a name="TestAdmin-__init__"><strong>__init__</strong></a>(self, methodName<font color="#909090">='runTest'</font>)</dt><dd><tt>Create&nbsp;an&nbsp;instance&nbsp;of&nbsp;the&nbsp;class&nbsp;that&nbsp;will&nbsp;use&nbsp;the&nbsp;named&nbsp;test<br>
> method&nbsp;when&nbsp;executed.&nbsp;Raises&nbsp;a&nbsp;ValueError&nbsp;if&nbsp;the&nbsp;instance&nbsp;does<br>
> not&nbsp;have&nbsp;a&nbsp;method&nbsp;with&nbsp;the&nbsp;specified&nbsp;name.</tt></dd></dl>
> 
> <dl><dt><a name="TestAdmin-__repr__"><strong>__repr__</strong></a>(self)</dt></dl>
> 
> <dl><dt><a name="TestAdmin-__str__"><strong>__str__</strong></a>(self)</dt></dl>
> 
> <dl><dt><a name="TestAdmin-assertAlmostEqual"><strong>assertAlmostEqual</strong></a> = failUnlessAlmostEqual(self, first, second, places<font color="#909090">=7</font>, msg<font color="#909090">=None</font>)</dt><dd><tt>Fail&nbsp;if&nbsp;the&nbsp;two&nbsp;objects&nbsp;are&nbsp;unequal&nbsp;as&nbsp;determined&nbsp;by&nbsp;their<br>
> difference&nbsp;rounded&nbsp;to&nbsp;the&nbsp;given&nbsp;number&nbsp;of&nbsp;decimal&nbsp;places<br>
> (default&nbsp;7)&nbsp;and&nbsp;comparing&nbsp;to&nbsp;zero.<br>
> &nbsp;<br>
> Note&nbsp;that&nbsp;decimal&nbsp;places&nbsp;(from&nbsp;zero)&nbsp;are&nbsp;usually&nbsp;not&nbsp;the&nbsp;same<br>
> as&nbsp;significant&nbsp;digits&nbsp;(measured&nbsp;from&nbsp;the&nbsp;most&nbsp;signficant&nbsp;digit).</tt></dd></dl>
> 
> <dl><dt><a name="TestAdmin-assertAlmostEquals"><strong>assertAlmostEquals</strong></a> = failUnlessAlmostEqual(self, first, second, places<font color="#909090">=7</font>, msg<font color="#909090">=None</font>)</dt><dd><tt>Fail&nbsp;if&nbsp;the&nbsp;two&nbsp;objects&nbsp;are&nbsp;unequal&nbsp;as&nbsp;determined&nbsp;by&nbsp;their<br>
> difference&nbsp;rounded&nbsp;to&nbsp;the&nbsp;given&nbsp;number&nbsp;of&nbsp;decimal&nbsp;places<br>
> (default&nbsp;7)&nbsp;and&nbsp;comparing&nbsp;to&nbsp;zero.<br>
> &nbsp;<br>
> Note&nbsp;that&nbsp;decimal&nbsp;places&nbsp;(from&nbsp;zero)&nbsp;are&nbsp;usually&nbsp;not&nbsp;the&nbsp;same<br>
> as&nbsp;significant&nbsp;digits&nbsp;(measured&nbsp;from&nbsp;the&nbsp;most&nbsp;signficant&nbsp;digit).</tt></dd></dl>
> 
> <dl><dt><a name="TestAdmin-assertEqual"><strong>assertEqual</strong></a> = failUnlessEqual(self, first, second, msg<font color="#909090">=None</font>)</dt><dd><tt>Fail&nbsp;if&nbsp;the&nbsp;two&nbsp;objects&nbsp;are&nbsp;unequal&nbsp;as&nbsp;determined&nbsp;by&nbsp;the&nbsp;'=='<br>
> operator.</tt></dd></dl>
> 
> <dl><dt><a name="TestAdmin-assertEquals"><strong>assertEquals</strong></a> = failUnlessEqual(self, first, second, msg<font color="#909090">=None</font>)</dt><dd><tt>Fail&nbsp;if&nbsp;the&nbsp;two&nbsp;objects&nbsp;are&nbsp;unequal&nbsp;as&nbsp;determined&nbsp;by&nbsp;the&nbsp;'=='<br>
> operator.</tt></dd></dl>
> 
> <dl><dt><a name="TestAdmin-assertFalse"><strong>assertFalse</strong></a> = failIf(self, expr, msg<font color="#909090">=None</font>)</dt><dd><tt>Fail&nbsp;the&nbsp;test&nbsp;if&nbsp;the&nbsp;expression&nbsp;is&nbsp;true.</tt></dd></dl>
> 
> <dl><dt><a name="TestAdmin-assertNotAlmostEqual"><strong>assertNotAlmostEqual</strong></a> = failIfAlmostEqual(self, first, second, places<font color="#909090">=7</font>, msg<font color="#909090">=None</font>)</dt><dd><tt>Fail&nbsp;if&nbsp;the&nbsp;two&nbsp;objects&nbsp;are&nbsp;equal&nbsp;as&nbsp;determined&nbsp;by&nbsp;their<br>
> difference&nbsp;rounded&nbsp;to&nbsp;the&nbsp;given&nbsp;number&nbsp;of&nbsp;decimal&nbsp;places<br>
> (default&nbsp;7)&nbsp;and&nbsp;comparing&nbsp;to&nbsp;zero.<br>
> &nbsp;<br>
> Note&nbsp;that&nbsp;decimal&nbsp;places&nbsp;(from&nbsp;zero)&nbsp;are&nbsp;usually&nbsp;not&nbsp;the&nbsp;same<br>
> as&nbsp;significant&nbsp;digits&nbsp;(measured&nbsp;from&nbsp;the&nbsp;most&nbsp;signficant&nbsp;digit).</tt></dd></dl>
> 
> <dl><dt><a name="TestAdmin-assertNotAlmostEquals"><strong>assertNotAlmostEquals</strong></a> = failIfAlmostEqual(self, first, second, places<font color="#909090">=7</font>, msg<font color="#909090">=None</font>)</dt><dd><tt>Fail&nbsp;if&nbsp;the&nbsp;two&nbsp;objects&nbsp;are&nbsp;equal&nbsp;as&nbsp;determined&nbsp;by&nbsp;their<br>
> difference&nbsp;rounded&nbsp;to&nbsp;the&nbsp;given&nbsp;number&nbsp;of&nbsp;decimal&nbsp;places<br>
> (default&nbsp;7)&nbsp;and&nbsp;comparing&nbsp;to&nbsp;zero.<br>
> &nbsp;<br>
> Note&nbsp;that&nbsp;decimal&nbsp;places&nbsp;(from&nbsp;zero)&nbsp;are&nbsp;usually&nbsp;not&nbsp;the&nbsp;same<br>
> as&nbsp;significant&nbsp;digits&nbsp;(measured&nbsp;from&nbsp;the&nbsp;most&nbsp;signficant&nbsp;digit).</tt></dd></dl>
> 
> <dl><dt><a name="TestAdmin-assertNotEqual"><strong>assertNotEqual</strong></a> = failIfEqual(self, first, second, msg<font color="#909090">=None</font>)</dt><dd><tt>Fail&nbsp;if&nbsp;the&nbsp;two&nbsp;objects&nbsp;are&nbsp;equal&nbsp;as&nbsp;determined&nbsp;by&nbsp;the&nbsp;'=='<br>
> operator.</tt></dd></dl>
> 
> <dl><dt><a name="TestAdmin-assertNotEquals"><strong>assertNotEquals</strong></a> = failIfEqual(self, first, second, msg<font color="#909090">=None</font>)</dt><dd><tt>Fail&nbsp;if&nbsp;the&nbsp;two&nbsp;objects&nbsp;are&nbsp;equal&nbsp;as&nbsp;determined&nbsp;by&nbsp;the&nbsp;'=='<br>
> operator.</tt></dd></dl>
> 
> <dl><dt><a name="TestAdmin-assertRaises"><strong>assertRaises</strong></a> = failUnlessRaises(self, excClass, callableObj, *args, **kwargs)</dt><dd><tt>Fail&nbsp;unless&nbsp;an&nbsp;exception&nbsp;of&nbsp;class&nbsp;excClass&nbsp;is&nbsp;thrown<br>
> by&nbsp;callableObj&nbsp;when&nbsp;invoked&nbsp;with&nbsp;arguments&nbsp;args&nbsp;and&nbsp;keyword<br>
> arguments&nbsp;kwargs.&nbsp;If&nbsp;a&nbsp;different&nbsp;type&nbsp;of&nbsp;exception&nbsp;is<br>
> thrown,&nbsp;it&nbsp;will&nbsp;not&nbsp;be&nbsp;caught,&nbsp;and&nbsp;the&nbsp;test&nbsp;case&nbsp;will&nbsp;be<br>
> deemed&nbsp;to&nbsp;have&nbsp;suffered&nbsp;an&nbsp;error,&nbsp;exactly&nbsp;as&nbsp;for&nbsp;an<br>
> unexpected&nbsp;exception.</tt></dd></dl>
> 
> <dl><dt><a name="TestAdmin-assertTrue"><strong>assertTrue</strong></a> = failUnless(self, expr, msg<font color="#909090">=None</font>)</dt><dd><tt>Fail&nbsp;the&nbsp;test&nbsp;unless&nbsp;the&nbsp;expression&nbsp;is&nbsp;true.</tt></dd></dl>
> 
> <dl><dt><a name="TestAdmin-assert_"><strong>assert_</strong></a> = failUnless(self, expr, msg<font color="#909090">=None</font>)</dt><dd><tt>Fail&nbsp;the&nbsp;test&nbsp;unless&nbsp;the&nbsp;expression&nbsp;is&nbsp;true.</tt></dd></dl>
> 
> <dl><dt><a name="TestAdmin-countTestCases"><strong>countTestCases</strong></a>(self)</dt></dl>
> 
> <dl><dt><a name="TestAdmin-debug"><strong>debug</strong></a>(self)</dt><dd><tt>Run&nbsp;the&nbsp;test&nbsp;without&nbsp;collecting&nbsp;errors&nbsp;in&nbsp;a&nbsp;TestResult</tt></dd></dl>
> 
> <dl><dt><a name="TestAdmin-defaultTestResult"><strong>defaultTestResult</strong></a>(self)</dt></dl>
> 
> <dl><dt><a name="TestAdmin-fail"><strong>fail</strong></a>(self, msg<font color="#909090">=None</font>)</dt><dd><tt>Fail&nbsp;immediately,&nbsp;with&nbsp;the&nbsp;given&nbsp;message.</tt></dd></dl>
> 
> <dl><dt><a name="TestAdmin-failIf"><strong>failIf</strong></a>(self, expr, msg<font color="#909090">=None</font>)</dt><dd><tt>Fail&nbsp;the&nbsp;test&nbsp;if&nbsp;the&nbsp;expression&nbsp;is&nbsp;true.</tt></dd></dl>
> 
> <dl><dt><a name="TestAdmin-failIfAlmostEqual"><strong>failIfAlmostEqual</strong></a>(self, first, second, places<font color="#909090">=7</font>, msg<font color="#909090">=None</font>)</dt><dd><tt>Fail&nbsp;if&nbsp;the&nbsp;two&nbsp;objects&nbsp;are&nbsp;equal&nbsp;as&nbsp;determined&nbsp;by&nbsp;their<br>
> difference&nbsp;rounded&nbsp;to&nbsp;the&nbsp;given&nbsp;number&nbsp;of&nbsp;decimal&nbsp;places<br>
> (default&nbsp;7)&nbsp;and&nbsp;comparing&nbsp;to&nbsp;zero.<br>
> &nbsp;<br>
> Note&nbsp;that&nbsp;decimal&nbsp;places&nbsp;(from&nbsp;zero)&nbsp;are&nbsp;usually&nbsp;not&nbsp;the&nbsp;same<br>
> as&nbsp;significant&nbsp;digits&nbsp;(measured&nbsp;from&nbsp;the&nbsp;most&nbsp;signficant&nbsp;digit).</tt></dd></dl>
> 
> <dl><dt><a name="TestAdmin-failIfEqual"><strong>failIfEqual</strong></a>(self, first, second, msg<font color="#909090">=None</font>)</dt><dd><tt>Fail&nbsp;if&nbsp;the&nbsp;two&nbsp;objects&nbsp;are&nbsp;equal&nbsp;as&nbsp;determined&nbsp;by&nbsp;the&nbsp;'=='<br>
> operator.</tt></dd></dl>
> 
> <dl><dt><a name="TestAdmin-failUnless"><strong>failUnless</strong></a>(self, expr, msg<font color="#909090">=None</font>)</dt><dd><tt>Fail&nbsp;the&nbsp;test&nbsp;unless&nbsp;the&nbsp;expression&nbsp;is&nbsp;true.</tt></dd></dl>
> 
> <dl><dt><a name="TestAdmin-failUnlessAlmostEqual"><strong>failUnlessAlmostEqual</strong></a>(self, first, second, places<font color="#909090">=7</font>, msg<font color="#909090">=None</font>)</dt><dd><tt>Fail&nbsp;if&nbsp;the&nbsp;two&nbsp;objects&nbsp;are&nbsp;unequal&nbsp;as&nbsp;determined&nbsp;by&nbsp;their<br>
> difference&nbsp;rounded&nbsp;to&nbsp;the&nbsp;given&nbsp;number&nbsp;of&nbsp;decimal&nbsp;places<br>
> (default&nbsp;7)&nbsp;and&nbsp;comparing&nbsp;to&nbsp;zero.<br>
> &nbsp;<br>
> Note&nbsp;that&nbsp;decimal&nbsp;places&nbsp;(from&nbsp;zero)&nbsp;are&nbsp;usually&nbsp;not&nbsp;the&nbsp;same<br>
> as&nbsp;significant&nbsp;digits&nbsp;(measured&nbsp;from&nbsp;the&nbsp;most&nbsp;signficant&nbsp;digit).</tt></dd></dl>
> 
> <dl><dt><a name="TestAdmin-failUnlessEqual"><strong>failUnlessEqual</strong></a>(self, first, second, msg<font color="#909090">=None</font>)</dt><dd><tt>Fail&nbsp;if&nbsp;the&nbsp;two&nbsp;objects&nbsp;are&nbsp;unequal&nbsp;as&nbsp;determined&nbsp;by&nbsp;the&nbsp;'=='<br>
> operator.</tt></dd></dl>
> 
> <dl><dt><a name="TestAdmin-failUnlessRaises"><strong>failUnlessRaises</strong></a>(self, excClass, callableObj, *args, **kwargs)</dt><dd><tt>Fail&nbsp;unless&nbsp;an&nbsp;exception&nbsp;of&nbsp;class&nbsp;excClass&nbsp;is&nbsp;thrown<br>
> by&nbsp;callableObj&nbsp;when&nbsp;invoked&nbsp;with&nbsp;arguments&nbsp;args&nbsp;and&nbsp;keyword<br>
> arguments&nbsp;kwargs.&nbsp;If&nbsp;a&nbsp;different&nbsp;type&nbsp;of&nbsp;exception&nbsp;is<br>
> thrown,&nbsp;it&nbsp;will&nbsp;not&nbsp;be&nbsp;caught,&nbsp;and&nbsp;the&nbsp;test&nbsp;case&nbsp;will&nbsp;be<br>
> deemed&nbsp;to&nbsp;have&nbsp;suffered&nbsp;an&nbsp;error,&nbsp;exactly&nbsp;as&nbsp;for&nbsp;an<br>
> unexpected&nbsp;exception.</tt></dd></dl>
> 
> <dl><dt><a name="TestAdmin-id"><strong>id</strong></a>(self)</dt></dl>
> 
> <dl><dt><a name="TestAdmin-run"><strong>run</strong></a>(self, result<font color="#909090">=None</font>)</dt></dl>
> 
> <dl><dt><a name="TestAdmin-setUp"><strong>setUp</strong></a>(self)</dt><dd><tt>Hook&nbsp;method&nbsp;for&nbsp;setting&nbsp;up&nbsp;the&nbsp;test&nbsp;fixture&nbsp;before&nbsp;exercising&nbsp;it.</tt></dd></dl>
> 
> <dl><dt><a name="TestAdmin-shortDescription"><strong>shortDescription</strong></a>(self)</dt><dd><tt>Returns&nbsp;a&nbsp;one-line&nbsp;description&nbsp;of&nbsp;the&nbsp;test,&nbsp;or&nbsp;None&nbsp;if&nbsp;no<br>
> description&nbsp;has&nbsp;been&nbsp;provided.<br>
> &nbsp;<br>
> The&nbsp;default&nbsp;implementation&nbsp;of&nbsp;this&nbsp;method&nbsp;returns&nbsp;the&nbsp;first&nbsp;line&nbsp;of<br>
> the&nbsp;specified&nbsp;test&nbsp;method's&nbsp;docstring.</tt></dd></dl>
> 
> <dl><dt><a name="TestAdmin-tearDown"><strong>tearDown</strong></a>(self)</dt><dd><tt>Hook&nbsp;method&nbsp;for&nbsp;deconstructing&nbsp;the&nbsp;test&nbsp;fixture&nbsp;after&nbsp;testing&nbsp;it.</tt></dd></dl>
> 
> <hr>
> Data descriptors inherited from <a href="unittest.html#TestCase">unittest.TestCase</a>:<br>
> <dl><dt><strong>__dict__</strong></dt>
> <dd><tt>dictionary&nbsp;for&nbsp;instance&nbsp;variables&nbsp;(if&nbsp;defined)</tt></dd>
> </dl>
> <dl><dt><strong>__weakref__</strong></dt>
> <dd><tt>list&nbsp;of&nbsp;weak&nbsp;references&nbsp;to&nbsp;the&nbsp;object&nbsp;(if&nbsp;defined)</tt></dd>
> </dl>
> <hr>
> Data and other attributes inherited from <a href="unittest.html#TestCase">unittest.TestCase</a>:<br>
> <dl><dt><strong>failureException</strong> = &lt;type 'exceptions.AssertionError'&gt;<dd><tt>Assertion&nbsp;failed.</tt></dl>
> 
> </td></tr></table></td></tr></table>
> </body></html>
\ No newline at end of file

***************************
* Changes in revision 38 
***************************

------------------------------------------------------------------------
r38 | ting | 2009-03-25 22:38:20 -0500 (Wed, 25 Mar 2009) | 1 line

adding validation/validator html doc
------------------------------------------------------------------------

Index: validator.html
===================================================================
0a1,45
> 
> <!doctype html PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
> <html><head><title>Python: module validator</title>
> </head><body bgcolor="#f0f0f8">
> 
> <table width="100%" cellspacing=0 cellpadding=2 border=0 summary="heading">
> <tr bgcolor="#7799ee">
> <td valign=bottom>&nbsp;<br>
> <font color="#ffffff" face="helvetica, arial">&nbsp;<br><big><big><strong>validator</strong></big></big></font></td
> ><td align=right valign=bottom
> ><font color="#ffffff" face="helvetica, arial"><a href=".">index</a><br><a href="file:/home/ting/svn/cs373_pj5/validator.py">/home/ting/svn/cs373_pj5/validator.py</a></font></td></tr></table>
>     <p></p>
> <p>
> <table width="100%" cellspacing=0 cellpadding=2 border=0 summary="section">
> <tr bgcolor="#aa55cc">
> <td colspan=3 valign=bottom>&nbsp;<br>
> <font color="#fffff" face="helvetica, arial"><big><strong>Modules</strong></big></font></td></tr>
>     
> <tr><td bgcolor="#aa55cc"><tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</tt></td><td>&nbsp;</td>
> <td width="100%"><table width="100%" summary="list"><tr><td width="25%" valign=top><a href="Validation.html">Validation</a><br>
> </td><td width="25%" valign=top><a href="re.html">re</a><br>
> </td><td width="25%" valign=top></td><td width="25%" valign=top></td></tr></table></td></tr></table><p>
> <table width="100%" cellspacing=0 cellpadding=2 border=0 summary="section">
> <tr bgcolor="#ee77aa">
> <td colspan=3 valign=bottom>&nbsp;<br>
> <font color="#ffffff" face="helvetica, arial"><big><strong>Classes</strong></big></font></td></tr>
>     
> <tr><td bgcolor="#ee77aa"><tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</tt></td><td>&nbsp;</td>
> <td width="100%"><dl>
> <dt><font face="helvetica, arial"><a href="validator.html#Validator">Validator</a>
> </font></dt></dl>
>  <p>
> <table width="100%" cellspacing=0 cellpadding=2 border=0 summary="section">
> <tr bgcolor="#ffc8d8">
> <td colspan=3 valign=bottom>&nbsp;<br>
> <font color="#000000" face="helvetica, arial"><a name="Validator">class <strong>Validator</strong></a></font></td></tr>
>     
> <tr bgcolor="#ffc8d8"><td rowspan=2><tt>&nbsp;&nbsp;&nbsp;</tt></td>
> <td colspan=2><tt>Generic&nbsp;validator&nbsp;class&nbsp;depending&nbsp;on&nbsp;form&nbsp;type.<br>&nbsp;</tt></td></tr>
> <tr><td>&nbsp;</td>
> <td width="100%">Methods defined here:<br>
> <dl><dt><a name="Validator-__init__"><strong>__init__</strong></a>(self, form_data)</dt><dd><tt>Constructor&nbsp;validates&nbsp;k-v&nbsp;pairs&nbsp;found&nbsp;in&nbsp;form_data&nbsp;and&nbsp;returns&nbsp;results.</tt></dd></dl>
> 
> </td></tr></table></td></tr></table>
> </body></html>
\ No newline at end of file
Index: Validation.html
===================================================================
0a1,40
> 
> <!doctype html PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
> <html><head><title>Python: module Validation</title>
> </head><body bgcolor="#f0f0f8">
> 
> <table width="100%" cellspacing=0 cellpadding=2 border=0 summary="heading">
> <tr bgcolor="#7799ee">
> <td valign=bottom>&nbsp;<br>
> <font color="#ffffff" face="helvetica, arial">&nbsp;<br><big><big><strong>Validation</strong></big></big></font></td
> ><td align=right valign=bottom
> ><font color="#ffffff" face="helvetica, arial"><a href=".">index</a><br><a href="file:/home/ting/svn/cs373_pj5/Validation.py">/home/ting/svn/cs373_pj5/Validation.py</a></font></td></tr></table>
>     <p></p>
> <p>
> <table width="100%" cellspacing=0 cellpadding=2 border=0 summary="section">
> <tr bgcolor="#aa55cc">
> <td colspan=3 valign=bottom>&nbsp;<br>
> <font color="#fffff" face="helvetica, arial"><big><strong>Modules</strong></big></font></td></tr>
>     
> <tr><td bgcolor="#aa55cc"><tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</tt></td><td>&nbsp;</td>
> <td width="100%"><table width="100%" summary="list"><tr><td width="25%" valign=top><a href="re.html">re</a><br>
> </td><td width="25%" valign=top></td><td width="25%" valign=top></td><td width="25%" valign=top></td></tr></table></td></tr></table><p>
> <table width="100%" cellspacing=0 cellpadding=2 border=0 summary="section">
> <tr bgcolor="#eeaa77">
> <td colspan=3 valign=bottom>&nbsp;<br>
> <font color="#ffffff" face="helvetica, arial"><big><strong>Functions</strong></big></font></td></tr>
>     
> <tr><td bgcolor="#eeaa77"><tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</tt></td><td>&nbsp;</td>
> <td width="100%"><dl><dt><a name="-citizen"><strong>citizen</strong></a>(s)</dt><dd><tt>Resident/Citizen&nbsp;validator.</tt></dd></dl>
>  <dl><dt><a name="-class_number"><strong>class_number</strong></a>(s)</dt><dd><tt>Class&nbsp;number&nbsp;validator.</tt></dd></dl>
>  <dl><dt><a name="-comment"><strong>comment</strong></a>(s)</dt><dd><tt>Comment&nbsp;validator.</tt></dd></dl>
>  <dl><dt><a name="-date"><strong>date</strong></a>(s)</dt><dd><tt>Date&nbsp;validator.</tt></dd></dl>
>  <dl><dt><a name="-degree_type"><strong>degree_type</strong></a>(s)</dt><dd><tt>Degree&nbsp;validator.</tt></dd></dl>
>  <dl><dt><a name="-email"><strong>email</strong></a>(s)</dt><dd><tt>E-mail&nbsp;address&nbsp;validator.</tt></dd></dl>
>  <dl><dt><a name="-name"><strong>name</strong></a>(s)</dt><dd><tt>Name&nbsp;validator.</tt></dd></dl>
>  <dl><dt><a name="-number"><strong>number</strong></a>(s)</dt><dd><tt>Number&nbsp;validator.</tt></dd></dl>
>  <dl><dt><a name="-phone_number"><strong>phone_number</strong></a>(s)</dt><dd><tt>Phone&nbsp;number&nbsp;validator.</tt></dd></dl>
>  <dl><dt><a name="-phone_number_ext"><strong>phone_number_ext</strong></a>(s)</dt><dd><tt>Phone&nbsp;number&nbsp;extension&nbsp;validator.</tt></dd></dl>
>  <dl><dt><a name="-yes_no"><strong>yes_no</strong></a>(s)</dt><dd><tt>yes/no&nbsp;validator.</tt></dd></dl>
> </td></tr></table>
> </body></html>
\ No newline at end of file

***************************
* Changes in revision 39 
***************************

------------------------------------------------------------------------
r39 | jeffery | 2009-03-25 22:42:46 -0500 (Wed, 25 Mar 2009) | 3 lines

Added unit tests for the Validator class in TestValidation.py
Jeffery Zhu

------------------------------------------------------------------------

Index: TestValidation.py
===================================================================
4a5
> from validator import Validator
6a8,79
> 	
> 	"""
> 	Test the Validator class
> 	"""
> 	def testvalidator1 (self) :
> 		form_data = [];
> 		#The first item in the tuple is the name of the field on the webpage
> 		#The second item is the value of the field
> 		#This is just checking if the validator class functions correctly
> 		#The individual validation functions are tested below
> 		form_data.append(('phone_applicant', '210-423-4243'))
> 		form_data.append(('email_applicant', 'flashki@hotmail.com'))
> 		form_data.append(('comment_major', 'Computer Science'))
> 		form_data.append(('comment_admission', '07-05-1988'))
> 		form_data.append(('comment_phd', 'PhD'))
> 		form_data.append(('comment_supervising', 'Downing'))
> 		form_data.append(('comment_citizen', 'citizen'))
> 		form_data.append(('comment_native', 'yes'))
> 		form_data.append(('comment_ta', 'no'))
> 		form_data.append(('comment_programming', 'C'))
> 		form_data.append(('comment_area', 'Algorithms'))
> 		form_data.append(('comment_qualified', 'Maybe'))
> 		form_data.append(('comment_wanted', 'You'))
> 		form_data.append(('comment_unwanted', 'Me'))
> 		form_data.append(('comment_native', 'yes'))
> 		form_data.append(('comment_specialization', 'None'))
> 		form_data.append(('comment_class_name', 'CS373'))
> 		form_data.append(('comment_inst_name', 'Downing'))
> 		form_data.append(('comment_exp_enrollment', '10'))
> 		form_data.append(('comment_num_ta_needed', '1'))
> 		form_data.append(('comment_num_ta_assigned', '0'))
> 		
> 		v = Validator(form_data)
> 		for r in v.results:
> 			if r['valid'] == False:
> 				print r['key'], r['value']
> 			self.assert_(r['valid'] == True)
> 
> 	def testvalidator2 (self) :
> 		form_data = [];
> 		#The first item in the tuple is the name of the field on the webpage
> 		#The second item is the value of the field
> 		#This is just checking if the validator class functions correctly
> 		#The individual validation functions are tested below
> 		form_data.append(('phone_applicant', '210-423-42432'))
> 		form_data.append(('email_applicant', 'flashki@hotmail.com r23r'))
> 		form_data.append(('comment_major', ''))
> 		form_data.append(('comment_admission', '07-05-198'))
> 		form_data.append(('comment_phd', 'Ph'))
> 		form_data.append(('comment_supervising', ''))
> 		form_data.append(('comment_citizen', 'ht'))
> 		form_data.append(('comment_native', ''))
> 		form_data.append(('comment_ta', 'n'))
> 		form_data.append(('comment_programming', ''))
> 		form_data.append(('comment_area', ''))
> 		form_data.append(('comment_qualified', ''))
> 		form_data.append(('comment_wanted', ''))
> 		form_data.append(('comment_unwanted', ''))
> 		form_data.append(('comment_native', 'ye'))
> 		form_data.append(('comment_specialization', ''))
> 		form_data.append(('comment_class_name', ''))
> 		form_data.append(('comment_inst_name', ''))
> 		form_data.append(('comment_exp_enrollment', '10s'))
> 		form_data.append(('comment_num_ta_needed', '1d'))
> 		form_data.append(('comment_num_ta_assigned', ''))
> 		
> 		v = Validator(form_data)
> 		for r in v.results:
> 			if r['valid'] == True:
> 				print r['key'], r['value']
> 			self.assert_(r['valid'] == False)
> 

***************************
* Changes in revision 40 
***************************

------------------------------------------------------------------------
r40 | ting | 2009-03-25 22:44:08 -0500 (Wed, 25 Mar 2009) | 1 line

adding subversion log and script
------------------------------------------------------------------------

Index: sub_log3.sh
===================================================================
0a1,41
> #!/bin/sh
> 
> 
> # check for an optional command line variable
> if [ $# -le 0 ]; then
> 	echo >&2 "No command line args, running svnversion from current directory"
> 	dir="./"
> elif [ $1 = "-h" -o $1 = "--help" -o $# -gt 1 ]; then
> 	/bin/echo -e "Usage: $0 [path]\n\tOutputs a running diff of a subversion checkout directory.\n\tpath is optional, defaulting to the current directory\n\tPlease note that the path must be a directory from which 'svn log' returns useful text."
> else
> 	dir=$1
> 	echo >&2 "Running svnversion on this path: $dir"
> fi
> 
> # get the current version
> latestVersion=`svnversion $dir | grep -oE "[0-9]+" | tail -1`
> 
> # check whether the version we got is sane
> if [ -z $latestVersion ]; then
> 	echo >&2 "Error: svnversion does not return a number.  Are you in the correct directory?"
> 	exit
> elif [ $latestVersion -eq 1 ]; then
> 	echo >&2 "Error: svnversion returns $latestVersion.  There aren't going to be any changes.  Maybe you forgot to commit some files?"
> 	exit
> fi
> 
> # output the information
> /bin/echo -e "Current version = $latestVersion\n"
> 
> i=2
> while [ $i -le "$latestVersion" ]
> do
> 	echo "***************************"
> 	echo "* Changes in revision $i "
> 	/bin/echo -e "***************************\n"
> 	svn log -r $i $dir
> 	echo ""
> 	svn diff -c$i $dir --diff-cmd /usr/bin/diff -x "-Bw --suppress-common-lines"
> 	echo ""
> 	i=$(($i+1))
> done

Property changes on: sub_log3.sh
___________________________________________________________________
Added: svn:executable
   + *

Index: subversion.diff
===================================================================
0a1,3234
> Current version = 38
> 
> ***************************
> * Changes in revision 2 
> ***************************
> 
> ------------------------------------------------------------------------
> r2 | levi | 2009-03-23 17:47:15 -0500 (Mon, 23 Mar 2009) | 1 line
> 
> Initial copy to SVN
> ------------------------------------------------------------------------
> 
> Index: validator.pyc
> ===================================================================
> Cannot display: file marked as a binary type.
> svn:mime-type = application/octet-stream
> 
> Property changes on: validator.pyc
> ___________________________________________________________________
> Added: svn:mime-type
>    + application/octet-stream
> 
> Index: style/reset.css
> ===================================================================
> 0a1,50
> > /*
> >  * credit to Eric Meyer for this CSS reset
> >  */
> > 
> > html, body, div, span, applet, object, iframe,
> > h1, h2, h3, h4, h5, h6, p, blockquote, pre,
> > a, abbr, acronym, address, big, cite, code,
> > del, dfn, em, font, img, ins, kbd, q, s, samp,
> > small, strike, strong, sub, sup, tt, var,
> > b, u, i, center,
> > dl, dt, dd, ol, ul, li,
> > fieldset, form, label, legend,
> > table, caption, tbody, tfoot, thead, tr, th, td {
> > 	margin: 0;
> > 	padding: 0;
> > 	border: 0;
> > 	outline: 0;
> > 	font-size: 100%;
> > 	vertical-align: baseline;
> > 	background: transparent;
> > }
> > body {
> > 	line-height: 1;
> > }
> > ol, ul {
> > 	list-style: none;
> > }
> > blockquote, q {
> > 	quotes: none;
> > }
> > 
> > /* remember to define focus styles! */
> > :focus {
> > 	outline: 0;
> > }
> > 
> > /* remember to highlight inserts somehow! */
> > ins {
> > 	text-decoration: none;
> > }
> > del {
> > 	text-decoration: line-through;
> > }
> > 
> > /* tables still need 'cellspacing="0"' in the markup */
> > table {
> > 	border-collapse: collapse;
> > 	border-spacing: 0;
> > }
> > 
> Index: style/main.css
> ===================================================================
> 0a1,83
> > form {
> > 	background-color: #EEE;
> > 	border: 1px solid #CCC;
> > 	font: small Verdana, Helvetica, Geneva, Arial, sans-serif;
> > 	padding: 10px;
> > 	margin: 10px;
> > 	width: 400px;
> > }
> > 
> > form dl {
> > 	text-align: right;
> > }
> > 
> > form dl dt {
> > 	background-color: #FFF;
> > 	border-left: 3px solid #CCC;
> > 	float: left;
> > 	line-height: 200%;
> > 	padding: 0px 10px 0px 5px;
> > }
> > 
> > form dl dd {
> > 	padding: 0px 0px 10px 0px;
> > 	position: relative;
> > }
> > 
> > form dl dd input {
> > 	width: 250px;
> > }
> > 
> > form dl dd textarea {
> > 	height: 100px;
> > 	width: 250px;
> > }
> > 
> > form dl dd span {
> > 	background-color: #FF0;
> > 	border: 1px solid #CC0;
> > 	display: none;
> > 	font: x-small Courier New, serif;
> > 	padding: 2px;
> > 	position: absolute;
> > 	width: 150px;
> > 	right: -180px;
> > 	text-align: center;
> > 	top: 4px;
> > }
> > 
> > form dl dd span.error {
> > 	background-color: #F00;
> > 	border: 1px solid #000;
> > 	display: inline;
> > }
> > 
> > form div {
> > 	text-align: right;
> > }
> > 
> > form div input {
> > 	background-color: #CCC;
> > 	border: 1px outset #CCC;
> > }
> > 
> > .onFocus {
> > 	border: 2px solid #FF0;
> > 	margin: 1px;
> > }
> > 
> > .onBlur {
> > 	border: 1px solid #000;
> > 	margin: 2px;
> > }
> > 
> > .valid {
> > 	border: 3px solid #0F0;
> > 	margin: 0px;
> > }
> > 
> > .invalid {
> > 	border: 3px solid #F00;
> > 	margin: 0px;
> > }
> > 
> Index: app.yaml
> ===================================================================
> 0a1,15
> > application: cs373-54270-teamd
> > version: 6
> > runtime: python
> > api_version: 1
> > 
> > handlers:
> > - url: /js
> >   static_dir: js
> > 
> > - url: /style
> >   static_dir: style
> > 
> > - url: /.*
> >   script: index.py
> > 
> Index: index.yaml
> ===================================================================
> 0a1,11
> > indexes:
> > 
> > # AUTOGENERATED
> > 
> > # This index.yaml is automatically updated whenever the dev_appserver
> > # detects that a new type of query is run.  If you want to manage the
> > # index.yaml file manually, remove the above marker line (the line
> > # saying "# AUTOGENERATED").  If you want to manage some indexes
> > # manually, move them above the marker line.  The index.yaml file is
> > # automatically uploaded to the admin console when you next deploy
> > # your application using appcfg.py.
> Index: index.html
> ===================================================================
> 0a1,29
> > <!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
> > <html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
> > 	<head>
> > 		<title>C S 373: 54270: TA Matching</title>
> > 
> > 		<link rel="stylesheet" type="text/css" href="/style/reset.css" />
> > 		<link rel="stylesheet" type="text/css" href="/style/main.css" />
> > 
> > 		<script type="text/javascript" src="/js/load.js"></script>
> > 		<script type="text/javascript" src="/js/setHighlight.js"></script>
> > 		<script type="text/javascript" src="/js/formInputHighlight.js"></script>
> > 		<script type="text/javascript" src="/js/formTextareaHighlight.js"></script>
> > 	</head>
> > 
> > 	<body>
> > 		<form action="/submitted" method="post">
> > 			<dl>
> > 				<dt><label for="name_test">Name</label></dt><dd><input type="text" name="name_test" id="name_test" {% if results %}{% for result in results %}{% ifequal result.key 'name_test' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Type in your name, at least one char</span></dd>
> > 				<dt><label for="password_test">Password</label></dt><dd><input type="password" name="password_test" id="password_test" {% if results %}{% for result in results %}{% ifequal result.key 'password_test' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Type in your password, at least six chars</span></dd>
> > 				<dt><label for="address_test">Address</label></dt><dd><input type="text" name="address_test" id="address_test" {% if results %}{% for result in results %}{% ifequal result.key 'address_test' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Type in your address</span></dd>
> > 				<dt><label for="phone_test">Phone</label></dt><dd><input type="text" name="phone_test" id="phone_test" {% if results %}{% for result in results %}{% ifequal result.key 'phone_test' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Type in your phone number</span></dd>
> > 				<dt><label for="email_test">Email</label></dt><dd><input type="text" name="email_test" id="email_test" {% if results %}{% for result in results %}{% ifequal result.key 'email_test' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Type in your email address</span></dd>
> > 				<dt><label for="comment_test">Comment</label></dt><dd><textarea name="comment_test" id="comment_test">{% if results %}{% for result in results %}{% ifequal result.key 'comment_test' %}{% if result.valid %}{{ result.value }}</textarea><span{% else %}</textarea><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}</textarea><span{% endif %}>Type in your comment</span></dd>
> > 			</dl>
> > 			<div><input type="submit" value="Submit" /></div>
> > 		</form>
> > 	</body>
> > </html>
> > 
> Index: js/formTextareaHighlight.js
> ===================================================================
> 0a1,10
> > function formTextareaHighlight() {
> > 	if(!document.getElementsByTagName) return;
> > 
> > 	var textareas = document.getElementsByTagName("textarea");
> > 	for(var lcv = 0; lcv < textareas.length; ++lcv)
> > 		setHighlight(textareas[lcv]);
> > }
> > 
> > load(formTextareaHighlight);
> > 
> Index: js/formInputHighlight.js
> ===================================================================
> 0a1,14
> > function formInputHighlight() {
> > 	if(!document.getElementsByTagName) return;
> > 
> > 	var inputs = document.getElementsByTagName('input');
> > 	for(var lcv = 0; lcv < inputs.length; ++lcv) {
> > 		var input = inputs[lcv];
> > 		var inputType = input.getAttribute('type');
> > 		if(inputType == 'text' || inputType == 'password')
> > 			setHighlight(input);
> > 	}
> > }
> > 
> > load(formInputHighlight);
> > 
> Index: js/load.js
> ===================================================================
> 0a1,12
> > function load(func) {
> > 	var old = window.onload;
> > 	if(typeof window.onload != 'function')
> > 		window.onload = func;
> > 	else
> > 		window.onload = function() {
> > 			if(old)
> > 				old();
> > 			func();
> > 		}
> > }
> > 
> Index: js/setHighlight.js
> ===================================================================
> 0a1,46
> > function setHighlight(field) {
> > 	field.onfocus = function() {
> > 		this.className = 'onFocus';
> > 		this.parentNode.getElementsByTagName('span')[0].className = '';
> > 		this.parentNode.getElementsByTagName('span')[0].style.display = 'inline';
> > 	}
> > 
> > 	field.onblur = function() {
> > 		var xmlHttp;
> > 		try {
> > 			// Firefox, Opera 8.0+, Safari
> > 			xmlHttp = new XMLHttpRequest();
> > 		}
> > 		catch(e) {
> > 			// Internet Explorer
> > 			try {
> > 				xmlHttp = new ActiveXObject("Msxml2.XMLHTTP");
> > 			}
> > 			catch(e) {
> > 				try {
> > 					xmlHttp=new ActiveXObject("Microsoft.XMLHTTP");
> > 				}
> > 				catch(e) {
> > 					alert("Your browser does not support AJAX!");
> > 					return false;
> > 				}
> > 			}
> > 		}
> > 		xmlHttp.onreadystatechange = function() {
> > 			if(xmlHttp.readyState == 4) {
> > 				var result = xmlHttp.responseXML.getElementsByTagName('field')[0].getAttribute('valid');
> > 				if(result == 'True')
> > 					field.className = 'valid';
> > 				else if(result == 'False')
> > 					field.className = 'invalid';
> > 			}
> > 		}
> > 		this.className = 'onBlur';
> > 		xmlHttp.open('GET','is_valid?key=' + this.getAttribute('name') + '&value=' + this.value, true);
> > 		xmlHttp.send(null);
> > 		this.parentNode.getElementsByTagName('span')[0].style.display = 'none';
> > 	}
> > 
> > 	field.className = 'onBlur';
> > }
> > 
> Index: validator.py
> ===================================================================
> 0a1,27
> > import re
> > 
> > class Validator:
> > 	def __init__(self, form_data):
> > 		self.results = []
> > 
> > 		#TODO: how would this happen?
> > #		if not form_data:
> > #			self.valid = False
> > #			self.errors.append('You POSTed without data.')
> > 
> > 		for key, value in form_data:
> > 			result = {}
> > 			result['key'] = key
> > 			result['value'] = value
> > 			ghetto_switch = {
> > 				'name'     : lambda: True if re.match('.+', value) else False,
> > 				'password' : lambda: True if re.match('.{6,30}', value) else False,
> > 				'address'  : lambda: True if re.match('.+', value) else False,
> > 				'phone'    : lambda: True if re.match('.+', value) else False,
> > 				# lol, this is ALMOST to RFC 2822, doesn't handle double quoted sections before '@' or square bracket Internet address after, perfect bug op
> > 				'email'    : lambda: True if re.match('[a-zA-Z0-9!#$%&\'*+/=?^_`{|}~-]+(?:\.[a-zA-Z0-9!#$%&\'*+/=?^_`{|}~-]+)*@(?:[a-zA-Z0-9](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?\.)+[a-zA-Z0-9](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?', value) else False,
> > 				'comment'  : lambda: True if re.match('.+', value) else False,
> > 			}[key.split('_')[0]]()
> > 			result['valid'] = True if ghetto_switch else False
> > 			self.results.append(result)
> > 
> Index: index.py
> ===================================================================
> 0a1,48
> > import os
> > from google.appengine.ext import webapp
> > from google.appengine.ext.webapp import template
> > from google.appengine.ext.webapp.util import run_wsgi_app
> > from validator import Validator
> > 
> > class Index(webapp.RequestHandler):
> > 	def __init__(self):
> > 		self.results = []
> > 
> > 	def get(self):
> > 		self.template()
> > 
> > 	def post(self):
> > 		validator = Validator(self.request.params.items())
> > 		self.results.extend(validator.results)
> > 		self.template()
> > 
> > 	def template(self):
> > 		template_values = {
> > 			'results': self.results,
> > 		}
> > 		path = os.path.join(os.path.dirname(__file__), 'index.html')
> > 		self.response.out.write(template.render(path, template_values))
> > 
> > class Is_valid(webapp.RequestHandler):
> > 	def get(self):
> > 		key = self.request.get('key')
> > 		value = self.request.get('value')
> > 		validator = Validator([(key, value)])
> > #		self.response.headers['Content-Type'] = 'text/html'
> > #		self.response.out.write('True' if validator.valid else 'False')
> > 		self.response.headers['Content-Type'] = 'text/xml'
> > 		self.response.out.write("<?xml version=\"1.0\" encoding=\"utf-8\"?>\n")
> > 		self.response.out.write("<fields>\n")
> > 		self.response.out.write("\t<field key=\"" + key + '" value="' + value + '" valid="' + str(validator.results[0]['valid']) + "\" />\n")
> > 		self.response.out.write("</fields>\n")
> > 
> > application = webapp.WSGIApplication([('/is_valid', Is_valid),
> >                                       ('/.*', Index)],
> >                                      debug=True)
> > 
> > def main():
> > 	run_wsgi_app(application)
> > 
> > if __name__ == "__main__":
> > 	main()
> > 
> 
> ***************************
> * Changes in revision 3 
> ***************************
> 
> ------------------------------------------------------------------------
> r3 | estesox | 2009-03-23 18:47:18 -0500 (Mon, 23 Mar 2009) | 1 line
> 
> 
> ------------------------------------------------------------------------
> 
> Index: TA1.txt
> ===================================================================
> 1c1
> < -----
> ---
> > ----
> 16,17c16,17
> < Name:
> < EID:
> ---
> > Name:Ji-Hoon Woo
> > EID:jw3352
> 19c19
> < E-mail address:
> ---
> > E-mail address: estesox@gmail.com
> 
> ***************************
> * Changes in revision 4 
> ***************************
> 
> ------------------------------------------------------------------------
> r4 | jeffery | 2009-03-23 18:52:26 -0500 (Mon, 23 Mar 2009) | 2 lines
> 
> Jeff's info for TA1.txt
> 
> ------------------------------------------------------------------------
> 
> Index: TA1.txt
> ===================================================================
> 31,32c31,32
> < Name:
> < EID:
> ---
> > Name: Jeffery Zhu
> > EID: JZ995
> 34c34
> < E-mail address:
> ---
> > E-mail address: jz9901@mail.utexas.edu
> 
> ***************************
> * Changes in revision 5 
> ***************************
> 
> ------------------------------------------------------------------------
> r5 | levi | 2009-03-23 19:11:42 -0500 (Mon, 23 Mar 2009) | 1 line
> 
> Copied first form so we have 3 now
> ------------------------------------------------------------------------
> 
> Index: validator.pyc
> ===================================================================
> Cannot display: file marked as a binary type.
> svn:mime-type = application/octet-stream
> Index: index.py
> ===================================================================
> 7c7
> < class Index(webapp.RequestHandler):
> ---
> > class Applicant(webapp.RequestHandler):
> 23c23,61
> < 		path = os.path.join(os.path.dirname(__file__), 'index.html')
> ---
> > 		path = os.path.join(os.path.dirname(__file__), 'applicant.html')
> > 		self.response.out.write(template.render(path, template_values))
> > 
> > class Instructor(webapp.RequestHandler):
> > 	def __init__(self):
> > 		self.results = []
> > 
> > 	def get(self):
> > 		self.template()
> > 
> > 	def post(self):
> > 		validator = Validator(self.request.params.items())
> > 		self.results.extend(validator.results)
> > 		self.template()
> > 
> > 	def template(self):
> > 		template_values = {
> > 			'results': self.results,
> > 		}
> > 		path = os.path.join(os.path.dirname(__file__), 'instructor.html')
> > 		self.response.out.write(template.render(path, template_values))
> > 
> > class Admin(webapp.RequestHandler):
> > 	def __init__(self):
> > 		self.results = []
> > 
> > 	def get(self):
> > 		self.template()
> > 
> > 	def post(self):
> > 		validator = Validator(self.request.params.items())
> > 		self.results.extend(validator.results)
> > 		self.template()
> > 
> > 	def template(self):
> > 		template_values = {
> > 			'results': self.results,
> > 		}
> > 		path = os.path.join(os.path.dirname(__file__), 'admin.html')
> 40c78,80
> <                                       ('/.*', Index)],
> ---
> >                                       ('/applicant', Applicant),
> >                                       ('/instructor', Instructor),
> >                                       ('/admin', Admin)],
> 
> ***************************
> * Changes in revision 6 
> ***************************
> 
> ------------------------------------------------------------------------
> r6 | ting | 2009-03-23 19:13:04 -0500 (Mon, 23 Mar 2009) | 1 line
> 
> updated TA1.txt with template info
> ------------------------------------------------------------------------
> 
> Index: TA1.txt
> ===================================================================
> 21c21
> < Name:
> ---
> > Name: Levi Wiseman
> 24c24
> < E-mail address:
> ---
> > E-mail address: lwiseman@mail.utexas.edu
> 26c26
> < Name:
> ---
> > Name: Sariph Shrestha
> 29c29
> < E-mail address:
> ---
> > E-mail address: sariph.shrestha@gmail.com
> 
> ***************************
> * Changes in revision 7 
> ***************************
> 
> ------------------------------------------------------------------------
> r7 | levi | 2009-03-23 19:13:37 -0500 (Mon, 23 Mar 2009) | 1 line
> 
> Copied first form so we have 3 now, needed to add first
> ------------------------------------------------------------------------
> 
> Index: index.html
> ===================================================================
> 1,29d0
> < <!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
> < <html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
> < 	<head>
> < 		<title>C S 373: 54270: TA Matching</title>
> < 
> < 		<link rel="stylesheet" type="text/css" href="/style/reset.css" />
> < 		<link rel="stylesheet" type="text/css" href="/style/main.css" />
> < 
> < 		<script type="text/javascript" src="/js/load.js"></script>
> < 		<script type="text/javascript" src="/js/setHighlight.js"></script>
> < 		<script type="text/javascript" src="/js/formInputHighlight.js"></script>
> < 		<script type="text/javascript" src="/js/formTextareaHighlight.js"></script>
> < 	</head>
> < 
> < 	<body>
> < 		<form action="/submitted" method="post">
> < 			<dl>
> < 				<dt><label for="name_test">Name</label></dt><dd><input type="text" name="name_test" id="name_test" {% if results %}{% for result in results %}{% ifequal result.key 'name_test' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Type in your name, at least one char</span></dd>
> < 				<dt><label for="password_test">Password</label></dt><dd><input type="password" name="password_test" id="password_test" {% if results %}{% for result in results %}{% ifequal result.key 'password_test' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Type in your password, at least six chars</span></dd>
> < 				<dt><label for="address_test">Address</label></dt><dd><input type="text" name="address_test" id="address_test" {% if results %}{% for result in results %}{% ifequal result.key 'address_test' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Type in your address</span></dd>
> < 				<dt><label for="phone_test">Phone</label></dt><dd><input type="text" name="phone_test" id="phone_test" {% if results %}{% for result in results %}{% ifequal result.key 'phone_test' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Type in your phone number</span></dd>
> < 				<dt><label for="email_test">Email</label></dt><dd><input type="text" name="email_test" id="email_test" {% if results %}{% for result in results %}{% ifequal result.key 'email_test' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Type in your email address</span></dd>
> < 				<dt><label for="comment_test">Comment</label></dt><dd><textarea name="comment_test" id="comment_test">{% if results %}{% for result in results %}{% ifequal result.key 'comment_test' %}{% if result.valid %}{{ result.value }}</textarea><span{% else %}</textarea><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}</textarea><span{% endif %}>Type in your comment</span></dd>
> < 			</dl>
> < 			<div><input type="submit" value="Submit" /></div>
> < 		</form>
> < 	</body>
> < </html>
> < 
> Index: instructor.html
> ===================================================================
> 0a1,29
> > <!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
> > <html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
> > 	<head>
> > 		<title>C S 373: 54270: TA Matching: Instructor</title>
> > 
> > 		<link rel="stylesheet" type="text/css" href="/style/reset.css" />
> > 		<link rel="stylesheet" type="text/css" href="/style/main.css" />
> > 
> > 		<script type="text/javascript" src="/js/load.js"></script>
> > 		<script type="text/javascript" src="/js/setHighlight.js"></script>
> > 		<script type="text/javascript" src="/js/formInputHighlight.js"></script>
> > 		<script type="text/javascript" src="/js/formTextareaHighlight.js"></script>
> > 	</head>
> > 
> > 	<body>
> > 		<form action="/submitted" method="post">
> > 			<dl>
> > 				<dt><label for="name_test">Name</label></dt><dd><input type="text" name="name_test" id="name_test" {% if results %}{% for result in results %}{% ifequal result.key 'name_test' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Type in your name, at least one char</span></dd>
> > 				<dt><label for="password_test">Password</label></dt><dd><input type="password" name="password_test" id="password_test" {% if results %}{% for result in results %}{% ifequal result.key 'password_test' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Type in your password, at least six chars</span></dd>
> > 				<dt><label for="address_test">Address</label></dt><dd><input type="text" name="address_test" id="address_test" {% if results %}{% for result in results %}{% ifequal result.key 'address_test' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Type in your address</span></dd>
> > 				<dt><label for="phone_test">Phone</label></dt><dd><input type="text" name="phone_test" id="phone_test" {% if results %}{% for result in results %}{% ifequal result.key 'phone_test' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Type in your phone number</span></dd>
> > 				<dt><label for="email_test">Email</label></dt><dd><input type="text" name="email_test" id="email_test" {% if results %}{% for result in results %}{% ifequal result.key 'email_test' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Type in your email address</span></dd>
> > 				<dt><label for="comment_test">Comment</label></dt><dd><textarea name="comment_test" id="comment_test">{% if results %}{% for result in results %}{% ifequal result.key 'comment_test' %}{% if result.valid %}{{ result.value }}</textarea><span{% else %}</textarea><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}</textarea><span{% endif %}>Type in your comment</span></dd>
> > 			</dl>
> > 			<div><input type="submit" value="Submit" /></div>
> > 		</form>
> > 	</body>
> > </html>
> > 
> Index: admin.html
> ===================================================================
> 0a1,29
> > <!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
> > <html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
> > 	<head>
> > 		<title>C S 373: 54270: TA Matching: Admin</title>
> > 
> > 		<link rel="stylesheet" type="text/css" href="/style/reset.css" />
> > 		<link rel="stylesheet" type="text/css" href="/style/main.css" />
> > 
> > 		<script type="text/javascript" src="/js/load.js"></script>
> > 		<script type="text/javascript" src="/js/setHighlight.js"></script>
> > 		<script type="text/javascript" src="/js/formInputHighlight.js"></script>
> > 		<script type="text/javascript" src="/js/formTextareaHighlight.js"></script>
> > 	</head>
> > 
> > 	<body>
> > 		<form action="/submitted" method="post">
> > 			<dl>
> > 				<dt><label for="name_test">Name</label></dt><dd><input type="text" name="name_test" id="name_test" {% if results %}{% for result in results %}{% ifequal result.key 'name_test' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Type in your name, at least one char</span></dd>
> > 				<dt><label for="password_test">Password</label></dt><dd><input type="password" name="password_test" id="password_test" {% if results %}{% for result in results %}{% ifequal result.key 'password_test' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Type in your password, at least six chars</span></dd>
> > 				<dt><label for="address_test">Address</label></dt><dd><input type="text" name="address_test" id="address_test" {% if results %}{% for result in results %}{% ifequal result.key 'address_test' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Type in your address</span></dd>
> > 				<dt><label for="phone_test">Phone</label></dt><dd><input type="text" name="phone_test" id="phone_test" {% if results %}{% for result in results %}{% ifequal result.key 'phone_test' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Type in your phone number</span></dd>
> > 				<dt><label for="email_test">Email</label></dt><dd><input type="text" name="email_test" id="email_test" {% if results %}{% for result in results %}{% ifequal result.key 'email_test' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Type in your email address</span></dd>
> > 				<dt><label for="comment_test">Comment</label></dt><dd><textarea name="comment_test" id="comment_test">{% if results %}{% for result in results %}{% ifequal result.key 'comment_test' %}{% if result.valid %}{{ result.value }}</textarea><span{% else %}</textarea><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}</textarea><span{% endif %}>Type in your comment</span></dd>
> > 			</dl>
> > 			<div><input type="submit" value="Submit" /></div>
> > 		</form>
> > 	</body>
> > </html>
> > 
> Index: applicant.html
> ===================================================================
> 0a1,29
> > <!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
> > <html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
> > 	<head>
> > 		<title>C S 373: 54270: TA Matching: Applicant</title>
> > 
> > 		<link rel="stylesheet" type="text/css" href="/style/reset.css" />
> > 		<link rel="stylesheet" type="text/css" href="/style/main.css" />
> > 
> > 		<script type="text/javascript" src="/js/load.js"></script>
> > 		<script type="text/javascript" src="/js/setHighlight.js"></script>
> > 		<script type="text/javascript" src="/js/formInputHighlight.js"></script>
> > 		<script type="text/javascript" src="/js/formTextareaHighlight.js"></script>
> > 	</head>
> > 
> > 	<body>
> > 		<form action="/submitted" method="post">
> > 			<dl>
> > 				<dt><label for="name_test">Name</label></dt><dd><input type="text" name="name_test" id="name_test" {% if results %}{% for result in results %}{% ifequal result.key 'name_test' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Type in your name, at least one char</span></dd>
> > 				<dt><label for="password_test">Password</label></dt><dd><input type="password" name="password_test" id="password_test" {% if results %}{% for result in results %}{% ifequal result.key 'password_test' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Type in your password, at least six chars</span></dd>
> > 				<dt><label for="address_test">Address</label></dt><dd><input type="text" name="address_test" id="address_test" {% if results %}{% for result in results %}{% ifequal result.key 'address_test' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Type in your address</span></dd>
> > 				<dt><label for="phone_test">Phone</label></dt><dd><input type="text" name="phone_test" id="phone_test" {% if results %}{% for result in results %}{% ifequal result.key 'phone_test' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Type in your phone number</span></dd>
> > 				<dt><label for="email_test">Email</label></dt><dd><input type="text" name="email_test" id="email_test" {% if results %}{% for result in results %}{% ifequal result.key 'email_test' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Type in your email address</span></dd>
> > 				<dt><label for="comment_test">Comment</label></dt><dd><textarea name="comment_test" id="comment_test">{% if results %}{% for result in results %}{% ifequal result.key 'comment_test' %}{% if result.valid %}{{ result.value }}</textarea><span{% else %}</textarea><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}</textarea><span{% endif %}>Type in your comment</span></dd>
> > 			</dl>
> > 			<div><input type="submit" value="Submit" /></div>
> > 		</form>
> > 	</body>
> > </html>
> > 
> 
> ***************************
> * Changes in revision 8 
> ***************************
> 
> ------------------------------------------------------------------------
> r8 | levi | 2009-03-23 19:21:21 -0500 (Mon, 23 Mar 2009) | 1 line
> 
> Added index.html to link to forms
> ------------------------------------------------------------------------
> 
> Index: index.html
> ===================================================================
> 0a1,13
> > <!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
> > <html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
> > 	<head>
> > 		<title>C S 373: 54270: TA Matching</title>
> > 	</head>
> > 
> > 	<body>
> > 		<div><a href="applicant">Applicants</a></div>
> > 		<div><a href="instructor">Instructors</a></div>
> > 		<div><a href="admin">Admins</a></div>
> > 	</body>
> > </html>
> > 
> 
> ***************************
> * Changes in revision 9 
> ***************************
> 
> ------------------------------------------------------------------------
> r9 | levi | 2009-03-23 19:30:27 -0500 (Mon, 23 Mar 2009) | 1 line
> 
> Added index.html to link to forms - fixed
> ------------------------------------------------------------------------
> 
> Index: index.html
> ===================================================================
> 1,13d0
> < <!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
> < <html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
> < 	<head>
> < 		<title>C S 373: 54270: TA Matching</title>
> < 	</head>
> < 
> < 	<body>
> < 		<div><a href="applicant">Applicants</a></div>
> < 		<div><a href="instructor">Instructors</a></div>
> < 		<div><a href="admin">Admins</a></div>
> < 	</body>
> < </html>
> < 
> Index: app.yaml
> ===================================================================
> 12a13,15
> > - url: /
> >   static_dir: static_html
> > 
> Index: static_html/index.html
> ===================================================================
> 0a1,13
> > <!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
> > <html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
> > 	<head>
> > 		<title>C S 373: 54270: TA Matching</title>
> > 	</head>
> > 
> > 	<body>
> > 		<div><a href="applicant">Applicants</a></div>
> > 		<div><a href="instructor">Instructors</a></div>
> > 		<div><a href="admin">Admins</a></div>
> > 	</body>
> > </html>
> > 
> 
> ***************************
> * Changes in revision 10 
> ***************************
> 
> ------------------------------------------------------------------------
> r10 | levi | 2009-03-23 19:57:33 -0500 (Mon, 23 Mar 2009) | 1 line
> 
> Added support for future dynamic version of index.html
> ------------------------------------------------------------------------
> 
> Index: app.yaml
> ===================================================================
> 13,15d12
> < - url: /
> <   static_dir: static_html
> < 
> Index: index.html
> ===================================================================
> 0a1,13
> > <!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
> > <html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
> > 	<head>
> > 		<title>C S 373: 54270: TA Matching</title>
> > 	</head>
> > 
> > 	<body>
> > 		<div><a href="applicant">Applicants</a></div>
> > 		<div><a href="instructor">Instructors</a></div>
> > 		<div><a href="admin">Admins</a></div>
> > 	</body>
> > </html>
> > 
> Index: applicant.html
> ===================================================================
> 18,19c18,20
> < 				<dt><label for="name_test">Name</label></dt><dd><input type="text" name="name_test" id="name_test" {% if results %}{% for result in results %}{% ifequal result.key 'name_test' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Type in your name, at least one char</span></dd>
> < 				<dt><label for="password_test">Password</label></dt><dd><input type="password" name="password_test" id="password_test" {% if results %}{% for result in results %}{% ifequal result.key 'password_test' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Type in your password, at least six chars</span></dd>
> ---
> > 				<dt><label for="phone_applicant">Phone</label></dt><dd><input type="text" name="phone_applicant" id="phone_applicant" {% if results %}{% for result in results %}{% ifequal result.key 'phone_applicant' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Type in your phone number</span></dd>
> > 				<dt><label for="email_test">Email</label></dt><dd><input type="text" name="email_test" id="email_test" {% if results %}{% for result in results %}{% ifequal result.key 'email_test' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Type in your email address</span></dd>
> > 				<dt><label for="date_test">Phone</label></dt><dd><input type="text" name="phone_test" id="phone_test" {% if results %}{% for result in results %}{% ifequal result.key 'phone_test' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Type in your phone number</span></dd>
> 21d21
> < 				<dt><label for="phone_test">Phone</label></dt><dd><input type="text" name="phone_test" id="phone_test" {% if results %}{% for result in results %}{% ifequal result.key 'phone_test' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Type in your phone number</span></dd>
> Index: index.py
> ===================================================================
> 6a7,12
> > class Index(webapp.RequestHandler):
> > 	def get(self):
> > 		template_values = {}
> > 		path = os.path.join(os.path.dirname(__file__), 'index.html')
> > 		self.response.out.write(template.render(path, template_values))
> > 
> 69,70d74
> < #		self.response.headers['Content-Type'] = 'text/html'
> < #		self.response.out.write('True' if validator.valid else 'False')
> 80c84,85
> <                                       ('/admin', Admin)],
> ---
> >                                       ('/admin', Admin),
> >                                       ('/.*', Index)],
> 
> ***************************
> * Changes in revision 11 
> ***************************
> 
> ------------------------------------------------------------------------
> r11 | levi | 2009-03-23 22:40:26 -0500 (Mon, 23 Mar 2009) | 1 line
> 
> Made applicant form
> ------------------------------------------------------------------------
> 
> Index: applicant.html
> ===================================================================
> 16c16
> < 		<form action="/submitted" method="post">
> ---
> > 		<form action="/applicant" method="post">
> 18,23c18,29
> < 				<dt><label for="phone_applicant">Phone</label></dt><dd><input type="text" name="phone_applicant" id="phone_applicant" {% if results %}{% for result in results %}{% ifequal result.key 'phone_applicant' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Type in your phone number</span></dd>
> < 				<dt><label for="email_test">Email</label></dt><dd><input type="text" name="email_test" id="email_test" {% if results %}{% for result in results %}{% ifequal result.key 'email_test' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Type in your email address</span></dd>
> < 				<dt><label for="date_test">Phone</label></dt><dd><input type="text" name="phone_test" id="phone_test" {% if results %}{% for result in results %}{% ifequal result.key 'phone_test' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Type in your phone number</span></dd>
> < 				<dt><label for="address_test">Address</label></dt><dd><input type="text" name="address_test" id="address_test" {% if results %}{% for result in results %}{% ifequal result.key 'address_test' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Type in your address</span></dd>
> < 				<dt><label for="email_test">Email</label></dt><dd><input type="text" name="email_test" id="email_test" {% if results %}{% for result in results %}{% ifequal result.key 'email_test' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Type in your email address</span></dd>
> < 				<dt><label for="comment_test">Comment</label></dt><dd><textarea name="comment_test" id="comment_test">{% if results %}{% for result in results %}{% ifequal result.key 'comment_test' %}{% if result.valid %}{{ result.value }}</textarea><span{% else %}</textarea><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}</textarea><span{% endif %}>Type in your comment</span></dd>
> ---
> > 				<dt><label for="phone_applicant">Phone</label></dt><dd><input type="text" name="phone_applicant" id="phone_applicant" {% if results %}{% for result in results %}{% ifequal result.key 'phone_applicant' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>What is your phone number?</span></dd>
> > 				<dt><label for="email_applicant">Email</label></dt><dd><input type="text" name="email_applicant" id="email_applicant" {% if results %}{% for result in results %}{% ifequal result.key 'email_applicant' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>What is your email address?</span></dd>
> > 				<dt><label for="comment_major">Major field</label></dt><dd><input type="text" name="comment_major" id="comment_major" {% if results %}{% for result in results %}{% ifequal result.key 'comment_major' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>What is your major field?</span></dd>
> > 				<dt><label for="comment_admission">Admission date</label></dt><dd><input type="text" name="comment_admission" id="comment_admission" {% if results %}{% for result in results %}{% ifequal result.key 'comment_admission' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>What is your admission date?</span></dd>
> > 				<dt><label for="comment_phd">PhD or Masters</label></dt><dd><input type="text" name="comment_phd" id="comment_phd" {% if results %}{% for result in results %}{% ifequal result.key 'comment_phd' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Do you have a PhD or Masters? Type in "PhD" or "Masters".</span></dd>
> > 				<dt><label for="comment_supervising">Supervising professor</label></dt><dd><input type="text" name="comment_supervising" id="comment_supervising" {% if results %}{% for result in results %}{% ifequal result.key 'comment_supervising' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Who is your supervising professor?</span></dd>
> > 				<dt><label for="comment_citizen">Citizen or resident</label></dt><dd><input type="text" name="comment_citizen" id="comment_citizen" {% if results %}{% for result in results %}{% ifequal result.key 'comment_citizen' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Are you a citizen or resident? Type in "citizen" or "resident".</span></dd>
> > 				<dt><label for="comment_native">Native English speaker</label></dt><dd><input type="text" name="comment_native" id="comment_native" {% if results %}{% for result in results %}{% ifequal result.key 'comment_native' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Are you a native English speaker? Type in "yes" or "no".</span></dd>
> > 				<dt><label for="comment_ta">TA history</label></dt><dd><input type="text" name="comment_ta" id="comment_ta" {% if results %}{% for result in results %}{% ifequal result.key 'comment_ta' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Do you have a history being a TA? Type in "yes" or "no".</span></dd>
> > 				<dt><label for="comment_programming">Programming languages</label></dt><dd><input type="text" name="comment_programming" id="comment_programming" {% if results %}{% for result in results %}{% ifequal result.key 'comment_programming' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>What programming languages do you know?</span></dd>
> > 				<dt><label for="comment_area">Area of specialization</label></dt><dd><input type="text" name="comment_area" id="comment_area" {% if results %}{% for result in results %}{% ifequal result.key 'comment_area' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>What is your area of specialization?</span></dd>
> > 				<dt><label for="comment_qualified">Course qualified to teach</label></dt><dd><input type="text" name="comment_qualified" id="comment_qualified" {% if results %}{% for result in results %}{% ifequal result.key 'comment_qualified' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>What course(s) are you qualified to teach?</span></dd>
> 
> ***************************
> * Changes in revision 12 
> ***************************
> 
> ------------------------------------------------------------------------
> r12 | levi | 2009-03-23 22:55:05 -0500 (Mon, 23 Mar 2009) | 1 line
> 
> Added instructor form
> ------------------------------------------------------------------------
> 
> Index: instructor.html
> ===================================================================
> 16c16
> < 		<form action="/submitted" method="post">
> ---
> > 		<form action="instructor" method="post">
> 18,23c18,21
> < 				<dt><label for="name_test">Name</label></dt><dd><input type="text" name="name_test" id="name_test" {% if results %}{% for result in results %}{% ifequal result.key 'name_test' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Type in your name, at least one char</span></dd>
> < 				<dt><label for="password_test">Password</label></dt><dd><input type="password" name="password_test" id="password_test" {% if results %}{% for result in results %}{% ifequal result.key 'password_test' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Type in your password, at least six chars</span></dd>
> < 				<dt><label for="address_test">Address</label></dt><dd><input type="text" name="address_test" id="address_test" {% if results %}{% for result in results %}{% ifequal result.key 'address_test' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Type in your address</span></dd>
> < 				<dt><label for="phone_test">Phone</label></dt><dd><input type="text" name="phone_test" id="phone_test" {% if results %}{% for result in results %}{% ifequal result.key 'phone_test' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Type in your phone number</span></dd>
> < 				<dt><label for="email_test">Email</label></dt><dd><input type="text" name="email_test" id="email_test" {% if results %}{% for result in results %}{% ifequal result.key 'email_test' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Type in your email address</span></dd>
> < 				<dt><label for="comment_test">Comment</label></dt><dd><textarea name="comment_test" id="comment_test">{% if results %}{% for result in results %}{% ifequal result.key 'comment_test' %}{% if result.valid %}{{ result.value }}</textarea><span{% else %}</textarea><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}</textarea><span{% endif %}>Type in your comment</span></dd>
> ---
> > 				<dt><label for="comment_wanted">Specific wanted students</label></dt><dd><input type="text" name="comment_wanted" id="comment_wanted" {% if results %}{% for result in results %}{% ifequal result.key 'comment_wanted' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Are there any students you specifically want?</span></dd>
> > 				<dt><label for="comment_unwanted">Specific unwanted students</label></dt><dd><input type="text" name="comment_unwanted" id="comment_unwanted" {% if results %}{% for result in results %}{% ifequal result.key 'comment_unwanted' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Are there any students you specifically don't want?</span></dd>
> > 				<dt><label for="comment_native">Native English speaker</label></dt><dd><input type="text" name="comment_native" id="comment_native" {% if results %}{% for result in results %}{% ifequal result.key 'comment_native' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Are you a native English speaker? Type in "yes" or "no".</span></dd>
> > 				<dt><label for="comment_specialization">Background in a particular area of specialization</label></dt><dd><input type="text" name="comment_specialization" id="comment_specialization" {% if results %}{% for result in results %}{% ifequal result.key 'comment_specialization' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Background in a particular area of specialization?</span></dd>
> Index: applicant.html
> ===================================================================
> 16c16
> < 		<form action="/applicant" method="post">
> ---
> > 		<form action="applicant" method="post">
> 
> ***************************
> * Changes in revision 13 
> ***************************
> 
> ------------------------------------------------------------------------
> r13 | levi | 2009-03-23 23:05:50 -0500 (Mon, 23 Mar 2009) | 1 line
> 
> Added admin form
> ------------------------------------------------------------------------
> 
> Index: admin.html
> ===================================================================
> 16c16
> < 		<form action="/submitted" method="post">
> ---
> > 		<form action="admin" method="post">
> 18,23c18,22
> < 				<dt><label for="name_test">Name</label></dt><dd><input type="text" name="name_test" id="name_test" {% if results %}{% for result in results %}{% ifequal result.key 'name_test' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Type in your name, at least one char</span></dd>
> < 				<dt><label for="password_test">Password</label></dt><dd><input type="password" name="password_test" id="password_test" {% if results %}{% for result in results %}{% ifequal result.key 'password_test' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Type in your password, at least six chars</span></dd>
> < 				<dt><label for="address_test">Address</label></dt><dd><input type="text" name="address_test" id="address_test" {% if results %}{% for result in results %}{% ifequal result.key 'address_test' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Type in your address</span></dd>
> < 				<dt><label for="phone_test">Phone</label></dt><dd><input type="text" name="phone_test" id="phone_test" {% if results %}{% for result in results %}{% ifequal result.key 'phone_test' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Type in your phone number</span></dd>
> < 				<dt><label for="email_test">Email</label></dt><dd><input type="text" name="email_test" id="email_test" {% if results %}{% for result in results %}{% ifequal result.key 'email_test' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Type in your email address</span></dd>
> < 				<dt><label for="comment_test">Comment</label></dt><dd><textarea name="comment_test" id="comment_test">{% if results %}{% for result in results %}{% ifequal result.key 'comment_test' %}{% if result.valid %}{{ result.value }}</textarea><span{% else %}</textarea><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}</textarea><span{% endif %}>Type in your comment</span></dd>
> ---
> > 				<dt><label for="comment_class_name">Class number/name</label></dt><dd><input type="text" name="comment_class_name" id="comment_class_name" {% if results %}{% for result in results %}{% ifequal result.key 'comment_class_name' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>What is the class's number/name?</span></dd>
> > 				<dt><label for="comment_inst_name">Instructor's name</label></dt><dd><input type="text" name="comment_inst_name" id="comment_inst_name" {% if results %}{% for result in results %}{% ifequal result.key 'comment_inst_name' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>What instructor will teach the class?</span></dd>
> > 				<dt><label for="comment_exp_enrollment">Expected enrollment</label></dt><dd><input type="text" name="comment_exp_enrollment" id="comment_exp_enrollment" {% if results %}{% for result in results %}{% ifequal result.key 'comment_exp_enrollment' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>How many students are expected to enroll?</span></dd>
> > 				<dt><label for="comment_num_ta_needed">Number of TAs needed</label></dt><dd><input type="text" name="comment_num_ta_needed" id="comment_num_ta_needed" {% if results %}{% for result in results %}{% ifequal result.key 'comment_num_ta_needed' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>How many TAs will be needed?</span></dd>
> > 				<dt><label for="comment_num_ta_assigned">Number of TAs assigned</label></dt><dd><input type="text" name="comment_num_ta_assigned" id="comment_num_ta_assigned" {% if results %}{% for result in results %}{% ifequal result.key 'comment_num_ta_assigned' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>How many TAs are assigned?</span></dd>
> 
> ***************************
> * Changes in revision 14 
> ***************************
> 
> ------------------------------------------------------------------------
> r14 | levi | 2009-03-24 00:21:47 -0500 (Tue, 24 Mar 2009) | 1 line
> 
> Cleaned up index.py
> ------------------------------------------------------------------------
> 
> Index: index.py
> ===================================================================
> 9d8
> < 		template_values = {}
> 11c10
> < 		self.response.out.write(template.render(path, template_values))
> ---
> > 		self.response.out.write(template.render(path, {}))
> 
> ***************************
> * Changes in revision 15 
> ***************************
> 
> ------------------------------------------------------------------------
> r15 | estesox | 2009-03-24 16:31:06 -0500 (Tue, 24 Mar 2009) | 2 lines
> 
> Jeffery Zhu and Ji-Hoon Woo's Validations and Unit Tests
> 
> ------------------------------------------------------------------------
> 
> Index: TestValidation.py
> ===================================================================
> 0a1,148
> > #!/usr/bin/env python
> > 
> > # ------------
> > # TestValidation.py
> > # ------------
> > 
> > import unittest
> > import Validation
> > 
> > # ---------
> > # TestAdmin
> > # ---------
> > 
> > class TestAdmin (unittest.TestCase) :
> >     # ------------
> >     # phone_number
> >     # ------------
> >     def testPhoneNumber1 (self) :
> >         self.assert_(not Validation.phone_number('abc'))
> >     def testPhoneNumber2 (self) :
> >         self.assert_(Validation.phone_number('123-4567'))
> >     def testPhoneNumber3 (self) :
> >         self.assert_(not Validation.phone_number('11-123-4567'))
> >     def testPhoneNumber4 (self) :
> >         self.assert_(Validation.phone_number('123-123-4567'))
> >     def testPhoneNumber5 (self) :
> >         self.assert_(not Validation.phone_number('123-45-67'))
> >     def testPhoneNumber6 (self) :
> >         self.assert_(not Validation.phone_number('123-4567-1'))
> >     # ------------
> >     # phone_number_ext
> >     # ------------
> >     def testphone_number_ext1 (self) :
> >         self.assert_(not Validation.phone_number_ext('abc'))
> >     def testphone_number_ext2 (self) :
> >         self.assert_(Validation.phone_number_ext(''))
> >     def testphone_number_ext3 (self) :
> >         self.assert_(Validation.phone_number_ext('11'))
> >     def testphone_number_ext4 (self) :
> >         self.assert_(Validation.phone_number_ext('11111'))
> >     # ------------
> >     # email
> >     # ------------
> >     def testemail1 (self) :
> >         self.assert_(not Validation.email('abc'))
> >     def testemail2 (self) :
> >         self.assert_(not Validation.email('abc@11..com'))
> >     def testemail3 (self) :
> >         self.assert_(not Validation.email('abc..aa@asdf.com'))
> >     def testemail4 (self) :
> >         self.assert_(Validation.email('abc_asdf@adsfasd.org'))
> >     def testemail5 (self) :
> >         self.assert_(Validation.email('asdfasdf@cs.asdf.edu'))
> >     def testemail6 (self) :
> >         self.assert_(Validation.email('abc@asdf.asdf.asdf.asdf.asdf.com'))
> >     def testemail7 (self) :
> >         self.assert_(not Validation.email('.asdf@sdfsdaf.com'))
> >     def testemail8 (self) :
> >         self.assert_(not Validation.email('abc.@asdfasd.com'))
> >     def testemail9 (self) :
> >         self.assert_(Validation.email('-abc@asdfasd.com'))
> >     def testemail10 (self) :
> >         self.assert_(Validation.email('abc.aaa@asdfasd.com'))
> >     def testemail11 (self) :
> >         self.assert_(not Validation.email('ab c@asdfasd.com'))
> >     def testemail12 (self) :
> >         self.assert_(not Validation.email('ab#$c@asdfasd.com'))
> >     def testemail13 (self) :
> >         self.assert_(not Validation.email('ab@c@asdfasd.com'))
> >     # ------------
> >     # date
> >     # ------------
> >     def testdate1 (self) :
> >         self.assert_(not Validation.date('00-12-1999'))
> >     def testdate2 (self) :
> >         self.assert_(not Validation.date('02-30-1999'))
> >     def testdate3 (self) :
> >         self.assert_(not Validation.date('13-12-1999'))
> >     def testdate4 (self) :
> >         self.assert_(not Validation.date('01-00-1999'))
> >     def testdate5 (self) :
> >         self.assert_(Validation.date('02-28-1999'))
> >     def testdate6 (self) :
> >         self.assert_(not Validation.date('00-42-1999'))
> >     def testdate7 (self) :
> >         self.assert_(not Validation.date('00-12-99'))
> >     def testdate8 (self) :
> >         self.assert_(not Validation.date('00-00-12-1999'))
> >     def testdate9 (self) :
> >         self.assert_(not Validation.date('01-1-1999'))
> >     def testdate10 (self) :
> >         self.assert_(not Validation.date('5-12-1999'))
> >     def testdate11 (self) :
> >         self.assert_(not Validation.date('04-31-1999'))
> >     def testdate12 (self) :
> >         self.assert_(Validation.date('04-30-1999'))
> >     # ------------
> >     # name
> >     # ------------
> >     def testname1 (self) :
> >         self.assert_(not Validation.name('aaa'))
> >     def testname2 (self) :
> >         self.assert_(Validation.name('Aaa'))
> >     def testname3 (self) :
> >         self.assert_(Validation.name('Aaa-dd'))
> >     def testname4 (self) :
> >         self.assert_(not Validation.name('8aaa'))
> >     def testname5 (self) :
> >         self.assert_(not Validation.name(''))
> >     def testname6 (self) :
> >         self.assert_(not Validation.name('Baa--'))
> >     def testname7 (self) :
> >         self.assert_(not Validation.name('Aa$'))
> >     def testname8 (self) :
> >         self.assert_(not Validation.name('Ba a'))
> >     # ------------
> >     # class_number
> >     # ------------
> >     def testclass_number1 (self) :
> >         self.assert_(not Validation.class_number('aaa'))
> >     def testclass_number2 (self) :
> >         self.assert_(not Validation.class_number('cs'))
> >     def testclass_number3 (self) :
> >         self.assert_(not Validation.class_number('cs1'))
> >     def testclass_number4 (self) :
> >         self.assert_(Validation.class_number('cs987'))
> >     def testclass_number5 (self) :
> >         self.assert_(Validation.class_number('CS987'))
> >     def testclass_number6 (self) :
> >         self.assert_(not Validation.class_number('cs*76'))
> >     def testclass_number7 (self) :
> >         self.assert_(not Validation.class_number('Cs333'))
> >     def testclass_number8 (self) :
> >         self.assert_(not Validation.class_number('cS123'))
> >     def testclass_number9 (self) :
> >         self.assert_(not Validation.class_number('ee315'))
> >     # ------------
> >     # number
> >     # ------------
> >     def testnumber1 (self) :
> >         self.assert_(not Validation.number('aaa'))
> >     def testnumber2 (self) :
> >         self.assert_(not Validation.number(''))
> >     def testnumber3 (self) :
> >         self.assert_(Validation.number('12312323'))
> > 
> > if __name__ == "__main__" :
> >     unittest.main()
> Index: Validation.py
> ===================================================================
> 0a1,50
> > #!/usr/bin/env python
> > 
> > # -------------
> > # Validation.py
> > # -------------
> > 
> > import re
> > 
> > # ------------
> > # phone_number
> > # ------------
> > def phone_number (s) :
> >         return not re.search('^(\d\d\d-)?\d\d\d-\d\d\d\d$', s) is None
> > # ----------------
> > # phone_number_ext
> > # ----------------
> > def phone_number_ext (s) :
> >         return not re.search('^(\d)*$',s) is None
> > # ------------
> > # email
> > # ------------
> > def email (s) :
> >         return not re.search('(^(\w|\-|\_)+((\.)?(\w|\-|\_)+)*)\@(\w)+(\-|\w)*(\w)+((\.)?(\w)+(\-|\w)*(\w)+)*\.(com|net|org|gov|edu)$', s) is None
> > # ------------
> > # date
> > # ------------
> > def date (s) :
> >         result = False
> >         #Feb
> >         if(not re.search('^(02)\-((0[1-9])|((1|2)(\d)))\-[0-9][0-9][0-9][0-9]$',s) is None): return True
> >         #Jan, Mar, May...
> >         if(not re.search('^(01|03|05|07|08|10|12)\-(30|31|(((0[1-9])|((1|2)(\d)))))\-[0-9][0-9][0-9][0-9]$',s) is None): return True
> >         #Apr, Jun, Sep, Nov
> >         if(not re.search('^(04|06|09|11)\-(30|(((0[1-9])|((1|2)(\d)))))\-[0-9][0-9][0-9][0-9]$',s) is None): return True
> >         return False
> > # ------------
> > # name
> > # ------------
> > def name (s) :
> >         return not re.search('^[A-Z][a-zA-Z\'\-]*[a-zA-Z]$',s) is None
> > # ------------
> > # class_number
> > # ------------
> > def class_number (s) :
> >         return not re.search('(^cs\d\d\d)|(^CS\d\d\d)',s) is None
> > # ------------
> > # number
> > # ------------
> > def number (s) :
> >         return not re.search('^(\d)+$',s) is None
> 
> ***************************
> * Changes in revision 16 
> ***************************
> 
> ------------------------------------------------------------------------
> r16 | ting | 2009-03-25 14:13:28 -0500 (Wed, 25 Mar 2009) | 1 line
> 
> modify TA1.txt to include section for own contributions.
> ------------------------------------------------------------------------
> 
> Index: TA1.txt
> ===================================================================
> 42a43,48
> > ------------------------------
> > My Contribution to the Project
> > ------------------------------
> > 
> > 
> > 
> 46a53,61
> > Name: HanPing Ting
> > 
> > Name: Ji-Hoon Woo
> > 
> > Name: Levi Wiseman
> > 
> > Name: Sariph Shrestha
> > 
> > Name: Jeffery Zhu
> 
> ***************************
> * Changes in revision 17 
> ***************************
> 
> ------------------------------------------------------------------------
> r17 | jeffery | 2009-03-25 14:16:54 -0500 (Wed, 25 Mar 2009) | 5 lines
> 
> Made applicant.html more readable.
> Started using Validation.py's functions in validator.py
> 
> Jeffery Zhu
> 
> ------------------------------------------------------------------------
> 
> Index: validator.py
> ===================================================================
> 1a2
> > import Validation
> 17c18
> < 				'name'     : lambda: True if re.match('.+', value) else False,
> ---
> > 				'name'     : Validation.name(value),
> 20c21
> < 				'phone'    : lambda: True if re.match('.+', value) else False,
> ---
> > 				'phone'    : Validation.phone_number(value),
> 22c23
> < 				'email'    : lambda: True if re.match('[a-zA-Z0-9!#$%&\'*+/=?^_`{|}~-]+(?:\.[a-zA-Z0-9!#$%&\'*+/=?^_`{|}~-]+)*@(?:[a-zA-Z0-9](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?\.)+[a-zA-Z0-9](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?', value) else False,
> ---
> > 				'email'    : Validation.email(value),
> 27a29,44
> > #		for key, value in form_data:
> > #			result = {}
> > #			result['key'] = key
> > #			result['value'] = value
> > #			ghetto_switch = {
> > #				'name'     : lambda: True if re.match('.+', value) else False,
> > #				'password' : lambda: True if re.match('.{6,30}', value) else False,
> > #				'address'  : lambda: True if re.match('.+', value) else False,
> > #				'phone'    : lambda: True if re.match('.+', value) else False,
> > #				# lol, this is ALMOST to RFC 2822, doesn't handle double quoted sections before '@' or square bracket Internet address after, perfect bug op
> > #				'email'    : lambda: True if re.match('[a-zA-Z0-9!#$%&\'*+/=?^_`{|}~-]+(?:\.[a-zA-Z0-9!#$%&\'*+/=?^_`{|}~-]+)*@(?:[a-zA-Z0-9](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?\.)+[a-zA-Z0-9](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?', value) else False,
> > #				'comment'  : lambda: True if re.match('.+', value) else False,
> > #			}[key.split('_')[0]]()
> > #			result['valid'] = True if ghetto_switch else False
> > #			self.results.append(result)
> > 
> Index: applicant.html
> ===================================================================
> 18,29c18,77
> < 				<dt><label for="phone_applicant">Phone</label></dt><dd><input type="text" name="phone_applicant" id="phone_applicant" {% if results %}{% for result in results %}{% ifequal result.key 'phone_applicant' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>What is your phone number?</span></dd>
> < 				<dt><label for="email_applicant">Email</label></dt><dd><input type="text" name="email_applicant" id="email_applicant" {% if results %}{% for result in results %}{% ifequal result.key 'email_applicant' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>What is your email address?</span></dd>
> < 				<dt><label for="comment_major">Major field</label></dt><dd><input type="text" name="comment_major" id="comment_major" {% if results %}{% for result in results %}{% ifequal result.key 'comment_major' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>What is your major field?</span></dd>
> < 				<dt><label for="comment_admission">Admission date</label></dt><dd><input type="text" name="comment_admission" id="comment_admission" {% if results %}{% for result in results %}{% ifequal result.key 'comment_admission' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>What is your admission date?</span></dd>
> < 				<dt><label for="comment_phd">PhD or Masters</label></dt><dd><input type="text" name="comment_phd" id="comment_phd" {% if results %}{% for result in results %}{% ifequal result.key 'comment_phd' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Do you have a PhD or Masters? Type in "PhD" or "Masters".</span></dd>
> < 				<dt><label for="comment_supervising">Supervising professor</label></dt><dd><input type="text" name="comment_supervising" id="comment_supervising" {% if results %}{% for result in results %}{% ifequal result.key 'comment_supervising' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Who is your supervising professor?</span></dd>
> < 				<dt><label for="comment_citizen">Citizen or resident</label></dt><dd><input type="text" name="comment_citizen" id="comment_citizen" {% if results %}{% for result in results %}{% ifequal result.key 'comment_citizen' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Are you a citizen or resident? Type in "citizen" or "resident".</span></dd>
> < 				<dt><label for="comment_native">Native English speaker</label></dt><dd><input type="text" name="comment_native" id="comment_native" {% if results %}{% for result in results %}{% ifequal result.key 'comment_native' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Are you a native English speaker? Type in "yes" or "no".</span></dd>
> < 				<dt><label for="comment_ta">TA history</label></dt><dd><input type="text" name="comment_ta" id="comment_ta" {% if results %}{% for result in results %}{% ifequal result.key 'comment_ta' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Do you have a history being a TA? Type in "yes" or "no".</span></dd>
> < 				<dt><label for="comment_programming">Programming languages</label></dt><dd><input type="text" name="comment_programming" id="comment_programming" {% if results %}{% for result in results %}{% ifequal result.key 'comment_programming' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>What programming languages do you know?</span></dd>
> < 				<dt><label for="comment_area">Area of specialization</label></dt><dd><input type="text" name="comment_area" id="comment_area" {% if results %}{% for result in results %}{% ifequal result.key 'comment_area' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>What is your area of specialization?</span></dd>
> < 				<dt><label for="comment_qualified">Course qualified to teach</label></dt><dd><input type="text" name="comment_qualified" id="comment_qualified" {% if results %}{% for result in results %}{% ifequal result.key 'comment_qualified' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>What course(s) are you qualified to teach?</span></dd>
> ---
> > 				<dt><label for="phone_applicant">Phone</label></dt><dd>
> > 				<input type="text" name="phone_applicant" id="phone_applicant" {% if results %}{% for result in results %}{% ifequal result.key 'phone_applicant' %}{% if result.valid %}value="{{ result.value }}" />
> > 				<span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><
> > 				span{% endif %}>What is your phone number?</span></dd>
> > 
> > 				<dt><label for="email_applicant">Email</label></dt><dd>
> > 				<input type="text" name="email_applicant" id="email_applicant" {% if results %}{% for result in results %}{% ifequal result.key 'email_applicant' %}{% if result.valid %}value="{{ result.value }}" />
> > 				<span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/>
> > 				<span{% endif %}>What is your email address?</span></dd>
> > 
> > 				<dt><label for="comment_major">Major field</label></dt><dd>
> > 				<input type="text" name="comment_major" id="comment_major" {% if results %}{% for result in results %}{% ifequal result.key 'comment_major' %}{% if result.valid %}value="{{ result.value }}" />
> > 				<span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/>
> > 				<span{% endif %}>What is your major field?</span></dd>
> > 
> > 				<dt><label for="comment_admission">Admission date</label></dt>
> > 				<dd><input type="text" name="comment_admission" id="comment_admission" {% if results %}{% for result in results %}{% ifequal result.key 'comment_admission' %}{% if result.valid %}value="{{ result.value }}" />
> > 				<span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/>
> > 				<span{% endif %}>What is your admission date?</span></dd>
> > 
> > 				<dt><label for="comment_phd">PhD or Masters</label></dt>
> > 				<dd><input type="text" name="comment_phd" id="comment_phd" {% if results %}{% for result in results %}{% ifequal result.key 'comment_phd' %}{% if result.valid %}value="{{ result.value }}" />
> > 				<span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/>
> > 				<span{% endif %}>Do you have a PhD or Masters? Type in "PhD" or "Masters".</span></dd>
> > 
> > 				<dt><label for="comment_supervising">Supervising professor</label></dt>
> > 				<dd><input type="text" name="comment_supervising" id="comment_supervising" {% if results %}{% for result in results %}{% ifequal result.key 'comment_supervising' %}{% if result.valid %}value="{{ result.value }}" />
> > 				<span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/>
> > 				<span{% endif %}>Who is your supervising professor?</span></dd>
> > 
> > 				<dt><label for="comment_citizen">Citizen or resident</label></dt>
> > 				<dd><input type="text" name="comment_citizen" id="comment_citizen" {% if results %}{% for result in results %}{% ifequal result.key 'comment_citizen' %}{% if result.valid %}value="{{ result.value }}" />
> > 				<span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/>
> > 				<span{% endif %}>Are you a citizen or resident? Type in "citizen" or "resident".</span></dd>
> > 
> > 				<dt><label for="comment_native">Native English speaker</label></dt>
> > 				<dd><input type="text" name="comment_native" id="comment_native" {% if results %}{% for result in results %}{% ifequal result.key 'comment_native' %}{% if result.valid %}value="{{ result.value }}" />
> > 				<span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/>
> > 				<span{% endif %}>Are you a native English speaker? Type in "yes" or "no".</span></dd>
> > 
> > 				<dt><label for="comment_ta">TA history</label></dt>
> > 				<dd><input type="text" name="comment_ta" id="comment_ta" {% if results %}{% for result in results %}{% ifequal result.key 'comment_ta' %}{% if result.valid %}value="{{ result.value }}" />
> > 				<span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/>
> > 				<span{% endif %}>Do you have a history being a TA? Type in "yes" or "no".</span></dd>
> > 
> > 				<dt><label for="comment_programming">Programming languages</label></dt>
> > 				<dd><input type="text" name="comment_programming" id="comment_programming" {% if results %}{% for result in results %}{% ifequal result.key 'comment_programming' %}{% if result.valid %}value="{{ result.value }}" />
> > 				<span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/>
> > 				<span{% endif %}>What programming languages do you know?</span></dd>
> > 
> > 				<dt><label for="comment_area">Area of specialization</label></dt>
> > 				<dd><input type="text" name="comment_area" id="comment_area" {% if results %}{% for result in results %}{% ifequal result.key 'comment_area' %}{% if result.valid %}value="{{ result.value }}" />
> > 				<span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/>
> > 				<span{% endif %}>What is your area of specialization?</span></dd>
> > 
> > 				<dt><label for="comment_qualified">Course qualified to teach</label></dt>
> > 				<dd><input type="text" name="comment_qualified" id="comment_qualified" {% if results %}{% for result in results %}{% ifequal result.key 'comment_qualified' %}{% if result.valid %}value="{{ result.value }}" />
> > 				<span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/>
> > 				<span{% endif %}>What course(s) are you qualified to teach?</span></dd>
> > 
> 
> ***************************
> * Changes in revision 18 
> ***************************
> 
> ------------------------------------------------------------------------
> r18 | jeffery | 2009-03-25 14:18:26 -0500 (Wed, 25 Mar 2009) | 2 lines
> 
> Minor fix. Jeffery Zhu
> 
> ------------------------------------------------------------------------
> 
> Index: applicant.html
> ===================================================================
> 20,21c20,21
> < 				<span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><
> < 				span{% endif %}>What is your phone number?</span></dd>
> ---
> > 				<span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/>
> > 				<span{% endif %}>What is your phone number?</span></dd>
> 
> ***************************
> * Changes in revision 19 
> ***************************
> 
> ------------------------------------------------------------------------
> r19 | jeffery | 2009-03-25 14:37:23 -0500 (Wed, 25 Mar 2009) | 7 lines
> 
> Made instructor.html and admin.html more readable.
> 
> Added all fields to validator.py and used Validation.py functions to perform validation.
> 
> Jeffery Zhu
> 
> 
> ------------------------------------------------------------------------
> 
> Index: instructor.html
> ===================================================================
> 18,21c18,36
> < 				<dt><label for="comment_wanted">Specific wanted students</label></dt><dd><input type="text" name="comment_wanted" id="comment_wanted" {% if results %}{% for result in results %}{% ifequal result.key 'comment_wanted' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Are there any students you specifically want?</span></dd>
> < 				<dt><label for="comment_unwanted">Specific unwanted students</label></dt><dd><input type="text" name="comment_unwanted" id="comment_unwanted" {% if results %}{% for result in results %}{% ifequal result.key 'comment_unwanted' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Are there any students you specifically don't want?</span></dd>
> < 				<dt><label for="comment_native">Native English speaker</label></dt><dd><input type="text" name="comment_native" id="comment_native" {% if results %}{% for result in results %}{% ifequal result.key 'comment_native' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Are you a native English speaker? Type in "yes" or "no".</span></dd>
> < 				<dt><label for="comment_specialization">Background in a particular area of specialization</label></dt><dd><input type="text" name="comment_specialization" id="comment_specialization" {% if results %}{% for result in results %}{% ifequal result.key 'comment_specialization' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Background in a particular area of specialization?</span></dd>
> ---
> > 				<dt><label for="comment_wanted">Specific wanted students</label></dt>
> > 				<dd><input type="text" name="comment_wanted" id="comment_wanted" {% if results %}{% for result in results %}{% ifequal result.key 'comment_wanted' %}{% if result.valid %}value="{{ result.value }}" />
> > 				<span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/>
> > 				<span{% endif %}>Are there any students you specifically want?</span></dd>
> > 
> > 				<dt><label for="comment_unwanted">Specific unwanted students</label></dt>
> > 				<dd><input type="text" name="comment_unwanted" id="comment_unwanted" {% if results %}{% for result in results %}{% ifequal result.key 'comment_unwanted' %}{% if result.valid %}value="{{ result.value }}" />
> > 				<span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/>
> > 				<span{% endif %}>Are there any students you specifically don't want?</span></dd>
> > 
> > 				<dt><label for="comment_native">Native English speaker</label></dt>
> > 				<dd><input type="text" name="comment_native" id="comment_native" {% if results %}{% for result in results %}{% ifequal result.key 'comment_native' %}{% if result.valid %}value="{{ result.value }}" />
> > 				<span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/>
> > 				<span{% endif %}>Are you a native English speaker? Type in "yes" or "no".</span></dd>
> > 
> > 				<dt><label for="comment_specialization">Background in a particular area of specialization</label>
> > 				</dt><dd><input type="text" name="comment_specialization" id="comment_specialization" {% if results %}{% for result in results %}{% ifequal result.key 'comment_specialization' %}{% if result.valid %}value="{{ result.value }}" />
> > 				<span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/>
> > 				<span{% endif %}>Background in a particular area of specialization?</span></dd>
> Index: Validation.py
> ===================================================================
> 50a51,56
> > 
> > # ------------
> > # comment
> > # ------------
> > def comment (s) :
> >         return not re.search('.+',s) is None
> \ No newline at end of file
> Index: index.html
> ===================================================================
> 7a8
> > 		<div>TA Assignment Page for Applicants and Administration
> Index: admin.html
> ===================================================================
> 18,22c18,41
> < 				<dt><label for="comment_class_name">Class number/name</label></dt><dd><input type="text" name="comment_class_name" id="comment_class_name" {% if results %}{% for result in results %}{% ifequal result.key 'comment_class_name' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>What is the class's number/name?</span></dd>
> < 				<dt><label for="comment_inst_name">Instructor's name</label></dt><dd><input type="text" name="comment_inst_name" id="comment_inst_name" {% if results %}{% for result in results %}{% ifequal result.key 'comment_inst_name' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>What instructor will teach the class?</span></dd>
> < 				<dt><label for="comment_exp_enrollment">Expected enrollment</label></dt><dd><input type="text" name="comment_exp_enrollment" id="comment_exp_enrollment" {% if results %}{% for result in results %}{% ifequal result.key 'comment_exp_enrollment' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>How many students are expected to enroll?</span></dd>
> < 				<dt><label for="comment_num_ta_needed">Number of TAs needed</label></dt><dd><input type="text" name="comment_num_ta_needed" id="comment_num_ta_needed" {% if results %}{% for result in results %}{% ifequal result.key 'comment_num_ta_needed' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>How many TAs will be needed?</span></dd>
> < 				<dt><label for="comment_num_ta_assigned">Number of TAs assigned</label></dt><dd><input type="text" name="comment_num_ta_assigned" id="comment_num_ta_assigned" {% if results %}{% for result in results %}{% ifequal result.key 'comment_num_ta_assigned' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>How many TAs are assigned?</span></dd>
> ---
> > 				<dt><label for="comment_class_name">Class number/name</label></dt>
> > 				<dd><input type="text" name="comment_class_name" id="comment_class_name" {% if results %}{% for result in results %}{% ifequal result.key 'comment_class_name' %}{% if result.valid %}value="{{ result.value }}" />
> > 				<span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/>
> > 				<span{% endif %}>What is the class's number/name?</span></dd>
> > 
> > 				<dt><label for="comment_inst_name">Instructor's name</label></dt>
> > 				<dd><input type="text" name="comment_inst_name" id="comment_inst_name" {% if results %}{% for result in results %}{% ifequal result.key 'comment_inst_name' %}{% if result.valid %}value="{{ result.value }}" />
> > 				<span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/>
> > 				<span{% endif %}>What instructor will teach the class?</span></dd>
> > 
> > 				<dt><label for="comment_exp_enrollment">Expected enrollment</label></dt>
> > 				<dd><input type="text" name="comment_exp_enrollment" id="comment_exp_enrollment" {% if results %}{% for result in results %}{% ifequal result.key 'comment_exp_enrollment' %}{% if result.valid %}value="{{ result.value }}" />
> > 				<span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/>
> > 				<span{% endif %}>How many students are expected to enroll?</span></dd>
> > 
> > 				<dt><label for="comment_num_ta_needed">Number of TAs needed</label></dt>
> > 				<dd><input type="text" name="comment_num_ta_needed" id="comment_num_ta_needed" {% if results %}{% for result in results %}{% ifequal result.key 'comment_num_ta_needed' %}{% if result.valid %}value="{{ result.value }}" />
> > 				<span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/>
> > 				<span{% endif %}>How many TAs will be needed?</span></dd>
> > 
> > 				<dt><label for="comment_num_ta_assigned">Number of TAs assigned</label></dt>
> > 				<dd><input type="text" name="comment_num_ta_assigned" id="comment_num_ta_assigned" {% if results %}{% for result in results %}{% ifequal result.key 'comment_num_ta_assigned' %}{% if result.valid %}value="{{ result.value }}" />
> > 				<span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/>
> > 				<span{% endif %}>How many TAs are assigned?</span></dd>
> Index: validator.py
> ===================================================================
> 18,21c18,21
> < 				'name'     : Validation.name(value),
> < 				'password' : lambda: True if re.match('.{6,30}', value) else False,
> < 				'address'  : lambda: True if re.match('.+', value) else False,
> < 				'phone'    : Validation.phone_number(value),
> ---
> > 				#'name'     : Validation.name(value),
> > 				#'password' : lambda: True if re.match('.{6,30}', value) else False,
> > 				#'address'  : lambda: True if re.match('.+', value) else False,
> > 				#'phone'    : Validation.phone_number(value),
> 23,24c23,53
> < 				'email'    : Validation.email(value),
> < 				'comment'  : lambda: True if re.match('.+', value) else False,
> ---
> > 				#'email'    : Validation.email(value),
> > 				#'comment'  : lambda: True if re.match('.+', value) else False,
> > 				
> > 				#TA Applicant switches
> > 				'phone_applicant'		: Validation.phone_number(value)
> > 				'email_applicant'		: Validation.email(value)
> > 				'comment_major'			: Validation.comment(value)
> > 				'comment_admission'		: Validation.comment(value)
> > 				'comment_phd'			: Validation.comment(value)
> > 				'comment_supervising'		: Validation.comment(value)
> > 				'comment_citizen'		: Validation.comment(value)
> > 				'comment_native'		: Validation.comment(value)
> > 				'comment_ta'			: Validation.comment(value)
> > 				'comment_programming'		: Validation.comment(value)
> > 				'comment_area'			: Validation.comment(value)
> > 				'comment_qualified'		: Validation.comment(value)
> > 			
> > 				#Instructor Swicthes
> > 				'comment_wanted'		: Validation.comment(value)
> > 				'comment_unwanted'		: Validation.comment(value)
> > 				'comment_native'		: Validation.comment(value)
> > 				'comment_specialization'	: Validation.comment(value)
> > 				#Admin switches	
> > 				
> > 				'comment_class_name'		: Validation.comment(value)
> > 				'comment_inst_name'		: Validation.comment(value)
> > 				'comment_exp_enrollment'	: Validation.comment(value)
> > 				'comment_num_ta_needed'		: Validation.comment(value)
> > 				'comment_num_ta_assigned'	: Validation.comment(value)
> > 				
> > 				
> 
> ***************************
> * Changes in revision 20 
> ***************************
> 
> ------------------------------------------------------------------------
> r20 | ting | 2009-03-25 16:22:37 -0500 (Wed, 25 Mar 2009) | 1 line
> 
> added area code unit test
> ------------------------------------------------------------------------
> 
> Index: TestValidation.py
> ===================================================================
> 29a30,31
> > 	def testPhoneNumber7 (self) :
> > 		self.assert_(Validation.phone_number('(000)123-4567'))
> Index: validator.py
> ===================================================================
> 
> ***************************
> * Changes in revision 21 
> ***************************
> 
> ------------------------------------------------------------------------
> r21 | ting | 2009-03-25 16:41:21 -0500 (Wed, 25 Mar 2009) | 1 line
> 
> modified html files to use relative pathing vs. absolute pathing
> ------------------------------------------------------------------------
> 
> Index: instructor.html
> ===================================================================
> 6,7c6,7
> < 		<link rel="stylesheet" type="text/css" href="/style/reset.css" />
> < 		<link rel="stylesheet" type="text/css" href="/style/main.css" />
> ---
> > 		<link rel="stylesheet" type="text/css" href="style/reset.css" />
> > 		<link rel="stylesheet" type="text/css" href="style/main.css" />
> 9,12c9,12
> < 		<script type="text/javascript" src="/js/load.js"></script>
> < 		<script type="text/javascript" src="/js/setHighlight.js"></script>
> < 		<script type="text/javascript" src="/js/formInputHighlight.js"></script>
> < 		<script type="text/javascript" src="/js/formTextareaHighlight.js"></script>
> ---
> > 		<script type="text/javascript" src="js/load.js"></script>
> > 		<script type="text/javascript" src="js/setHighlight.js"></script>
> > 		<script type="text/javascript" src="js/formInputHighlight.js"></script>
> > 		<script type="text/javascript" src="js/formTextareaHighlight.js"></script>
> Index: admin.html
> ===================================================================
> 6,7c6,7
> < 		<link rel="stylesheet" type="text/css" href="/style/reset.css" />
> < 		<link rel="stylesheet" type="text/css" href="/style/main.css" />
> ---
> > 		<link rel="stylesheet" type="text/css" href="style/reset.css" />
> > 		<link rel="stylesheet" type="text/css" href="style/main.css" />
> 9,12c9,12
> < 		<script type="text/javascript" src="/js/load.js"></script>
> < 		<script type="text/javascript" src="/js/setHighlight.js"></script>
> < 		<script type="text/javascript" src="/js/formInputHighlight.js"></script>
> < 		<script type="text/javascript" src="/js/formTextareaHighlight.js"></script>
> ---
> > 		<script type="text/javascript" src="js/load.js"></script>
> > 		<script type="text/javascript" src="js/setHighlight.js"></script>
> > 		<script type="text/javascript" src="js/formInputHighlight.js"></script>
> > 		<script type="text/javascript" src="js/formTextareaHighlight.js"></script>
> Index: applicant.html
> ===================================================================
> 6,7c6,7
> < 		<link rel="stylesheet" type="text/css" href="/style/reset.css" />
> < 		<link rel="stylesheet" type="text/css" href="/style/main.css" />
> ---
> > 		<link rel="stylesheet" type="text/css" href="style/reset.css" />
> > 		<link rel="stylesheet" type="text/css" href="style/main.css" />
> 9,12c9,12
> < 		<script type="text/javascript" src="/js/load.js"></script>
> < 		<script type="text/javascript" src="/js/setHighlight.js"></script>
> < 		<script type="text/javascript" src="/js/formInputHighlight.js"></script>
> < 		<script type="text/javascript" src="/js/formTextareaHighlight.js"></script>
> ---
> > 		<script type="text/javascript" src="js/load.js"></script>
> > 		<script type="text/javascript" src="js/setHighlight.js"></script>
> > 		<script type="text/javascript" src="js/formInputHighlight.js"></script>
> > 		<script type="text/javascript" src="js/formTextareaHighlight.js"></script>
> 
> ***************************
> * Changes in revision 22 
> ***************************
> 
> ------------------------------------------------------------------------
> r22 | ting | 2009-03-25 17:15:21 -0500 (Wed, 25 Mar 2009) | 1 line
> 
> javascript/html broken.  rollback to r16
> ------------------------------------------------------------------------
> 
> Index: instructor.html
> ===================================================================
> 6,7c6,7
> < 		<link rel="stylesheet" type="text/css" href="style/reset.css" />
> < 		<link rel="stylesheet" type="text/css" href="style/main.css" />
> ---
> > 		<link rel="stylesheet" type="text/css" href="/style/reset.css" />
> > 		<link rel="stylesheet" type="text/css" href="/style/main.css" />
> 9,12c9,12
> < 		<script type="text/javascript" src="js/load.js"></script>
> < 		<script type="text/javascript" src="js/setHighlight.js"></script>
> < 		<script type="text/javascript" src="js/formInputHighlight.js"></script>
> < 		<script type="text/javascript" src="js/formTextareaHighlight.js"></script>
> ---
> > 		<script type="text/javascript" src="/js/load.js"></script>
> > 		<script type="text/javascript" src="/js/setHighlight.js"></script>
> > 		<script type="text/javascript" src="/js/formInputHighlight.js"></script>
> > 		<script type="text/javascript" src="/js/formTextareaHighlight.js"></script>
> 18,36c18,21
> < 				<dt><label for="comment_wanted">Specific wanted students</label></dt>
> < 				<dd><input type="text" name="comment_wanted" id="comment_wanted" {% if results %}{% for result in results %}{% ifequal result.key 'comment_wanted' %}{% if result.valid %}value="{{ result.value }}" />
> < 				<span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/>
> < 				<span{% endif %}>Are there any students you specifically want?</span></dd>
> < 
> < 				<dt><label for="comment_unwanted">Specific unwanted students</label></dt>
> < 				<dd><input type="text" name="comment_unwanted" id="comment_unwanted" {% if results %}{% for result in results %}{% ifequal result.key 'comment_unwanted' %}{% if result.valid %}value="{{ result.value }}" />
> < 				<span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/>
> < 				<span{% endif %}>Are there any students you specifically don't want?</span></dd>
> < 
> < 				<dt><label for="comment_native">Native English speaker</label></dt>
> < 				<dd><input type="text" name="comment_native" id="comment_native" {% if results %}{% for result in results %}{% ifequal result.key 'comment_native' %}{% if result.valid %}value="{{ result.value }}" />
> < 				<span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/>
> < 				<span{% endif %}>Are you a native English speaker? Type in "yes" or "no".</span></dd>
> < 
> < 				<dt><label for="comment_specialization">Background in a particular area of specialization</label>
> < 				</dt><dd><input type="text" name="comment_specialization" id="comment_specialization" {% if results %}{% for result in results %}{% ifequal result.key 'comment_specialization' %}{% if result.valid %}value="{{ result.value }}" />
> < 				<span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/>
> < 				<span{% endif %}>Background in a particular area of specialization?</span></dd>
> ---
> > 				<dt><label for="comment_wanted">Specific wanted students</label></dt><dd><input type="text" name="comment_wanted" id="comment_wanted" {% if results %}{% for result in results %}{% ifequal result.key 'comment_wanted' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Are there any students you specifically want?</span></dd>
> > 				<dt><label for="comment_unwanted">Specific unwanted students</label></dt><dd><input type="text" name="comment_unwanted" id="comment_unwanted" {% if results %}{% for result in results %}{% ifequal result.key 'comment_unwanted' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Are there any students you specifically don't want?</span></dd>
> > 				<dt><label for="comment_native">Native English speaker</label></dt><dd><input type="text" name="comment_native" id="comment_native" {% if results %}{% for result in results %}{% ifequal result.key 'comment_native' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Are you a native English speaker? Type in "yes" or "no".</span></dd>
> > 				<dt><label for="comment_specialization">Background in a particular area of specialization</label></dt><dd><input type="text" name="comment_specialization" id="comment_specialization" {% if results %}{% for result in results %}{% ifequal result.key 'comment_specialization' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Background in a particular area of specialization?</span></dd>
> Index: TestValidation.py
> ===================================================================
> 30,31d29
> < 	def testPhoneNumber7 (self) :
> < 		self.assert_(Validation.phone_number('(000)123-4567'))
> Index: Validation.py
> ===================================================================
> 51,56d50
> < 
> < # ------------
> < # comment
> < # ------------
> < def comment (s) :
> <         return not re.search('.+',s) is None
> \ No newline at end of file
> Index: index.html
> ===================================================================
> 8d7
> < 		<div>TA Assignment Page for Applicants and Administration
> Index: admin.html
> ===================================================================
> 6,7c6,7
> < 		<link rel="stylesheet" type="text/css" href="style/reset.css" />
> < 		<link rel="stylesheet" type="text/css" href="style/main.css" />
> ---
> > 		<link rel="stylesheet" type="text/css" href="/style/reset.css" />
> > 		<link rel="stylesheet" type="text/css" href="/style/main.css" />
> 9,12c9,12
> < 		<script type="text/javascript" src="js/load.js"></script>
> < 		<script type="text/javascript" src="js/setHighlight.js"></script>
> < 		<script type="text/javascript" src="js/formInputHighlight.js"></script>
> < 		<script type="text/javascript" src="js/formTextareaHighlight.js"></script>
> ---
> > 		<script type="text/javascript" src="/js/load.js"></script>
> > 		<script type="text/javascript" src="/js/setHighlight.js"></script>
> > 		<script type="text/javascript" src="/js/formInputHighlight.js"></script>
> > 		<script type="text/javascript" src="/js/formTextareaHighlight.js"></script>
> 18,41c18,22
> < 				<dt><label for="comment_class_name">Class number/name</label></dt>
> < 				<dd><input type="text" name="comment_class_name" id="comment_class_name" {% if results %}{% for result in results %}{% ifequal result.key 'comment_class_name' %}{% if result.valid %}value="{{ result.value }}" />
> < 				<span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/>
> < 				<span{% endif %}>What is the class's number/name?</span></dd>
> < 
> < 				<dt><label for="comment_inst_name">Instructor's name</label></dt>
> < 				<dd><input type="text" name="comment_inst_name" id="comment_inst_name" {% if results %}{% for result in results %}{% ifequal result.key 'comment_inst_name' %}{% if result.valid %}value="{{ result.value }}" />
> < 				<span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/>
> < 				<span{% endif %}>What instructor will teach the class?</span></dd>
> < 
> < 				<dt><label for="comment_exp_enrollment">Expected enrollment</label></dt>
> < 				<dd><input type="text" name="comment_exp_enrollment" id="comment_exp_enrollment" {% if results %}{% for result in results %}{% ifequal result.key 'comment_exp_enrollment' %}{% if result.valid %}value="{{ result.value }}" />
> < 				<span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/>
> < 				<span{% endif %}>How many students are expected to enroll?</span></dd>
> < 
> < 				<dt><label for="comment_num_ta_needed">Number of TAs needed</label></dt>
> < 				<dd><input type="text" name="comment_num_ta_needed" id="comment_num_ta_needed" {% if results %}{% for result in results %}{% ifequal result.key 'comment_num_ta_needed' %}{% if result.valid %}value="{{ result.value }}" />
> < 				<span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/>
> < 				<span{% endif %}>How many TAs will be needed?</span></dd>
> < 
> < 				<dt><label for="comment_num_ta_assigned">Number of TAs assigned</label></dt>
> < 				<dd><input type="text" name="comment_num_ta_assigned" id="comment_num_ta_assigned" {% if results %}{% for result in results %}{% ifequal result.key 'comment_num_ta_assigned' %}{% if result.valid %}value="{{ result.value }}" />
> < 				<span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/>
> < 				<span{% endif %}>How many TAs are assigned?</span></dd>
> ---
> > 				<dt><label for="comment_class_name">Class number/name</label></dt><dd><input type="text" name="comment_class_name" id="comment_class_name" {% if results %}{% for result in results %}{% ifequal result.key 'comment_class_name' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>What is the class's number/name?</span></dd>
> > 				<dt><label for="comment_inst_name">Instructor's name</label></dt><dd><input type="text" name="comment_inst_name" id="comment_inst_name" {% if results %}{% for result in results %}{% ifequal result.key 'comment_inst_name' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>What instructor will teach the class?</span></dd>
> > 				<dt><label for="comment_exp_enrollment">Expected enrollment</label></dt><dd><input type="text" name="comment_exp_enrollment" id="comment_exp_enrollment" {% if results %}{% for result in results %}{% ifequal result.key 'comment_exp_enrollment' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>How many students are expected to enroll?</span></dd>
> > 				<dt><label for="comment_num_ta_needed">Number of TAs needed</label></dt><dd><input type="text" name="comment_num_ta_needed" id="comment_num_ta_needed" {% if results %}{% for result in results %}{% ifequal result.key 'comment_num_ta_needed' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>How many TAs will be needed?</span></dd>
> > 				<dt><label for="comment_num_ta_assigned">Number of TAs assigned</label></dt><dd><input type="text" name="comment_num_ta_assigned" id="comment_num_ta_assigned" {% if results %}{% for result in results %}{% ifequal result.key 'comment_num_ta_assigned' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>How many TAs are assigned?</span></dd>
> Index: validator.py
> ===================================================================
> 2d1
> < import Validation
> 18,21c17,20
> < 				#'name'     : Validation.name(value),
> < 				#'password' : lambda: True if re.match('.{6,30}', value) else False,
> < 				#'address'  : lambda: True if re.match('.+', value) else False,
> < 				#'phone'    : Validation.phone_number(value),
> ---
> > 				'name'     : lambda: True if re.match('.+', value) else False,
> > 				'password' : lambda: True if re.match('.{6,30}', value) else False,
> > 				'address'  : lambda: True if re.match('.+', value) else False,
> > 				'phone'    : lambda: True if re.match('.+', value) else False,
> 23,53c22,23
> < 				#'email'    : Validation.email(value),
> < 				#'comment'  : lambda: True if re.match('.+', value) else False,
> < 
> < 				#TA Applicant switches
> < 				'phone_applicant'		: Validation.phone_number(value)
> < 				'email_applicant'		: Validation.email(value)
> < 				'comment_major'			: Validation.comment(value)
> < 				'comment_admission'		: Validation.comment(value)
> < 				'comment_phd'			: Validation.comment(value)
> < 				'comment_supervising'		: Validation.comment(value)
> < 				'comment_citizen'		: Validation.comment(value)
> < 				'comment_native'		: Validation.comment(value)
> < 				'comment_ta'			: Validation.comment(value)
> < 				'comment_programming'		: Validation.comment(value)
> < 				'comment_area'			: Validation.comment(value)
> < 				'comment_qualified'		: Validation.comment(value)
> < 
> < 				#Instructor Swicthes
> < 				'comment_wanted'		: Validation.comment(value)
> < 				'comment_unwanted'		: Validation.comment(value)
> < 				'comment_native'		: Validation.comment(value)
> < 				'comment_specialization'	: Validation.comment(value)
> < 				#Admin switches	
> < 
> < 				'comment_class_name'		: Validation.comment(value)
> < 				'comment_inst_name'		: Validation.comment(value)
> < 				'comment_exp_enrollment'	: Validation.comment(value)
> < 				'comment_num_ta_needed'		: Validation.comment(value)
> < 				'comment_num_ta_assigned'	: Validation.comment(value)
> < 
> < 
> ---
> > 				'email'    : lambda: True if re.match('[a-zA-Z0-9!#$%&\'*+/=?^_`{|}~-]+(?:\.[a-zA-Z0-9!#$%&\'*+/=?^_`{|}~-]+)*@(?:[a-zA-Z0-9](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?\.)+[a-zA-Z0-9](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?', value) else False,
> > 				'comment'  : lambda: True if re.match('.+', value) else False,
> 58,73d27
> < #		for key, value in form_data:
> < #			result = {}
> < #			result['key'] = key
> < #			result['value'] = value
> < #			ghetto_switch = {
> < #				'name'     : lambda: True if re.match('.+', value) else False,
> < #				'password' : lambda: True if re.match('.{6,30}', value) else False,
> < #				'address'  : lambda: True if re.match('.+', value) else False,
> < #				'phone'    : lambda: True if re.match('.+', value) else False,
> < #				# lol, this is ALMOST to RFC 2822, doesn't handle double quoted sections before '@' or square bracket Internet address after, perfect bug op
> < #				'email'    : lambda: True if re.match('[a-zA-Z0-9!#$%&\'*+/=?^_`{|}~-]+(?:\.[a-zA-Z0-9!#$%&\'*+/=?^_`{|}~-]+)*@(?:[a-zA-Z0-9](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?\.)+[a-zA-Z0-9](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?', value) else False,
> < #				'comment'  : lambda: True if re.match('.+', value) else False,
> < #			}[key.split('_')[0]]()
> < #			result['valid'] = True if ghetto_switch else False
> < #			self.results.append(result)
> < 
> Index: applicant.html
> ===================================================================
> 6,7c6,7
> < 		<link rel="stylesheet" type="text/css" href="style/reset.css" />
> < 		<link rel="stylesheet" type="text/css" href="style/main.css" />
> ---
> > 		<link rel="stylesheet" type="text/css" href="/style/reset.css" />
> > 		<link rel="stylesheet" type="text/css" href="/style/main.css" />
> 9,12c9,12
> < 		<script type="text/javascript" src="js/load.js"></script>
> < 		<script type="text/javascript" src="js/setHighlight.js"></script>
> < 		<script type="text/javascript" src="js/formInputHighlight.js"></script>
> < 		<script type="text/javascript" src="js/formTextareaHighlight.js"></script>
> ---
> > 		<script type="text/javascript" src="/js/load.js"></script>
> > 		<script type="text/javascript" src="/js/setHighlight.js"></script>
> > 		<script type="text/javascript" src="/js/formInputHighlight.js"></script>
> > 		<script type="text/javascript" src="/js/formTextareaHighlight.js"></script>
> 18,77c18,29
> < 				<dt><label for="phone_applicant">Phone</label></dt><dd>
> < 				<input type="text" name="phone_applicant" id="phone_applicant" {% if results %}{% for result in results %}{% ifequal result.key 'phone_applicant' %}{% if result.valid %}value="{{ result.value }}" />
> < 				<span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/>
> < 				<span{% endif %}>What is your phone number?</span></dd>
> < 
> < 				<dt><label for="email_applicant">Email</label></dt><dd>
> < 				<input type="text" name="email_applicant" id="email_applicant" {% if results %}{% for result in results %}{% ifequal result.key 'email_applicant' %}{% if result.valid %}value="{{ result.value }}" />
> < 				<span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/>
> < 				<span{% endif %}>What is your email address?</span></dd>
> < 
> < 				<dt><label for="comment_major">Major field</label></dt><dd>
> < 				<input type="text" name="comment_major" id="comment_major" {% if results %}{% for result in results %}{% ifequal result.key 'comment_major' %}{% if result.valid %}value="{{ result.value }}" />
> < 				<span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/>
> < 				<span{% endif %}>What is your major field?</span></dd>
> < 
> < 				<dt><label for="comment_admission">Admission date</label></dt>
> < 				<dd><input type="text" name="comment_admission" id="comment_admission" {% if results %}{% for result in results %}{% ifequal result.key 'comment_admission' %}{% if result.valid %}value="{{ result.value }}" />
> < 				<span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/>
> < 				<span{% endif %}>What is your admission date?</span></dd>
> < 
> < 				<dt><label for="comment_phd">PhD or Masters</label></dt>
> < 				<dd><input type="text" name="comment_phd" id="comment_phd" {% if results %}{% for result in results %}{% ifequal result.key 'comment_phd' %}{% if result.valid %}value="{{ result.value }}" />
> < 				<span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/>
> < 				<span{% endif %}>Do you have a PhD or Masters? Type in "PhD" or "Masters".</span></dd>
> < 
> < 				<dt><label for="comment_supervising">Supervising professor</label></dt>
> < 				<dd><input type="text" name="comment_supervising" id="comment_supervising" {% if results %}{% for result in results %}{% ifequal result.key 'comment_supervising' %}{% if result.valid %}value="{{ result.value }}" />
> < 				<span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/>
> < 				<span{% endif %}>Who is your supervising professor?</span></dd>
> < 
> < 				<dt><label for="comment_citizen">Citizen or resident</label></dt>
> < 				<dd><input type="text" name="comment_citizen" id="comment_citizen" {% if results %}{% for result in results %}{% ifequal result.key 'comment_citizen' %}{% if result.valid %}value="{{ result.value }}" />
> < 				<span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/>
> < 				<span{% endif %}>Are you a citizen or resident? Type in "citizen" or "resident".</span></dd>
> < 
> < 				<dt><label for="comment_native">Native English speaker</label></dt>
> < 				<dd><input type="text" name="comment_native" id="comment_native" {% if results %}{% for result in results %}{% ifequal result.key 'comment_native' %}{% if result.valid %}value="{{ result.value }}" />
> < 				<span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/>
> < 				<span{% endif %}>Are you a native English speaker? Type in "yes" or "no".</span></dd>
> < 
> < 				<dt><label for="comment_ta">TA history</label></dt>
> < 				<dd><input type="text" name="comment_ta" id="comment_ta" {% if results %}{% for result in results %}{% ifequal result.key 'comment_ta' %}{% if result.valid %}value="{{ result.value }}" />
> < 				<span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/>
> < 				<span{% endif %}>Do you have a history being a TA? Type in "yes" or "no".</span></dd>
> < 
> < 				<dt><label for="comment_programming">Programming languages</label></dt>
> < 				<dd><input type="text" name="comment_programming" id="comment_programming" {% if results %}{% for result in results %}{% ifequal result.key 'comment_programming' %}{% if result.valid %}value="{{ result.value }}" />
> < 				<span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/>
> < 				<span{% endif %}>What programming languages do you know?</span></dd>
> < 
> < 				<dt><label for="comment_area">Area of specialization</label></dt>
> < 				<dd><input type="text" name="comment_area" id="comment_area" {% if results %}{% for result in results %}{% ifequal result.key 'comment_area' %}{% if result.valid %}value="{{ result.value }}" />
> < 				<span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/>
> < 				<span{% endif %}>What is your area of specialization?</span></dd>
> < 
> < 				<dt><label for="comment_qualified">Course qualified to teach</label></dt>
> < 				<dd><input type="text" name="comment_qualified" id="comment_qualified" {% if results %}{% for result in results %}{% ifequal result.key 'comment_qualified' %}{% if result.valid %}value="{{ result.value }}" />
> < 				<span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/>
> < 				<span{% endif %}>What course(s) are you qualified to teach?</span></dd>
> < 
> ---
> > 				<dt><label for="phone_applicant">Phone</label></dt><dd><input type="text" name="phone_applicant" id="phone_applicant" {% if results %}{% for result in results %}{% ifequal result.key 'phone_applicant' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>What is your phone number?</span></dd>
> > 				<dt><label for="email_applicant">Email</label></dt><dd><input type="text" name="email_applicant" id="email_applicant" {% if results %}{% for result in results %}{% ifequal result.key 'email_applicant' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>What is your email address?</span></dd>
> > 				<dt><label for="comment_major">Major field</label></dt><dd><input type="text" name="comment_major" id="comment_major" {% if results %}{% for result in results %}{% ifequal result.key 'comment_major' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>What is your major field?</span></dd>
> > 				<dt><label for="comment_admission">Admission date</label></dt><dd><input type="text" name="comment_admission" id="comment_admission" {% if results %}{% for result in results %}{% ifequal result.key 'comment_admission' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>What is your admission date?</span></dd>
> > 				<dt><label for="comment_phd">PhD or Masters</label></dt><dd><input type="text" name="comment_phd" id="comment_phd" {% if results %}{% for result in results %}{% ifequal result.key 'comment_phd' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Do you have a PhD or Masters? Type in "PhD" or "Masters".</span></dd>
> > 				<dt><label for="comment_supervising">Supervising professor</label></dt><dd><input type="text" name="comment_supervising" id="comment_supervising" {% if results %}{% for result in results %}{% ifequal result.key 'comment_supervising' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Who is your supervising professor?</span></dd>
> > 				<dt><label for="comment_citizen">Citizen or resident</label></dt><dd><input type="text" name="comment_citizen" id="comment_citizen" {% if results %}{% for result in results %}{% ifequal result.key 'comment_citizen' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Are you a citizen or resident? Type in "citizen" or "resident".</span></dd>
> > 				<dt><label for="comment_native">Native English speaker</label></dt><dd><input type="text" name="comment_native" id="comment_native" {% if results %}{% for result in results %}{% ifequal result.key 'comment_native' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Are you a native English speaker? Type in "yes" or "no".</span></dd>
> > 				<dt><label for="comment_ta">TA history</label></dt><dd><input type="text" name="comment_ta" id="comment_ta" {% if results %}{% for result in results %}{% ifequal result.key 'comment_ta' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Do you have a history being a TA? Type in "yes" or "no".</span></dd>
> > 				<dt><label for="comment_programming">Programming languages</label></dt><dd><input type="text" name="comment_programming" id="comment_programming" {% if results %}{% for result in results %}{% ifequal result.key 'comment_programming' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>What programming languages do you know?</span></dd>
> > 				<dt><label for="comment_area">Area of specialization</label></dt><dd><input type="text" name="comment_area" id="comment_area" {% if results %}{% for result in results %}{% ifequal result.key 'comment_area' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>What is your area of specialization?</span></dd>
> > 				<dt><label for="comment_qualified">Course qualified to teach</label></dt><dd><input type="text" name="comment_qualified" id="comment_qualified" {% if results %}{% for result in results %}{% ifequal result.key 'comment_qualified' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>What course(s) are you qualified to teach?</span></dd>
> 
> ***************************
> * Changes in revision 23 
> ***************************
> 
> ------------------------------------------------------------------------
> r23 | levi | 2009-03-25 17:20:44 -0500 (Wed, 25 Mar 2009) | 1 line
> 
> Updated TA1.txt with my EID
> ------------------------------------------------------------------------
> 
> Index: validator.pyc
> ===================================================================
> Cannot display: file marked as a binary type.
> svn:mime-type = application/octet-stream
> Index: TA1.txt
> ===================================================================
> 22c22
> < EID:
> ---
> > EID: lbw429
> 
> ***************************
> * Changes in revision 24 
> ***************************
> 
> ------------------------------------------------------------------------
> r24 | ting | 2009-03-25 17:22:02 -0500 (Wed, 25 Mar 2009) | 1 line
> 
> removing unnecessary .pyc files
> ------------------------------------------------------------------------
> 
> Index: validator.pyc
> ===================================================================
> Cannot display: file marked as a binary type.
> svn:mime-type = application/octet-stream
> 
> ***************************
> * Changes in revision 25 
> ***************************
> 
> ------------------------------------------------------------------------
> r25 | jeffery | 2009-03-25 19:21:51 -0500 (Wed, 25 Mar 2009) | 5 lines
> 
> Validation is working
> Cleaned up a little html, will do more
> 
> Jeffery Zhu
> 
> ------------------------------------------------------------------------
> 
> Index: Validation.py
> ===================================================================
> 50a51,56
> > 
> > # ------------
> > # comment
> > # ------------
> > def comment (s) :
> >         return not re.search('.+',s) is None
> \ No newline at end of file
> Index: app.yaml
> ===================================================================
> 2c2
> < version: 6
> ---
> > version: 7
> Index: validator.py
> ===================================================================
> 1a2
> > import Validation
> 17,20c18,21
> < 				'name'     : lambda: True if re.match('.+', value) else False,
> < 				'password' : lambda: True if re.match('.{6,30}', value) else False,
> < 				'address'  : lambda: True if re.match('.+', value) else False,
> < 				'phone'    : lambda: True if re.match('.+', value) else False,
> ---
> > 				#'name'     : Validation.name(value),
> > 				#'password' : lambda: True if re.match('.{6,30}', value) else False,
> > 				#'address'  : lambda: True if re.match('.+', value) else False,
> > 				#'phone'    : Validation.phone_number(value),
> 22,24c23,55
> < 				'email'    : lambda: True if re.match('[a-zA-Z0-9!#$%&\'*+/=?^_`{|}~-]+(?:\.[a-zA-Z0-9!#$%&\'*+/=?^_`{|}~-]+)*@(?:[a-zA-Z0-9](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?\.)+[a-zA-Z0-9](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?', value) else False,
> < 				'comment'  : lambda: True if re.match('.+', value) else False,
> < 			}[key.split('_')[0]]()
> ---
> > 				#'email'    : Validation.email(value),
> > 				#'comment'  : lambda: True if re.match('.+', value) else False,
> > 				
> > 				#TA Applicant switches
> > 				'phone_applicant'		: lambda x: Validation.phone_number(x),
> > 				'email_applicant'		: lambda x: Validation.email(x),
> > 				'comment_major'			: lambda x: Validation.comment(x),
> > 				'comment_admission'		: lambda x: Validation.comment(x),
> > 				'comment_phd'			: lambda x: Validation.comment(x),
> > 				'comment_supervising'		: lambda x: Validation.comment(x),
> > 				'comment_citizen'		: lambda x: Validation.comment(x),
> > 				'comment_native'		: lambda x: Validation.comment(x),
> > 				'comment_ta'			: lambda x: Validation.comment(x),
> > 				'comment_programming'		: lambda x: Validation.comment(x),
> > 				'comment_area'			: lambda x: Validation.comment(x),
> > 				'comment_qualified'		: lambda x: Validation.comment(x),
> > 			
> > 				#Instructor Swicthes
> > 				'comment_wanted'		: lambda x: Validation.comment(x),
> > 				'comment_unwanted'		: lambda x: Validation.comment(x),
> > 				'comment_native'		: lambda x: Validation.comment(x),
> > 				'comment_specialization'	: lambda x: Validation.comment(x),
> > 				#Admin switches	
> > 				
> > 				'comment_class_name'		: lambda x: Validation.comment(x),
> > 				'comment_inst_name'		: lambda x: Validation.comment(x),
> > 				'comment_exp_enrollment'	: lambda x: Validation.comment(x),
> > 				'comment_num_ta_needed'		: lambda x: Validation.comment(x),
> > 				'comment_num_ta_assigned'	: lambda x: Validation.comment(x),
> > 				
> > 				
> > 			}[key](value)
> > 			
> 27a59,74
> > #		for key, value in form_data:
> > #			result = {}
> > #			result['key'] = key
> > #			result['value'] = value
> > #			ghetto_switch = {
> > #				'name'     : lambda: True if re.match('.+', value) else False,
> > #				'password' : lambda: True if re.match('.{6,30}', value) else False,
> > #				'address'  : lambda: True if re.match('.+', value) else False,
> > #				'phone'    : lambda: True if re.match('.+', value) else False,
> > #				# lol, this is ALMOST to RFC 2822, doesn't handle double quoted sections before '@' or square bracket Internet address after, perfect bug op
> > #				'email'    : lambda: True if re.match('[a-zA-Z0-9!#$%&\'*+/=?^_`{|}~-]+(?:\.[a-zA-Z0-9!#$%&\'*+/=?^_`{|}~-]+)*@(?:[a-zA-Z0-9](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?\.)+[a-zA-Z0-9](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?', value) else False,
> > #				'comment'  : lambda: True if re.match('.+', value) else False,
> > #			}[key.split('_')[0]]()
> > #			result['valid'] = True if ghetto_switch else False
> > #			self.results.append(result)
> > 
> Index: applicant.html
> ===================================================================
> 18,29c18,72
> < 				<dt><label for="phone_applicant">Phone</label></dt><dd><input type="text" name="phone_applicant" id="phone_applicant" {% if results %}{% for result in results %}{% ifequal result.key 'phone_applicant' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>What is your phone number?</span></dd>
> < 				<dt><label for="email_applicant">Email</label></dt><dd><input type="text" name="email_applicant" id="email_applicant" {% if results %}{% for result in results %}{% ifequal result.key 'email_applicant' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>What is your email address?</span></dd>
> < 				<dt><label for="comment_major">Major field</label></dt><dd><input type="text" name="comment_major" id="comment_major" {% if results %}{% for result in results %}{% ifequal result.key 'comment_major' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>What is your major field?</span></dd>
> < 				<dt><label for="comment_admission">Admission date</label></dt><dd><input type="text" name="comment_admission" id="comment_admission" {% if results %}{% for result in results %}{% ifequal result.key 'comment_admission' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>What is your admission date?</span></dd>
> < 				<dt><label for="comment_phd">PhD or Masters</label></dt><dd><input type="text" name="comment_phd" id="comment_phd" {% if results %}{% for result in results %}{% ifequal result.key 'comment_phd' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Do you have a PhD or Masters? Type in "PhD" or "Masters".</span></dd>
> < 				<dt><label for="comment_supervising">Supervising professor</label></dt><dd><input type="text" name="comment_supervising" id="comment_supervising" {% if results %}{% for result in results %}{% ifequal result.key 'comment_supervising' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Who is your supervising professor?</span></dd>
> < 				<dt><label for="comment_citizen">Citizen or resident</label></dt><dd><input type="text" name="comment_citizen" id="comment_citizen" {% if results %}{% for result in results %}{% ifequal result.key 'comment_citizen' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Are you a citizen or resident? Type in "citizen" or "resident".</span></dd>
> < 				<dt><label for="comment_native">Native English speaker</label></dt><dd><input type="text" name="comment_native" id="comment_native" {% if results %}{% for result in results %}{% ifequal result.key 'comment_native' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Are you a native English speaker? Type in "yes" or "no".</span></dd>
> < 				<dt><label for="comment_ta">TA history</label></dt><dd><input type="text" name="comment_ta" id="comment_ta" {% if results %}{% for result in results %}{% ifequal result.key 'comment_ta' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Do you have a history being a TA? Type in "yes" or "no".</span></dd>
> < 				<dt><label for="comment_programming">Programming languages</label></dt><dd><input type="text" name="comment_programming" id="comment_programming" {% if results %}{% for result in results %}{% ifequal result.key 'comment_programming' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>What programming languages do you know?</span></dd>
> < 				<dt><label for="comment_area">Area of specialization</label></dt><dd><input type="text" name="comment_area" id="comment_area" {% if results %}{% for result in results %}{% ifequal result.key 'comment_area' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>What is your area of specialization?</span></dd>
> < 				<dt><label for="comment_qualified">Course qualified to teach</label></dt><dd><input type="text" name="comment_qualified" id="comment_qualified" {% if results %}{% for result in results %}{% ifequal result.key 'comment_qualified' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>What course(s) are you qualified to teach?</span></dd>
> ---
> > 				<dt><label for="phone_applicant">Phone</label></dt>
> > 				<dd><input type="text" name="phone_applicant" id="phone_applicant" {% if results %}{% for result in results %}{% ifequal result.key 'phone_applicant' %}{% if result.valid %}value="{{ result.value }}" />
> > 				<span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/>
> > 				<span{% endif %}>What is your phone number?</span></dd>
> > 
> > 				<dt><label for="email_applicant">Email</label></dt>
> > 				<dd><input type="text" name="email_applicant" id="email_applicant" {% if results %}{% for result in results %}{% ifequal result.key 'email_applicant' %}{% if result.valid %}value="{{ result.value }}" />
> > 				<span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/>
> > 				<span{% endif %}>What is your email address?</span></dd>
> > 
> > 				<dt><label for="comment_major">Major field</label></dt>
> > 				<dd><input type="text" name="comment_major" id="comment_major" {% if results %}{% for result in results %}{% ifequal result.key 'comment_major' %}{% if result.valid %}value="{{ result.value }}" />
> > 				<span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/>
> > 				<span{% endif %}>What is your major field?</span></dd>
> > 
> > 				<dt><label for="comment_admission">Admission date</label></dt><dd><input type="text" name="comment_admission" id="comment_admission" {% if results %}{% for result in results %}{% ifequal result.key 'comment_admission' %}{% if result.valid %}value="{{ result.value }}" />
> > 				<span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/>
> > 				<span{% endif %}>What is your admission date?</span></dd>
> > 
> > 				<dt><label for="comment_phd">PhD or Masters</label></dt><dd><input type="text" name="comment_phd" id="comment_phd" {% if results %}{% for result in results %}{% ifequal result.key 'comment_phd' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/>
> > 				<span{% endif %}>Do you have a PhD or Masters? Type in "PhD" or "Masters".</span></dd>
> > 
> > 				<dt><label for="comment_supervising">Supervising professor</label></dt>
> > 				<dd><input type="text" name="comment_supervising" id="comment_supervising" {% if results %}{% for result in results %}{% ifequal result.key 'comment_supervising' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/>
> > 				<span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/>
> > 				<span{% endif %}>Who is your supervising professor?</span></dd>
> > 
> > 				<dt><label for="comment_citizen">Citizen or resident</label></dt>
> > 				<dd><input type="text" name="comment_citizen" id="comment_citizen" {% if results %}{% for result in results %}{% ifequal result.key 'comment_citizen' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/>
> > 				<span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/>
> > 				<span{% endif %}>Are you a citizen or resident? Type in "citizen" or "resident".</span></dd>
> > 
> > 				<dt><label for="comment_native">Native English speaker</label></dt>
> > 				<dd><input type="text" name="comment_native" id="comment_native" {% if results %}{% for result in results %}{% ifequal result.key 'comment_native' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/>
> > 				<span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/>
> > 				<span{% endif %}>Are you a native English speaker? Type in "yes" or "no".</span></dd>
> > 
> > 				<dt><label for="comment_ta">TA history</label></dt><dd><input type="text" name="comment_ta" id="comment_ta" {% if results %}{% for result in results %}{% ifequal result.key 'comment_ta' %}{% if result.valid %}value="{{ result.value }}" />
> > 				<span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/>
> > 				<span{% endif %}>Do you have a history being a TA? Type in "yes" or "no".</span></dd>
> > 
> > 				<dt><label for="comment_programming">Programming languages</label></dt>
> > 				<dd><input type="text" name="comment_programming" id="comment_programming" {% if results %}{% for result in results %}{% ifequal result.key 'comment_programming' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/>
> > 				<span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/>
> > 				<span{% endif %}>What programming languages do you know?</span></dd>
> > 
> > 				<dt><label for="comment_area">Area of specialization</label></dt>
> > 				<dd><input type="text" name="comment_area" id="comment_area" {% if results %}{% for result in results %}{% ifequal result.key 'comment_area' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/>
> > 				<span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/>
> > 				<span{% endif %}>What is your area of specialization?</span></dd>
> > 
> > 				<dt><label for="comment_qualified">Course qualified to teach</label></dt>
> > 				<dd><input type="text" name="comment_qualified" id="comment_qualified" {% if results %}{% for result in results %}{% ifequal result.key 'comment_qualified' %}{% if result.valid %}value="{{ result.value }}" />
> > 				<span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/>
> > 				<span{% endif %}>What course(s) are you qualified to teach?</span></dd>
> 
> ***************************
> * Changes in revision 26 
> ***************************
> 
> ------------------------------------------------------------------------
> r26 | jeffery | 2009-03-25 20:12:58 -0500 (Wed, 25 Mar 2009) | 4 lines
> 
> Added more validations to the validator
> Cleaned up the html, the test boxes on the right don't over lap any more
> Jeffery Zhu
> 
> ------------------------------------------------------------------------
> 
> Index: instructor.html
> ===================================================================
> 18,21c18,42
> < 				<dt><label for="comment_wanted">Specific wanted students</label></dt><dd><input type="text" name="comment_wanted" id="comment_wanted" {% if results %}{% for result in results %}{% ifequal result.key 'comment_wanted' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Are there any students you specifically want?</span></dd>
> < 				<dt><label for="comment_unwanted">Specific unwanted students</label></dt><dd><input type="text" name="comment_unwanted" id="comment_unwanted" {% if results %}{% for result in results %}{% ifequal result.key 'comment_unwanted' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Are there any students you specifically don't want?</span></dd>
> < 				<dt><label for="comment_native">Native English speaker</label></dt><dd><input type="text" name="comment_native" id="comment_native" {% if results %}{% for result in results %}{% ifequal result.key 'comment_native' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Are you a native English speaker? Type in "yes" or "no".</span></dd>
> < 				<dt><label for="comment_specialization">Background in a particular area of specialization</label></dt><dd><input type="text" name="comment_specialization" id="comment_specialization" {% if results %}{% for result in results %}{% ifequal result.key 'comment_specialization' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Background in a particular area of specialization?</span></dd>
> ---
> > 				<dt><label for="comment_wanted">Specific wanted students</label></dt>
> > 				<dd><input type="text" name="comment_wanted" id="comment_wanted" {% if results %}{% for result in results %}{% ifequal result.key 'comment_wanted' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/>
> > 				<span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/>
> > 				<span{% endif %}>Are there any students you specifically want?</span></dd>
> > 				
> > 				<br />
> > 
> > 				<dt><label for="comment_unwanted">Specific unwanted students</label></dt>
> > 				<dd><input type="text" name="comment_unwanted" id="comment_unwanted" {% if results %}{% for result in results %}{% ifequal result.key 'comment_unwanted' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/>
> > 				<span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/>
> > 				<span{% endif %}>Are there any students you specifically don't want?</span></dd>
> > 
> > 				<br />
> > 
> > 				<dt><label for="comment_native">Native English speaker</label></dt>
> > 				<dd><input type="text" name="comment_native" id="comment_native" {% if results %}{% for result in results %}{% ifequal result.key 'comment_native' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/>
> > 				<span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/>
> > 				<span{% endif %}>Are you a native English speaker? Type in "yes" or "no".</span></dd>
> > 
> > 				<br />
> > 
> > 				<dt><label for="comment_specialization">Background in a particular area of specialization</label></dt>
> > 				<dd><input type="text" name="comment_specialization" id="comment_specialization" {% if results %}{% for result in results %}{% ifequal result.key 'comment_specialization' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/>
> > 				<span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/>
> > 				<span{% endif %}>Background in a particular area of specialization?</span></dd>
> Index: style/main.css
> ===================================================================
> 7c7
> < 	width: 400px;
> ---
> > 	width: 500px;
> Index: Validation.py
> ===================================================================
> 56a57,74
> > 
> > # ------------
> > # Degree type
> > # ------------
> > def degree_type (s) :
> >         return not re.search('^(PhD|Masters)$',s) is None
> > 
> > # ------------
> > # Citizen or Resident
> > # ------------
> > def citizen (s) :
> >         return not re.search('^(citizen|resident)$',s) is None
> > 
> > # ------------
> > # Yes or No
> > # ------------
> > def yes_no (s) :
> >         return not re.search('^(yes|no)$',s) is None
> Index: app.yaml
> ===================================================================
> 2c2
> < version: 7
> ---
> > version: 8
> Index: admin.html
> ===================================================================
> 18,22c18,49
> < 				<dt><label for="comment_class_name">Class number/name</label></dt><dd><input type="text" name="comment_class_name" id="comment_class_name" {% if results %}{% for result in results %}{% ifequal result.key 'comment_class_name' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>What is the class's number/name?</span></dd>
> < 				<dt><label for="comment_inst_name">Instructor's name</label></dt><dd><input type="text" name="comment_inst_name" id="comment_inst_name" {% if results %}{% for result in results %}{% ifequal result.key 'comment_inst_name' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>What instructor will teach the class?</span></dd>
> < 				<dt><label for="comment_exp_enrollment">Expected enrollment</label></dt><dd><input type="text" name="comment_exp_enrollment" id="comment_exp_enrollment" {% if results %}{% for result in results %}{% ifequal result.key 'comment_exp_enrollment' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>How many students are expected to enroll?</span></dd>
> < 				<dt><label for="comment_num_ta_needed">Number of TAs needed</label></dt><dd><input type="text" name="comment_num_ta_needed" id="comment_num_ta_needed" {% if results %}{% for result in results %}{% ifequal result.key 'comment_num_ta_needed' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>How many TAs will be needed?</span></dd>
> < 				<dt><label for="comment_num_ta_assigned">Number of TAs assigned</label></dt><dd><input type="text" name="comment_num_ta_assigned" id="comment_num_ta_assigned" {% if results %}{% for result in results %}{% ifequal result.key 'comment_num_ta_assigned' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>How many TAs are assigned?</span></dd>
> ---
> > 				<dt><label for="comment_class_name">Class number/name</label></dt>
> > 				<dd><input type="text" name="comment_class_name" id="comment_class_name" {% if results %}{% for result in results %}{% ifequal result.key 'comment_class_name' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/>
> > 				<span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/>
> > 				<span{% endif %}>What is the class's number/name?</span></dd>
> > 
> > 				<br />
> > 
> > 				<dt><label for="comment_inst_name">Instructor's name</label></dt>
> > 				<dd><input type="text" name="comment_inst_name" id="comment_inst_name" {% if results %}{% for result in results %}{% ifequal result.key 'comment_inst_name' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/>
> > 				<span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/>
> > 				<span{% endif %}>What instructor will teach the class?</span></dd>
> > 
> > 				<br />
> > 
> > 				<dt><label for="comment_exp_enrollment">Expected enrollment</label></dt>
> > 				<dd><input type="text" name="comment_exp_enrollment" id="comment_exp_enrollment" {% if results %}{% for result in results %}{% ifequal result.key 'comment_exp_enrollment' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/>
> > 				<span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/>
> > 				<span{% endif %}>How many students are expected to enroll?</span></dd>
> > 
> > 				<br />
> > 
> > 				<dt><label for="comment_num_ta_needed">Number of TAs needed</label></dt>
> > 				<dd><input type="text" name="comment_num_ta_needed" id="comment_num_ta_needed" {% if results %}{% for result in results %}{% ifequal result.key 'comment_num_ta_needed' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/>
> > 				<span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/>
> > 				<span{% endif %}>How many TAs will be needed?</span></dd>
> > 
> > 				<br />
> > 
> > 				<dt><label for="comment_num_ta_assigned">Number of TAs assigned</label></dt>
> > 				<dd><input type="text" name="comment_num_ta_assigned" id="comment_num_ta_assigned" {% if results %}{% for result in results %}{% ifequal result.key 'comment_num_ta_assigned' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/>
> > 				<span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/>
> > 				<span{% endif %}>How many TAs are assigned?</span></dd>
> Index: validator.py
> ===================================================================
> 30,31c30,31
> < 				'comment_admission'		: lambda x: Validation.comment(x),
> < 				'comment_phd'			: lambda x: Validation.comment(x),
> ---
> > 				'comment_admission'		: lambda x: Validation.date(x),
> > 				'comment_phd'			: lambda x: Validation.degree_type(x),
> 33,35c33,35
> < 				'comment_citizen'		: lambda x: Validation.comment(x),
> < 				'comment_native'		: lambda x: Validation.comment(x),
> < 				'comment_ta'			: lambda x: Validation.comment(x),
> ---
> > 				'comment_citizen'		: lambda x: Validation.citizen(x),
> > 				'comment_native'		: lambda x: Validation.yes_no(x),
> > 				'comment_ta'			: lambda x: Validation.yes_no(x),
> Index: applicant.html
> ===================================================================
> 22a23,24
> > 				<br />
> > 
> 27a30,31
> > 				<br />
> > 
> 33c37,39
> < 				<dt><label for="comment_admission">Admission date</label></dt><dd><input type="text" name="comment_admission" id="comment_admission" {% if results %}{% for result in results %}{% ifequal result.key 'comment_admission' %}{% if result.valid %}value="{{ result.value }}" />
> ---
> > 				<br />
> > 
> > 				<dt><label for="comment_admission">Admission date (DD-MM-YYYY)</label></dt><dd><input type="text" name="comment_admission" id="comment_admission" {% if results %}{% for result in results %}{% ifequal result.key 'comment_admission' %}{% if result.valid %}value="{{ result.value }}" />
> 36a43,44
> > 				<br />
> > 
> 39a48,49
> > 				<br />
> > 
> 44a55,56
> > 				<br />
> > 
> 49a62,63
> > 				<br />
> > 
> 54a69,70
> > 				<br />
> > 
> 58a75,76
> > 				<br />
> > 
> 63a82,83
> > 				<br />
> > 
> 68a89,90
> > 				<br />
> > 
> 
> ***************************
> * Changes in revision 27 
> ***************************
> 
> ------------------------------------------------------------------------
> r27 | estesox | 2009-03-25 20:22:53 -0500 (Wed, 25 Mar 2009) | 1 line
> 
> name validation enhanced
> ------------------------------------------------------------------------
> 
> Index: Validation.py
> ===================================================================
> 40c40
> <         return not re.search('^[A-Z][a-zA-Z\'\-]*[a-zA-Z]$',s) is None
> ---
> >         return not re.search('^^([A-Z]([a-zA-Z]*(\-|\')?[a-zA-Z]*[a-zA-Z](\')?)*(\s))+$',s) is None
> 
> ***************************
> * Changes in revision 28 
> ***************************
> 
> ------------------------------------------------------------------------
> r28 | estesox | 2009-03-25 20:24:47 -0500 (Wed, 25 Mar 2009) | 1 line
> 
> email validation enhanced
> ------------------------------------------------------------------------
> 
> Index: Validation.py
> ===================================================================
> 23c23
> <         return not re.search('(^(\w|\-|\_)+((\.)?(\w|\-|\_)+)*)\@(\w)+(\-|\w)*(\w)+((\.)?(\w)+(\-|\w)*(\w)+)*\.(com|net|org|gov|edu)$', s) is None
> ---
> >         return not re.search('(^(\w|\-|\_)+((\.)?(\w|\-|\_)+)*)\@(\w)+(\-|\w)*(\w)+((\.)?(\w)+(\-|\w)*(\w)+)*\.(com|net|org|gov|edu|info|biz|us)$', s) is None
> 
> ***************************
> * Changes in revision 29 
> ***************************
> 
> ------------------------------------------------------------------------
> r29 | estesox | 2009-03-25 20:29:18 -0500 (Wed, 25 Mar 2009) | 1 line
> 
> email validation enhanced
> ------------------------------------------------------------------------
> 
> Index: Validation.py
> ===================================================================
> 23c23
> <         return not re.search('(^(\w|\-|\_)+((\.)?(\w|\-|\_)+)*)\@(\w)+(\-|\w)*(\w)+((\.)?(\w)+(\-|\w)*(\w)+)*\.(com|net|org|gov|edu|info|biz|us)$', s) is None
> ---
> >         return not re.search('(^(\w|\-|\_)(\+)?((\.)?(\w|\-|\_)+)*)\@(\w)+(\-|\w)*(\w)+((\.)?(\w)+(\-|\w)*(\w)+)*\.(com|net|org|gov|edu|info|biz|us)$', s) is None
> 
> ***************************
> * Changes in revision 30 
> ***************************
> 
> ------------------------------------------------------------------------
> r30 | estesox | 2009-03-25 20:35:10 -0500 (Wed, 25 Mar 2009) | 1 line
> 
> minor fix of name validation
> ------------------------------------------------------------------------
> 
> Index: Validation.py
> ===================================================================
> 40c40
> <         return not re.search('^^([A-Z]([a-zA-Z]*(\-|\')?[a-zA-Z]*[a-zA-Z](\')?)*(\s))+$',s) is None
> ---
> >         return not re.search('^^([A-Z]([a-zA-Z]*(\-|\')?[a-zA-Z]*[a-zA-Z](\')?)*(\s)?)+$',s) is None
> 
> ***************************
> * Changes in revision 31 
> ***************************
> 
> ------------------------------------------------------------------------
> r31 | levi | 2009-03-25 21:03:34 -0500 (Wed, 25 Mar 2009) | 1 line
> 
> Added UML.pdf
> ------------------------------------------------------------------------
> 
> Index: UML.pdf
> ===================================================================
> Cannot display: file marked as a binary type.
> svn:mime-type = application/octet-stream
> 
> Property changes on: UML.pdf
> ___________________________________________________________________
> Added: svn:mime-type
>    + application/octet-stream
> 
> 
> ***************************
> * Changes in revision 32 
> ***************************
> 
> ------------------------------------------------------------------------
> r32 | jeffery | 2009-03-25 21:37:26 -0500 (Wed, 25 Mar 2009) | 3 lines
> 
> Added unit tests for comment, degree type, yes or no, and resident fields
> Jeffery Zhu
> 
> ------------------------------------------------------------------------
> 
> Index: TestValidation.py
> ===================================================================
> 146a147,189
> >     # ------------
> >     # comment
> >     # ------------
> >     def testcomment1 (self) :
> >         self.assert_(Validation.comment('aaa'))
> > 
> >     # ------------
> >     # Degree type
> >     # ------------
> >     def testdegree1 (self) :
> >         self.assert_(not Validation.degree_type('aaa'))
> >     def testdegree2 (self) :
> >         self.assert_(not Validation.degree_type(''))
> >     def testdegree3 (self) :
> >         self.assert_(Validation.degree_type('PhD'))
> >     def testdegree4 (self) :
> >         self.assert_(Validation.degree_type('Masters'))
> > 
> >     # ------------
> >     # Citizen or Resident
> >     # ------------
> >     def testcitizen1 (self) :
> >         self.assert_(not Validation.citizen('aaa'))
> >     def testcitizen2 (self) :
> >         self.assert_(not Validation.citizen(''))
> >     def testcitizen3 (self) :
> >         self.assert_( Validation.citizen('citizen'))
> >     def testcitizen4 (self) :
> >         self.assert_(Validation.citizen('resident'))
> > 
> >     # ------------
> >     # Yes or No
> >     # ------------
> >     def testyesno1 (self) :
> >         self.assert_(not Validation.yes_no('aaa'))
> >     def testyesno2 (self) :
> >         self.assert_(Validation.yes_no('yes'))
> >     def testyesno3 (self) :
> >         self.assert_(Validation.yes_no('no'))
> >     def testyesno4 (self) :
> >         self.assert_(not Validation.yes_no(''))
> > 
> > 
> Index: app.yaml
> ===================================================================
> 2c2
> < version: 8
> ---
> > version: 10
> Index: validator.py
> ===================================================================
> 18,21c18,19
> < 				#'name'     : Validation.name(value),
> < 				#'password' : lambda: True if re.match('.{6,30}', value) else False,
> < 				#'address'  : lambda: True if re.match('.+', value) else False,
> < 				#'phone'    : Validation.phone_number(value),
> ---
> > 				
> > 				#'email'    : lambda: True if re.match('[a-zA-Z0-9!#$%&\'*+/=?^_`{|}~-]+(?:\.[a-zA-Z0-9!#$%&\'*+/=?^_`{|}~-]+)*@(?:[a-zA-Z0-9](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?\.)+[a-zA-Z0-9](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?', value) else False,
> 23,24d20
> < 				#'email'    : Validation.email(value),
> < 				#'comment'  : lambda: True if re.match('.+', value) else False,
> 43c39
> < 				'comment_native'		: lambda x: Validation.comment(x),
> ---
> > 				'comment_native'		: lambda x: Validation.yes_no(x),
> 49,51c45,47
> < 				'comment_exp_enrollment'	: lambda x: Validation.comment(x),
> < 				'comment_num_ta_needed'		: lambda x: Validation.comment(x),
> < 				'comment_num_ta_assigned'	: lambda x: Validation.comment(x),
> ---
> > 				'comment_exp_enrollment'	: lambda x: Validation.number(x),
> > 				'comment_num_ta_needed'		: lambda x: Validation.number(x),
> > 				'comment_num_ta_assigned'	: lambda x: Validation.number(x),
> 58,74d53
> < 
> < #		for key, value in form_data:
> < #			result = {}
> < #			result['key'] = key
> < #			result['value'] = value
> < #			ghetto_switch = {
> < #				'name'     : lambda: True if re.match('.+', value) else False,
> < #				'password' : lambda: True if re.match('.{6,30}', value) else False,
> < #				'address'  : lambda: True if re.match('.+', value) else False,
> < #				'phone'    : lambda: True if re.match('.+', value) else False,
> < #				# lol, this is ALMOST to RFC 2822, doesn't handle double quoted sections before '@' or square bracket Internet address after, perfect bug op
> < #				'email'    : lambda: True if re.match('[a-zA-Z0-9!#$%&\'*+/=?^_`{|}~-]+(?:\.[a-zA-Z0-9!#$%&\'*+/=?^_`{|}~-]+)*@(?:[a-zA-Z0-9](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?\.)+[a-zA-Z0-9](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?', value) else False,
> < #				'comment'  : lambda: True if re.match('.+', value) else False,
> < #			}[key.split('_')[0]]()
> < #			result['valid'] = True if ghetto_switch else False
> < #			self.results.append(result)
> < 
> Index: applicant.html
> ===================================================================
> 18c18
> < 				<dt><label for="phone_applicant">Phone</label></dt>
> ---
> > 				<dt><label for="phone_applicant">Phone (xxx-xxx-xxxx)</label></dt>
> 25c25
> < 				<dt><label for="email_applicant">Email</label></dt>
> ---
> > 				<dt><label for="email_applicant">Email (xxx@xxx.xxx)</label></dt>
> 
> ***************************
> * Changes in revision 33 
> ***************************
> 
> ------------------------------------------------------------------------
> r33 | estesox | 2009-03-25 21:44:27 -0500 (Wed, 25 Mar 2009) | 1 line
> 
> TA1.txt updated to include everyone's EID
> ------------------------------------------------------------------------
> 
> Index: TA1.txt
> ===================================================================
> 27c27
> < EID:
> ---
> > EID:sks732
> 
> ***************************
> * Changes in revision 34 
> ***************************
> 
> ------------------------------------------------------------------------
> r34 | estesox | 2009-03-25 21:59:06 -0500 (Wed, 25 Mar 2009) | 1 line
> 
> applicant.html slightly modified
> ------------------------------------------------------------------------
> 
> Index: applicant.html
> ===================================================================
> 39c39
> < 				<dt><label for="comment_admission">Admission date (DD-MM-YYYY)</label></dt><dd><input type="text" name="comment_admission" id="comment_admission" {% if results %}{% for result in results %}{% ifequal result.key 'comment_admission' %}{% if result.valid %}value="{{ result.value }}" />
> ---
> > 				<dt><label for="comment_admission">Admission date (MM-DD-YYYY)</label></dt><dd><input type="text" name="comment_admission" id="comment_admission" {% if results %}{% for result in results %}{% ifequal result.key 'comment_admission' %}{% if result.valid %}value="{{ result.value }}" />
> 
> ***************************
> * Changes in revision 35 
> ***************************
> 
> ------------------------------------------------------------------------
> r35 | ting | 2009-03-25 22:05:46 -0500 (Wed, 25 Mar 2009) | 1 line
> 
> added code doc for index.py, TestValidation.py
> ------------------------------------------------------------------------
> 
> Index: TestValidation.py
> ===================================================================
> 3,6d2
> < # ------------
> < # TestValidation.py
> < # ------------
> < 
> 10,13d5
> < # ---------
> < # TestAdmin
> < # ---------
> < 
> 15,17c7,9
> <     # ------------
> <     # phone_number
> <     # ------------
> ---
> > 	"""
> > 	Test phone number validation.
> > 	"""
> 30,32c22,25
> <     # ------------
> <     # phone_number_ext
> <     # ------------
> ---
> > 
> > 	"""
> > 	Test phone number extension validation.
> > 	"""
> 41,43c34,37
> <     # ------------
> <     # email
> <     # ------------
> ---
> > 
> > 	"""
> > 	Test e-mail validation.
> > 	"""
> 70,72c64,67
> <     # ------------
> <     # date
> <     # ------------
> ---
> > 
> > 	"""
> > 	Test date validation.
> > 	"""
> 97,99c92,95
> <     # ------------
> <     # name
> <     # ------------
> ---
> > 
> > 	"""
> > 	Test name validation.
> > 	"""
> 116,118c112,115
> <     # ------------
> <     # class_number
> <     # ------------
> ---
> > 
> > 	"""
> > 	Test class number validation.
> > 	"""
> 137,139c134
> <     # ------------
> <     # number
> <     # ------------
> ---
> > 
> 147,149c142,145
> <     # ------------
> <     # comment
> <     # ------------
> ---
> > 
> > 	"""
> > 	Test comment validation.
> > 	"""
> 153,155c149,151
> <     # ------------
> <     # Degree type
> <     # ------------
> ---
> > 	"""
> > 	Test degree validation.
> > 	"""
> 165,167c161,163
> <     # ------------
> <     # Citizen or Resident
> <     # ------------
> ---
> > 	"""
> > 	Test citizen/resident validation.
> > 	"""
> 177,179c173,175
> <     # ------------
> <     # Yes or No
> <     # ------------
> ---
> > 	"""
> > 	Test yes/no validation.
> > 	"""
> Index: index.py
> ===================================================================
> 7a8,10
> > 	"""
> > 	Default class if nothing is passed to the index.
> > 	"""
> 8a12,14
> > 		"""
> > 		Displays the class template.
> > 		"""
> 12a19,21
> > 	"""
> > 	Class for handling the applicant form and validation.
> > 	"""
> 13a23,25
> > 		"""
> > 		Constructor initializes results.
> > 		"""
> 16a29,31
> > 		"""
> > 		Displays the class template upon get request.
> > 		"""
> 19a35,37
> > 		"""
> > 		Validates form elements and will eventually submit the information to a database.
> > 		"""
> 24a43,45
> > 		"""
> > 		Renders the template.
> > 		"""
> 31a53,55
> > 	"""
> > 	Class for handling the instructor form and validation.
> > 	"""
> 32a57,59
> > 		"""
> > 		Constructor initializes results.
> > 		"""
> 35a63,65
> > 		"""
> > 		Displays the class template upon get request.
> > 		"""
> 38a69,71
> > 		"""
> > 		Validates form elements and will eventually submit the information to a database.
> > 		"""
> 43a77,79
> > 		"""
> > 		Renders the template.
> > 		"""
> 50a87,89
> > 	"""
> > 	Class for handling the admin form and validation.
> > 	"""
> 51a91,93
> > 		"""
> > 		Constructor initializes results.
> > 		"""
> 54a97,99
> > 		"""
> > 		Displays the class template upon get request.
> > 		"""
> 57a103,105
> > 		"""
> > 		Validates form elements and will eventually submit the information to a database.
> > 		"""
> 62a111,113
> > 		"""
> > 		Renders the template.
> > 		"""
> 69a121,123
> > 	"""
> > 	Validates each field entry upon get request.
> > 	"""
> 87a142,144
> > 	"""
> > 	Runs the program when called.
> > 	"""
> 
> ***************************
> * Changes in revision 36 
> ***************************
> 
> ------------------------------------------------------------------------
> r36 | ting | 2009-03-25 22:20:22 -0500 (Wed, 25 Mar 2009) | 1 line
> 
> updated code doc for validator.py, validation.py
> ------------------------------------------------------------------------
> 
> Index: Validation.py
> ===================================================================
> 3,6d2
> < # -------------
> < # Validation.py
> < # -------------
> < 
> 9,11d4
> < # ------------
> < # phone_number
> < # ------------
> 12a6,8
> > 	"""
> > 	Phone number validator.
> > 	"""
> 14,16c10
> < # ----------------
> < # phone_number_ext
> < # ----------------
> ---
> > 
> 17a12,14
> > 	"""
> > 	Phone number extension validator.
> > 	"""
> 19,21c16
> < # ------------
> < # email
> < # ------------
> ---
> > 
> 22a18,20
> > 	"""
> > 	E-mail address validator.
> > 	"""
> 24,26c22
> < # ------------
> < # date
> < # ------------
> ---
> > 
> 27a24,26
> > 	"""
> > 	Date validator.
> > 	"""
> 36,38c35
> < # ------------
> < # name
> < # ------------
> ---
> > 
> 39a37,39
> > 	"""
> > 	Name validator.
> > 	"""
> 41,43c41
> < # ------------
> < # class_number
> < # ------------
> ---
> > 
> 44a43,45
> > 	"""
> > 	Class number validator.
> > 	"""
> 46,48c47
> < # ------------
> < # number
> < # ------------
> ---
> > 
> 49a49,51
> > 	"""
> > 	Number validator.
> > 	"""
> 52,54d53
> < # ------------
> < # comment
> < # ------------
> 55a55,57
> > 	"""
> > 	Comment validator.
> > 	"""
> 58,60d59
> < # ------------
> < # Degree type
> < # ------------
> 61a61,63
> > 	"""
> > 	Degree validator.
> > 	"""
> 64,66d65
> < # ------------
> < # Citizen or Resident
> < # ------------
> 67a67,69
> > 	"""
> > 	Resident/Citizen validator.
> > 	"""
> 70,72d71
> < # ------------
> < # Yes or No
> < # ------------
> 73a73,75
> > 	"""
> > 	yes/no validator.
> > 	"""
> Index: TA1.txt
> ===================================================================
> Index: validator.py
> ===================================================================
> 4a5,7
> > 	"""
> > 	Generic validator class depending on form type.
> > 	"""
> 5a9,11
> > 		"""
> > 		Constructor validates k-v pairs found in form_data and returns results.
> > 		"""
> 18d23
> < 				
> 41d45
> < 				#Admin switches	
> 42a47
> > 				#Admin switches	
> 48,49d52
> < 				
> < 				
> 
> ***************************
> * Changes in revision 37 
> ***************************
> 
> ------------------------------------------------------------------------
> r37 | ting | 2009-03-25 22:26:53 -0500 (Wed, 25 Mar 2009) | 1 line
> 
> fixed TestValidation indention problems, add TestValidation.html
> ------------------------------------------------------------------------
> 
> Index: TestValidation.py
> ===================================================================
> Index: TestValidation.html
> ===================================================================
> 0a1,320
> > 
> > <!doctype html PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
> > <html><head><title>Python: module TestValidation</title>
> > </head><body bgcolor="#f0f0f8">
> > 
> > <table width="100%" cellspacing=0 cellpadding=2 border=0 summary="heading">
> > <tr bgcolor="#7799ee">
> > <td valign=bottom>&nbsp;<br>
> > <font color="#ffffff" face="helvetica, arial">&nbsp;<br><big><big><strong>TestValidation</strong></big></big></font></td
> > ><td align=right valign=bottom
> > ><font color="#ffffff" face="helvetica, arial"><a href=".">index</a><br><a href="file:/home/ting/svn/cs373_pj5/TestValidation.py">/home/ting/svn/cs373_pj5/TestValidation.py</a></font></td></tr></table>
> >     <p></p>
> > <p>
> > <table width="100%" cellspacing=0 cellpadding=2 border=0 summary="section">
> > <tr bgcolor="#aa55cc">
> > <td colspan=3 valign=bottom>&nbsp;<br>
> > <font color="#fffff" face="helvetica, arial"><big><strong>Modules</strong></big></font></td></tr>
> >     
> > <tr><td bgcolor="#aa55cc"><tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</tt></td><td>&nbsp;</td>
> > <td width="100%"><table width="100%" summary="list"><tr><td width="25%" valign=top><a href="Validation.html">Validation</a><br>
> > </td><td width="25%" valign=top><a href="unittest.html">unittest</a><br>
> > </td><td width="25%" valign=top></td><td width="25%" valign=top></td></tr></table></td></tr></table><p>
> > <table width="100%" cellspacing=0 cellpadding=2 border=0 summary="section">
> > <tr bgcolor="#ee77aa">
> > <td colspan=3 valign=bottom>&nbsp;<br>
> > <font color="#ffffff" face="helvetica, arial"><big><strong>Classes</strong></big></font></td></tr>
> >     
> > <tr><td bgcolor="#ee77aa"><tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</tt></td><td>&nbsp;</td>
> > <td width="100%"><dl>
> > <dt><font face="helvetica, arial"><a href="unittest.html#TestCase">unittest.TestCase</a>(<a href="__builtin__.html#object">__builtin__.object</a>)
> > </font></dt><dd>
> > <dl>
> > <dt><font face="helvetica, arial"><a href="TestValidation.html#TestAdmin">TestAdmin</a>
> > </font></dt></dl>
> > </dd>
> > </dl>
> >  <p>
> > <table width="100%" cellspacing=0 cellpadding=2 border=0 summary="section">
> > <tr bgcolor="#ffc8d8">
> > <td colspan=3 valign=bottom>&nbsp;<br>
> > <font color="#000000" face="helvetica, arial"><a name="TestAdmin">class <strong>TestAdmin</strong></a>(<a href="unittest.html#TestCase">unittest.TestCase</a>)</font></td></tr>
> >     
> > <tr bgcolor="#ffc8d8"><td rowspan=2><tt>&nbsp;&nbsp;&nbsp;</tt></td>
> > <td colspan=2><tt>Test&nbsp;phone&nbsp;number&nbsp;validation.<br>&nbsp;</tt></td></tr>
> > <tr><td>&nbsp;</td>
> > <td width="100%"><dl><dt>Method resolution order:</dt>
> > <dd><a href="TestValidation.html#TestAdmin">TestAdmin</a></dd>
> > <dd><a href="unittest.html#TestCase">unittest.TestCase</a></dd>
> > <dd><a href="__builtin__.html#object">__builtin__.object</a></dd>
> > </dl>
> > <hr>
> > Methods defined here:<br>
> > <dl><dt><a name="TestAdmin-testPhoneNumber1"><strong>testPhoneNumber1</strong></a>(self)</dt></dl>
> > 
> > <dl><dt><a name="TestAdmin-testPhoneNumber2"><strong>testPhoneNumber2</strong></a>(self)</dt></dl>
> > 
> > <dl><dt><a name="TestAdmin-testPhoneNumber3"><strong>testPhoneNumber3</strong></a>(self)</dt></dl>
> > 
> > <dl><dt><a name="TestAdmin-testPhoneNumber4"><strong>testPhoneNumber4</strong></a>(self)</dt></dl>
> > 
> > <dl><dt><a name="TestAdmin-testPhoneNumber5"><strong>testPhoneNumber5</strong></a>(self)</dt></dl>
> > 
> > <dl><dt><a name="TestAdmin-testPhoneNumber6"><strong>testPhoneNumber6</strong></a>(self)</dt></dl>
> > 
> > <dl><dt><a name="TestAdmin-testcitizen1"><strong>testcitizen1</strong></a>(self)</dt></dl>
> > 
> > <dl><dt><a name="TestAdmin-testcitizen2"><strong>testcitizen2</strong></a>(self)</dt></dl>
> > 
> > <dl><dt><a name="TestAdmin-testcitizen3"><strong>testcitizen3</strong></a>(self)</dt></dl>
> > 
> > <dl><dt><a name="TestAdmin-testcitizen4"><strong>testcitizen4</strong></a>(self)</dt></dl>
> > 
> > <dl><dt><a name="TestAdmin-testclass_number1"><strong>testclass_number1</strong></a>(self)</dt></dl>
> > 
> > <dl><dt><a name="TestAdmin-testclass_number2"><strong>testclass_number2</strong></a>(self)</dt></dl>
> > 
> > <dl><dt><a name="TestAdmin-testclass_number3"><strong>testclass_number3</strong></a>(self)</dt></dl>
> > 
> > <dl><dt><a name="TestAdmin-testclass_number4"><strong>testclass_number4</strong></a>(self)</dt></dl>
> > 
> > <dl><dt><a name="TestAdmin-testclass_number5"><strong>testclass_number5</strong></a>(self)</dt></dl>
> > 
> > <dl><dt><a name="TestAdmin-testclass_number6"><strong>testclass_number6</strong></a>(self)</dt></dl>
> > 
> > <dl><dt><a name="TestAdmin-testclass_number7"><strong>testclass_number7</strong></a>(self)</dt></dl>
> > 
> > <dl><dt><a name="TestAdmin-testclass_number8"><strong>testclass_number8</strong></a>(self)</dt></dl>
> > 
> > <dl><dt><a name="TestAdmin-testclass_number9"><strong>testclass_number9</strong></a>(self)</dt></dl>
> > 
> > <dl><dt><a name="TestAdmin-testcomment1"><strong>testcomment1</strong></a>(self)</dt></dl>
> > 
> > <dl><dt><a name="TestAdmin-testdate1"><strong>testdate1</strong></a>(self)</dt></dl>
> > 
> > <dl><dt><a name="TestAdmin-testdate10"><strong>testdate10</strong></a>(self)</dt></dl>
> > 
> > <dl><dt><a name="TestAdmin-testdate11"><strong>testdate11</strong></a>(self)</dt></dl>
> > 
> > <dl><dt><a name="TestAdmin-testdate12"><strong>testdate12</strong></a>(self)</dt></dl>
> > 
> > <dl><dt><a name="TestAdmin-testdate2"><strong>testdate2</strong></a>(self)</dt></dl>
> > 
> > <dl><dt><a name="TestAdmin-testdate3"><strong>testdate3</strong></a>(self)</dt></dl>
> > 
> > <dl><dt><a name="TestAdmin-testdate4"><strong>testdate4</strong></a>(self)</dt></dl>
> > 
> > <dl><dt><a name="TestAdmin-testdate5"><strong>testdate5</strong></a>(self)</dt></dl>
> > 
> > <dl><dt><a name="TestAdmin-testdate6"><strong>testdate6</strong></a>(self)</dt></dl>
> > 
> > <dl><dt><a name="TestAdmin-testdate7"><strong>testdate7</strong></a>(self)</dt></dl>
> > 
> > <dl><dt><a name="TestAdmin-testdate8"><strong>testdate8</strong></a>(self)</dt></dl>
> > 
> > <dl><dt><a name="TestAdmin-testdate9"><strong>testdate9</strong></a>(self)</dt></dl>
> > 
> > <dl><dt><a name="TestAdmin-testdegree1"><strong>testdegree1</strong></a>(self)</dt></dl>
> > 
> > <dl><dt><a name="TestAdmin-testdegree2"><strong>testdegree2</strong></a>(self)</dt></dl>
> > 
> > <dl><dt><a name="TestAdmin-testdegree3"><strong>testdegree3</strong></a>(self)</dt></dl>
> > 
> > <dl><dt><a name="TestAdmin-testdegree4"><strong>testdegree4</strong></a>(self)</dt></dl>
> > 
> > <dl><dt><a name="TestAdmin-testemail1"><strong>testemail1</strong></a>(self)</dt></dl>
> > 
> > <dl><dt><a name="TestAdmin-testemail10"><strong>testemail10</strong></a>(self)</dt></dl>
> > 
> > <dl><dt><a name="TestAdmin-testemail11"><strong>testemail11</strong></a>(self)</dt></dl>
> > 
> > <dl><dt><a name="TestAdmin-testemail12"><strong>testemail12</strong></a>(self)</dt></dl>
> > 
> > <dl><dt><a name="TestAdmin-testemail13"><strong>testemail13</strong></a>(self)</dt></dl>
> > 
> > <dl><dt><a name="TestAdmin-testemail2"><strong>testemail2</strong></a>(self)</dt></dl>
> > 
> > <dl><dt><a name="TestAdmin-testemail3"><strong>testemail3</strong></a>(self)</dt></dl>
> > 
> > <dl><dt><a name="TestAdmin-testemail4"><strong>testemail4</strong></a>(self)</dt></dl>
> > 
> > <dl><dt><a name="TestAdmin-testemail5"><strong>testemail5</strong></a>(self)</dt></dl>
> > 
> > <dl><dt><a name="TestAdmin-testemail6"><strong>testemail6</strong></a>(self)</dt></dl>
> > 
> > <dl><dt><a name="TestAdmin-testemail7"><strong>testemail7</strong></a>(self)</dt></dl>
> > 
> > <dl><dt><a name="TestAdmin-testemail8"><strong>testemail8</strong></a>(self)</dt></dl>
> > 
> > <dl><dt><a name="TestAdmin-testemail9"><strong>testemail9</strong></a>(self)</dt></dl>
> > 
> > <dl><dt><a name="TestAdmin-testname1"><strong>testname1</strong></a>(self)</dt></dl>
> > 
> > <dl><dt><a name="TestAdmin-testname2"><strong>testname2</strong></a>(self)</dt></dl>
> > 
> > <dl><dt><a name="TestAdmin-testname3"><strong>testname3</strong></a>(self)</dt></dl>
> > 
> > <dl><dt><a name="TestAdmin-testname4"><strong>testname4</strong></a>(self)</dt></dl>
> > 
> > <dl><dt><a name="TestAdmin-testname5"><strong>testname5</strong></a>(self)</dt></dl>
> > 
> > <dl><dt><a name="TestAdmin-testname6"><strong>testname6</strong></a>(self)</dt></dl>
> > 
> > <dl><dt><a name="TestAdmin-testname7"><strong>testname7</strong></a>(self)</dt></dl>
> > 
> > <dl><dt><a name="TestAdmin-testname8"><strong>testname8</strong></a>(self)</dt></dl>
> > 
> > <dl><dt><a name="TestAdmin-testnumber1"><strong>testnumber1</strong></a>(self)</dt></dl>
> > 
> > <dl><dt><a name="TestAdmin-testnumber2"><strong>testnumber2</strong></a>(self)</dt></dl>
> > 
> > <dl><dt><a name="TestAdmin-testnumber3"><strong>testnumber3</strong></a>(self)</dt></dl>
> > 
> > <dl><dt><a name="TestAdmin-testphone_number_ext1"><strong>testphone_number_ext1</strong></a>(self)</dt></dl>
> > 
> > <dl><dt><a name="TestAdmin-testphone_number_ext2"><strong>testphone_number_ext2</strong></a>(self)</dt></dl>
> > 
> > <dl><dt><a name="TestAdmin-testphone_number_ext3"><strong>testphone_number_ext3</strong></a>(self)</dt></dl>
> > 
> > <dl><dt><a name="TestAdmin-testphone_number_ext4"><strong>testphone_number_ext4</strong></a>(self)</dt></dl>
> > 
> > <dl><dt><a name="TestAdmin-testyesno1"><strong>testyesno1</strong></a>(self)</dt></dl>
> > 
> > <dl><dt><a name="TestAdmin-testyesno2"><strong>testyesno2</strong></a>(self)</dt></dl>
> > 
> > <dl><dt><a name="TestAdmin-testyesno3"><strong>testyesno3</strong></a>(self)</dt></dl>
> > 
> > <dl><dt><a name="TestAdmin-testyesno4"><strong>testyesno4</strong></a>(self)</dt></dl>
> > 
> > <hr>
> > Methods inherited from <a href="unittest.html#TestCase">unittest.TestCase</a>:<br>
> > <dl><dt><a name="TestAdmin-__call__"><strong>__call__</strong></a>(self, *args, **kwds)</dt></dl>
> > 
> > <dl><dt><a name="TestAdmin-__init__"><strong>__init__</strong></a>(self, methodName<font color="#909090">='runTest'</font>)</dt><dd><tt>Create&nbsp;an&nbsp;instance&nbsp;of&nbsp;the&nbsp;class&nbsp;that&nbsp;will&nbsp;use&nbsp;the&nbsp;named&nbsp;test<br>
> > method&nbsp;when&nbsp;executed.&nbsp;Raises&nbsp;a&nbsp;ValueError&nbsp;if&nbsp;the&nbsp;instance&nbsp;does<br>
> > not&nbsp;have&nbsp;a&nbsp;method&nbsp;with&nbsp;the&nbsp;specified&nbsp;name.</tt></dd></dl>
> > 
> > <dl><dt><a name="TestAdmin-__repr__"><strong>__repr__</strong></a>(self)</dt></dl>
> > 
> > <dl><dt><a name="TestAdmin-__str__"><strong>__str__</strong></a>(self)</dt></dl>
> > 
> > <dl><dt><a name="TestAdmin-assertAlmostEqual"><strong>assertAlmostEqual</strong></a> = failUnlessAlmostEqual(self, first, second, places<font color="#909090">=7</font>, msg<font color="#909090">=None</font>)</dt><dd><tt>Fail&nbsp;if&nbsp;the&nbsp;two&nbsp;objects&nbsp;are&nbsp;unequal&nbsp;as&nbsp;determined&nbsp;by&nbsp;their<br>
> > difference&nbsp;rounded&nbsp;to&nbsp;the&nbsp;given&nbsp;number&nbsp;of&nbsp;decimal&nbsp;places<br>
> > (default&nbsp;7)&nbsp;and&nbsp;comparing&nbsp;to&nbsp;zero.<br>
> > &nbsp;<br>
> > Note&nbsp;that&nbsp;decimal&nbsp;places&nbsp;(from&nbsp;zero)&nbsp;are&nbsp;usually&nbsp;not&nbsp;the&nbsp;same<br>
> > as&nbsp;significant&nbsp;digits&nbsp;(measured&nbsp;from&nbsp;the&nbsp;most&nbsp;signficant&nbsp;digit).</tt></dd></dl>
> > 
> > <dl><dt><a name="TestAdmin-assertAlmostEquals"><strong>assertAlmostEquals</strong></a> = failUnlessAlmostEqual(self, first, second, places<font color="#909090">=7</font>, msg<font color="#909090">=None</font>)</dt><dd><tt>Fail&nbsp;if&nbsp;the&nbsp;two&nbsp;objects&nbsp;are&nbsp;unequal&nbsp;as&nbsp;determined&nbsp;by&nbsp;their<br>
> > difference&nbsp;rounded&nbsp;to&nbsp;the&nbsp;given&nbsp;number&nbsp;of&nbsp;decimal&nbsp;places<br>
> > (default&nbsp;7)&nbsp;and&nbsp;comparing&nbsp;to&nbsp;zero.<br>
> > &nbsp;<br>
> > Note&nbsp;that&nbsp;decimal&nbsp;places&nbsp;(from&nbsp;zero)&nbsp;are&nbsp;usually&nbsp;not&nbsp;the&nbsp;same<br>
> > as&nbsp;significant&nbsp;digits&nbsp;(measured&nbsp;from&nbsp;the&nbsp;most&nbsp;signficant&nbsp;digit).</tt></dd></dl>
> > 
> > <dl><dt><a name="TestAdmin-assertEqual"><strong>assertEqual</strong></a> = failUnlessEqual(self, first, second, msg<font color="#909090">=None</font>)</dt><dd><tt>Fail&nbsp;if&nbsp;the&nbsp;two&nbsp;objects&nbsp;are&nbsp;unequal&nbsp;as&nbsp;determined&nbsp;by&nbsp;the&nbsp;'=='<br>
> > operator.</tt></dd></dl>
> > 
> > <dl><dt><a name="TestAdmin-assertEquals"><strong>assertEquals</strong></a> = failUnlessEqual(self, first, second, msg<font color="#909090">=None</font>)</dt><dd><tt>Fail&nbsp;if&nbsp;the&nbsp;two&nbsp;objects&nbsp;are&nbsp;unequal&nbsp;as&nbsp;determined&nbsp;by&nbsp;the&nbsp;'=='<br>
> > operator.</tt></dd></dl>
> > 
> > <dl><dt><a name="TestAdmin-assertFalse"><strong>assertFalse</strong></a> = failIf(self, expr, msg<font color="#909090">=None</font>)</dt><dd><tt>Fail&nbsp;the&nbsp;test&nbsp;if&nbsp;the&nbsp;expression&nbsp;is&nbsp;true.</tt></dd></dl>
> > 
> > <dl><dt><a name="TestAdmin-assertNotAlmostEqual"><strong>assertNotAlmostEqual</strong></a> = failIfAlmostEqual(self, first, second, places<font color="#909090">=7</font>, msg<font color="#909090">=None</font>)</dt><dd><tt>Fail&nbsp;if&nbsp;the&nbsp;two&nbsp;objects&nbsp;are&nbsp;equal&nbsp;as&nbsp;determined&nbsp;by&nbsp;their<br>
> > difference&nbsp;rounded&nbsp;to&nbsp;the&nbsp;given&nbsp;number&nbsp;of&nbsp;decimal&nbsp;places<br>
> > (default&nbsp;7)&nbsp;and&nbsp;comparing&nbsp;to&nbsp;zero.<br>
> > &nbsp;<br>
> > Note&nbsp;that&nbsp;decimal&nbsp;places&nbsp;(from&nbsp;zero)&nbsp;are&nbsp;usually&nbsp;not&nbsp;the&nbsp;same<br>
> > as&nbsp;significant&nbsp;digits&nbsp;(measured&nbsp;from&nbsp;the&nbsp;most&nbsp;signficant&nbsp;digit).</tt></dd></dl>
> > 
> > <dl><dt><a name="TestAdmin-assertNotAlmostEquals"><strong>assertNotAlmostEquals</strong></a> = failIfAlmostEqual(self, first, second, places<font color="#909090">=7</font>, msg<font color="#909090">=None</font>)</dt><dd><tt>Fail&nbsp;if&nbsp;the&nbsp;two&nbsp;objects&nbsp;are&nbsp;equal&nbsp;as&nbsp;determined&nbsp;by&nbsp;their<br>
> > difference&nbsp;rounded&nbsp;to&nbsp;the&nbsp;given&nbsp;number&nbsp;of&nbsp;decimal&nbsp;places<br>
> > (default&nbsp;7)&nbsp;and&nbsp;comparing&nbsp;to&nbsp;zero.<br>
> > &nbsp;<br>
> > Note&nbsp;that&nbsp;decimal&nbsp;places&nbsp;(from&nbsp;zero)&nbsp;are&nbsp;usually&nbsp;not&nbsp;the&nbsp;same<br>
> > as&nbsp;significant&nbsp;digits&nbsp;(measured&nbsp;from&nbsp;the&nbsp;most&nbsp;signficant&nbsp;digit).</tt></dd></dl>
> > 
> > <dl><dt><a name="TestAdmin-assertNotEqual"><strong>assertNotEqual</strong></a> = failIfEqual(self, first, second, msg<font color="#909090">=None</font>)</dt><dd><tt>Fail&nbsp;if&nbsp;the&nbsp;two&nbsp;objects&nbsp;are&nbsp;equal&nbsp;as&nbsp;determined&nbsp;by&nbsp;the&nbsp;'=='<br>
> > operator.</tt></dd></dl>
> > 
> > <dl><dt><a name="TestAdmin-assertNotEquals"><strong>assertNotEquals</strong></a> = failIfEqual(self, first, second, msg<font color="#909090">=None</font>)</dt><dd><tt>Fail&nbsp;if&nbsp;the&nbsp;two&nbsp;objects&nbsp;are&nbsp;equal&nbsp;as&nbsp;determined&nbsp;by&nbsp;the&nbsp;'=='<br>
> > operator.</tt></dd></dl>
> > 
> > <dl><dt><a name="TestAdmin-assertRaises"><strong>assertRaises</strong></a> = failUnlessRaises(self, excClass, callableObj, *args, **kwargs)</dt><dd><tt>Fail&nbsp;unless&nbsp;an&nbsp;exception&nbsp;of&nbsp;class&nbsp;excClass&nbsp;is&nbsp;thrown<br>
> > by&nbsp;callableObj&nbsp;when&nbsp;invoked&nbsp;with&nbsp;arguments&nbsp;args&nbsp;and&nbsp;keyword<br>
> > arguments&nbsp;kwargs.&nbsp;If&nbsp;a&nbsp;different&nbsp;type&nbsp;of&nbsp;exception&nbsp;is<br>
> > thrown,&nbsp;it&nbsp;will&nbsp;not&nbsp;be&nbsp;caught,&nbsp;and&nbsp;the&nbsp;test&nbsp;case&nbsp;will&nbsp;be<br>
> > deemed&nbsp;to&nbsp;have&nbsp;suffered&nbsp;an&nbsp;error,&nbsp;exactly&nbsp;as&nbsp;for&nbsp;an<br>
> > unexpected&nbsp;exception.</tt></dd></dl>
> > 
> > <dl><dt><a name="TestAdmin-assertTrue"><strong>assertTrue</strong></a> = failUnless(self, expr, msg<font color="#909090">=None</font>)</dt><dd><tt>Fail&nbsp;the&nbsp;test&nbsp;unless&nbsp;the&nbsp;expression&nbsp;is&nbsp;true.</tt></dd></dl>
> > 
> > <dl><dt><a name="TestAdmin-assert_"><strong>assert_</strong></a> = failUnless(self, expr, msg<font color="#909090">=None</font>)</dt><dd><tt>Fail&nbsp;the&nbsp;test&nbsp;unless&nbsp;the&nbsp;expression&nbsp;is&nbsp;true.</tt></dd></dl>
> > 
> > <dl><dt><a name="TestAdmin-countTestCases"><strong>countTestCases</strong></a>(self)</dt></dl>
> > 
> > <dl><dt><a name="TestAdmin-debug"><strong>debug</strong></a>(self)</dt><dd><tt>Run&nbsp;the&nbsp;test&nbsp;without&nbsp;collecting&nbsp;errors&nbsp;in&nbsp;a&nbsp;TestResult</tt></dd></dl>
> > 
> > <dl><dt><a name="TestAdmin-defaultTestResult"><strong>defaultTestResult</strong></a>(self)</dt></dl>
> > 
> > <dl><dt><a name="TestAdmin-fail"><strong>fail</strong></a>(self, msg<font color="#909090">=None</font>)</dt><dd><tt>Fail&nbsp;immediately,&nbsp;with&nbsp;the&nbsp;given&nbsp;message.</tt></dd></dl>
> > 
> > <dl><dt><a name="TestAdmin-failIf"><strong>failIf</strong></a>(self, expr, msg<font color="#909090">=None</font>)</dt><dd><tt>Fail&nbsp;the&nbsp;test&nbsp;if&nbsp;the&nbsp;expression&nbsp;is&nbsp;true.</tt></dd></dl>
> > 
> > <dl><dt><a name="TestAdmin-failIfAlmostEqual"><strong>failIfAlmostEqual</strong></a>(self, first, second, places<font color="#909090">=7</font>, msg<font color="#909090">=None</font>)</dt><dd><tt>Fail&nbsp;if&nbsp;the&nbsp;two&nbsp;objects&nbsp;are&nbsp;equal&nbsp;as&nbsp;determined&nbsp;by&nbsp;their<br>
> > difference&nbsp;rounded&nbsp;to&nbsp;the&nbsp;given&nbsp;number&nbsp;of&nbsp;decimal&nbsp;places<br>
> > (default&nbsp;7)&nbsp;and&nbsp;comparing&nbsp;to&nbsp;zero.<br>
> > &nbsp;<br>
> > Note&nbsp;that&nbsp;decimal&nbsp;places&nbsp;(from&nbsp;zero)&nbsp;are&nbsp;usually&nbsp;not&nbsp;the&nbsp;same<br>
> > as&nbsp;significant&nbsp;digits&nbsp;(measured&nbsp;from&nbsp;the&nbsp;most&nbsp;signficant&nbsp;digit).</tt></dd></dl>
> > 
> > <dl><dt><a name="TestAdmin-failIfEqual"><strong>failIfEqual</strong></a>(self, first, second, msg<font color="#909090">=None</font>)</dt><dd><tt>Fail&nbsp;if&nbsp;the&nbsp;two&nbsp;objects&nbsp;are&nbsp;equal&nbsp;as&nbsp;determined&nbsp;by&nbsp;the&nbsp;'=='<br>
> > operator.</tt></dd></dl>
> > 
> > <dl><dt><a name="TestAdmin-failUnless"><strong>failUnless</strong></a>(self, expr, msg<font color="#909090">=None</font>)</dt><dd><tt>Fail&nbsp;the&nbsp;test&nbsp;unless&nbsp;the&nbsp;expression&nbsp;is&nbsp;true.</tt></dd></dl>
> > 
> > <dl><dt><a name="TestAdmin-failUnlessAlmostEqual"><strong>failUnlessAlmostEqual</strong></a>(self, first, second, places<font color="#909090">=7</font>, msg<font color="#909090">=None</font>)</dt><dd><tt>Fail&nbsp;if&nbsp;the&nbsp;two&nbsp;objects&nbsp;are&nbsp;unequal&nbsp;as&nbsp;determined&nbsp;by&nbsp;their<br>
> > difference&nbsp;rounded&nbsp;to&nbsp;the&nbsp;given&nbsp;number&nbsp;of&nbsp;decimal&nbsp;places<br>
> > (default&nbsp;7)&nbsp;and&nbsp;comparing&nbsp;to&nbsp;zero.<br>
> > &nbsp;<br>
> > Note&nbsp;that&nbsp;decimal&nbsp;places&nbsp;(from&nbsp;zero)&nbsp;are&nbsp;usually&nbsp;not&nbsp;the&nbsp;same<br>
> > as&nbsp;significant&nbsp;digits&nbsp;(measured&nbsp;from&nbsp;the&nbsp;most&nbsp;signficant&nbsp;digit).</tt></dd></dl>
> > 
> > <dl><dt><a name="TestAdmin-failUnlessEqual"><strong>failUnlessEqual</strong></a>(self, first, second, msg<font color="#909090">=None</font>)</dt><dd><tt>Fail&nbsp;if&nbsp;the&nbsp;two&nbsp;objects&nbsp;are&nbsp;unequal&nbsp;as&nbsp;determined&nbsp;by&nbsp;the&nbsp;'=='<br>
> > operator.</tt></dd></dl>
> > 
> > <dl><dt><a name="TestAdmin-failUnlessRaises"><strong>failUnlessRaises</strong></a>(self, excClass, callableObj, *args, **kwargs)</dt><dd><tt>Fail&nbsp;unless&nbsp;an&nbsp;exception&nbsp;of&nbsp;class&nbsp;excClass&nbsp;is&nbsp;thrown<br>
> > by&nbsp;callableObj&nbsp;when&nbsp;invoked&nbsp;with&nbsp;arguments&nbsp;args&nbsp;and&nbsp;keyword<br>
> > arguments&nbsp;kwargs.&nbsp;If&nbsp;a&nbsp;different&nbsp;type&nbsp;of&nbsp;exception&nbsp;is<br>
> > thrown,&nbsp;it&nbsp;will&nbsp;not&nbsp;be&nbsp;caught,&nbsp;and&nbsp;the&nbsp;test&nbsp;case&nbsp;will&nbsp;be<br>
> > deemed&nbsp;to&nbsp;have&nbsp;suffered&nbsp;an&nbsp;error,&nbsp;exactly&nbsp;as&nbsp;for&nbsp;an<br>
> > unexpected&nbsp;exception.</tt></dd></dl>
> > 
> > <dl><dt><a name="TestAdmin-id"><strong>id</strong></a>(self)</dt></dl>
> > 
> > <dl><dt><a name="TestAdmin-run"><strong>run</strong></a>(self, result<font color="#909090">=None</font>)</dt></dl>
> > 
> > <dl><dt><a name="TestAdmin-setUp"><strong>setUp</strong></a>(self)</dt><dd><tt>Hook&nbsp;method&nbsp;for&nbsp;setting&nbsp;up&nbsp;the&nbsp;test&nbsp;fixture&nbsp;before&nbsp;exercising&nbsp;it.</tt></dd></dl>
> > 
> > <dl><dt><a name="TestAdmin-shortDescription"><strong>shortDescription</strong></a>(self)</dt><dd><tt>Returns&nbsp;a&nbsp;one-line&nbsp;description&nbsp;of&nbsp;the&nbsp;test,&nbsp;or&nbsp;None&nbsp;if&nbsp;no<br>
> > description&nbsp;has&nbsp;been&nbsp;provided.<br>
> > &nbsp;<br>
> > The&nbsp;default&nbsp;implementation&nbsp;of&nbsp;this&nbsp;method&nbsp;returns&nbsp;the&nbsp;first&nbsp;line&nbsp;of<br>
> > the&nbsp;specified&nbsp;test&nbsp;method's&nbsp;docstring.</tt></dd></dl>
> > 
> > <dl><dt><a name="TestAdmin-tearDown"><strong>tearDown</strong></a>(self)</dt><dd><tt>Hook&nbsp;method&nbsp;for&nbsp;deconstructing&nbsp;the&nbsp;test&nbsp;fixture&nbsp;after&nbsp;testing&nbsp;it.</tt></dd></dl>
> > 
> > <hr>
> > Data descriptors inherited from <a href="unittest.html#TestCase">unittest.TestCase</a>:<br>
> > <dl><dt><strong>__dict__</strong></dt>
> > <dd><tt>dictionary&nbsp;for&nbsp;instance&nbsp;variables&nbsp;(if&nbsp;defined)</tt></dd>
> > </dl>
> > <dl><dt><strong>__weakref__</strong></dt>
> > <dd><tt>list&nbsp;of&nbsp;weak&nbsp;references&nbsp;to&nbsp;the&nbsp;object&nbsp;(if&nbsp;defined)</tt></dd>
> > </dl>
> > <hr>
> > Data and other attributes inherited from <a href="unittest.html#TestCase">unittest.TestCase</a>:<br>
> > <dl><dt><strong>failureException</strong> = &lt;type 'exceptions.AssertionError'&gt;<dd><tt>Assertion&nbsp;failed.</tt></dl>
> > 
> > </td></tr></table></td></tr></table>
> > </body></html>
> \ No newline at end of file
> 
> ***************************
> * Changes in revision 38 
> ***************************
> 
> ------------------------------------------------------------------------
> r38 | ting | 2009-03-25 22:38:20 -0500 (Wed, 25 Mar 2009) | 1 line
> 
> adding validation/validator html doc
> ------------------------------------------------------------------------
> 
> Index: validator.html
> ===================================================================
> 0a1,45
> > 
> > <!doctype html PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
> > <html><head><title>Python: module validator</title>
> > </head><body bgcolor="#f0f0f8">
> > 
> > <table width="100%" cellspacing=0 cellpadding=2 border=0 summary="heading">
> > <tr bgcolor="#7799ee">
> > <td valign=bottom>&nbsp;<br>
> > <font color="#ffffff" face="helvetica, arial">&nbsp;<br><big><big><strong>validator</strong></big></big></font></td
> > ><td align=right valign=bottom
> > ><font color="#ffffff" face="helvetica, arial"><a href=".">index</a><br><a href="file:/home/ting/svn/cs373_pj5/validator.py">/home/ting/svn/cs373_pj5/validator.py</a></font></td></tr></table>
> >     <p></p>
> > <p>
> > <table width="100%" cellspacing=0 cellpadding=2 border=0 summary="section">
> > <tr bgcolor="#aa55cc">
> > <td colspan=3 valign=bottom>&nbsp;<br>
> > <font color="#fffff" face="helvetica, arial"><big><strong>Modules</strong></big></font></td></tr>
> >     
> > <tr><td bgcolor="#aa55cc"><tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</tt></td><td>&nbsp;</td>
> > <td width="100%"><table width="100%" summary="list"><tr><td width="25%" valign=top><a href="Validation.html">Validation</a><br>
> > </td><td width="25%" valign=top><a href="re.html">re</a><br>
> > </td><td width="25%" valign=top></td><td width="25%" valign=top></td></tr></table></td></tr></table><p>
> > <table width="100%" cellspacing=0 cellpadding=2 border=0 summary="section">
> > <tr bgcolor="#ee77aa">
> > <td colspan=3 valign=bottom>&nbsp;<br>
> > <font color="#ffffff" face="helvetica, arial"><big><strong>Classes</strong></big></font></td></tr>
> >     
> > <tr><td bgcolor="#ee77aa"><tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</tt></td><td>&nbsp;</td>
> > <td width="100%"><dl>
> > <dt><font face="helvetica, arial"><a href="validator.html#Validator">Validator</a>
> > </font></dt></dl>
> >  <p>
> > <table width="100%" cellspacing=0 cellpadding=2 border=0 summary="section">
> > <tr bgcolor="#ffc8d8">
> > <td colspan=3 valign=bottom>&nbsp;<br>
> > <font color="#000000" face="helvetica, arial"><a name="Validator">class <strong>Validator</strong></a></font></td></tr>
> >     
> > <tr bgcolor="#ffc8d8"><td rowspan=2><tt>&nbsp;&nbsp;&nbsp;</tt></td>
> > <td colspan=2><tt>Generic&nbsp;validator&nbsp;class&nbsp;depending&nbsp;on&nbsp;form&nbsp;type.<br>&nbsp;</tt></td></tr>
> > <tr><td>&nbsp;</td>
> > <td width="100%">Methods defined here:<br>
> > <dl><dt><a name="Validator-__init__"><strong>__init__</strong></a>(self, form_data)</dt><dd><tt>Constructor&nbsp;validates&nbsp;k-v&nbsp;pairs&nbsp;found&nbsp;in&nbsp;form_data&nbsp;and&nbsp;returns&nbsp;results.</tt></dd></dl>
> > 
> > </td></tr></table></td></tr></table>
> > </body></html>
> \ No newline at end of file
> Index: Validation.html
> ===================================================================
> 0a1,40
> > 
> > <!doctype html PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
> > <html><head><title>Python: module Validation</title>
> > </head><body bgcolor="#f0f0f8">
> > 
> > <table width="100%" cellspacing=0 cellpadding=2 border=0 summary="heading">
> > <tr bgcolor="#7799ee">
> > <td valign=bottom>&nbsp;<br>
> > <font color="#ffffff" face="helvetica, arial">&nbsp;<br><big><big><strong>Validation</strong></big></big></font></td
> > ><td align=right valign=bottom
> > ><font color="#ffffff" face="helvetica, arial"><a href=".">index</a><br><a href="file:/home/ting/svn/cs373_pj5/Validation.py">/home/ting/svn/cs373_pj5/Validation.py</a></font></td></tr></table>
> >     <p></p>
> > <p>
> > <table width="100%" cellspacing=0 cellpadding=2 border=0 summary="section">
> > <tr bgcolor="#aa55cc">
> > <td colspan=3 valign=bottom>&nbsp;<br>
> > <font color="#fffff" face="helvetica, arial"><big><strong>Modules</strong></big></font></td></tr>
> >     
> > <tr><td bgcolor="#aa55cc"><tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</tt></td><td>&nbsp;</td>
> > <td width="100%"><table width="100%" summary="list"><tr><td width="25%" valign=top><a href="re.html">re</a><br>
> > </td><td width="25%" valign=top></td><td width="25%" valign=top></td><td width="25%" valign=top></td></tr></table></td></tr></table><p>
> > <table width="100%" cellspacing=0 cellpadding=2 border=0 summary="section">
> > <tr bgcolor="#eeaa77">
> > <td colspan=3 valign=bottom>&nbsp;<br>
> > <font color="#ffffff" face="helvetica, arial"><big><strong>Functions</strong></big></font></td></tr>
> >     
> > <tr><td bgcolor="#eeaa77"><tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</tt></td><td>&nbsp;</td>
> > <td width="100%"><dl><dt><a name="-citizen"><strong>citizen</strong></a>(s)</dt><dd><tt>Resident/Citizen&nbsp;validator.</tt></dd></dl>
> >  <dl><dt><a name="-class_number"><strong>class_number</strong></a>(s)</dt><dd><tt>Class&nbsp;number&nbsp;validator.</tt></dd></dl>
> >  <dl><dt><a name="-comment"><strong>comment</strong></a>(s)</dt><dd><tt>Comment&nbsp;validator.</tt></dd></dl>
> >  <dl><dt><a name="-date"><strong>date</strong></a>(s)</dt><dd><tt>Date&nbsp;validator.</tt></dd></dl>
> >  <dl><dt><a name="-degree_type"><strong>degree_type</strong></a>(s)</dt><dd><tt>Degree&nbsp;validator.</tt></dd></dl>
> >  <dl><dt><a name="-email"><strong>email</strong></a>(s)</dt><dd><tt>E-mail&nbsp;address&nbsp;validator.</tt></dd></dl>
> >  <dl><dt><a name="-name"><strong>name</strong></a>(s)</dt><dd><tt>Name&nbsp;validator.</tt></dd></dl>
> >  <dl><dt><a name="-number"><strong>number</strong></a>(s)</dt><dd><tt>Number&nbsp;validator.</tt></dd></dl>
> >  <dl><dt><a name="-phone_number"><strong>phone_number</strong></a>(s)</dt><dd><tt>Phone&nbsp;number&nbsp;validator.</tt></dd></dl>
> >  <dl><dt><a name="-phone_number_ext"><strong>phone_number_ext</strong></a>(s)</dt><dd><tt>Phone&nbsp;number&nbsp;extension&nbsp;validator.</tt></dd></dl>
> >  <dl><dt><a name="-yes_no"><strong>yes_no</strong></a>(s)</dt><dd><tt>yes/no&nbsp;validator.</tt></dd></dl>
> > </td></tr></table>
> > </body></html>
> \ No newline at end of file
> 

***************************
* Changes in revision 41 
***************************

------------------------------------------------------------------------
r41 | ting | 2009-03-25 22:52:39 -0500 (Wed, 25 Mar 2009) | 1 line

updating subversion.diff
------------------------------------------------------------------------

Index: subversion.diff
===================================================================
1c1
< Current version = 38
---
> Current version = 40
3234a3235,6622
> ***************************
> * Changes in revision 39 
> ***************************
> 
> ------------------------------------------------------------------------
> r39 | jeffery | 2009-03-25 22:42:46 -0500 (Wed, 25 Mar 2009) | 3 lines
> 
> Added unit tests for the Validator class in TestValidation.py
> Jeffery Zhu
> 
> ------------------------------------------------------------------------
> 
> Index: TestValidation.py
> ===================================================================
> 4a5
> > from validator import Validator
> 6a8,79
> > 	
> > 	"""
> > 	Test the Validator class
> > 	"""
> > 	def testvalidator1 (self) :
> > 		form_data = [];
> > 		#The first item in the tuple is the name of the field on the webpage
> > 		#The second item is the value of the field
> > 		#This is just checking if the validator class functions correctly
> > 		#The individual validation functions are tested below
> > 		form_data.append(('phone_applicant', '210-423-4243'))
> > 		form_data.append(('email_applicant', 'flashki@hotmail.com'))
> > 		form_data.append(('comment_major', 'Computer Science'))
> > 		form_data.append(('comment_admission', '07-05-1988'))
> > 		form_data.append(('comment_phd', 'PhD'))
> > 		form_data.append(('comment_supervising', 'Downing'))
> > 		form_data.append(('comment_citizen', 'citizen'))
> > 		form_data.append(('comment_native', 'yes'))
> > 		form_data.append(('comment_ta', 'no'))
> > 		form_data.append(('comment_programming', 'C'))
> > 		form_data.append(('comment_area', 'Algorithms'))
> > 		form_data.append(('comment_qualified', 'Maybe'))
> > 		form_data.append(('comment_wanted', 'You'))
> > 		form_data.append(('comment_unwanted', 'Me'))
> > 		form_data.append(('comment_native', 'yes'))
> > 		form_data.append(('comment_specialization', 'None'))
> > 		form_data.append(('comment_class_name', 'CS373'))
> > 		form_data.append(('comment_inst_name', 'Downing'))
> > 		form_data.append(('comment_exp_enrollment', '10'))
> > 		form_data.append(('comment_num_ta_needed', '1'))
> > 		form_data.append(('comment_num_ta_assigned', '0'))
> > 		
> > 		v = Validator(form_data)
> > 		for r in v.results:
> > 			if r['valid'] == False:
> > 				print r['key'], r['value']
> > 			self.assert_(r['valid'] == True)
> > 
> > 	def testvalidator2 (self) :
> > 		form_data = [];
> > 		#The first item in the tuple is the name of the field on the webpage
> > 		#The second item is the value of the field
> > 		#This is just checking if the validator class functions correctly
> > 		#The individual validation functions are tested below
> > 		form_data.append(('phone_applicant', '210-423-42432'))
> > 		form_data.append(('email_applicant', 'flashki@hotmail.com r23r'))
> > 		form_data.append(('comment_major', ''))
> > 		form_data.append(('comment_admission', '07-05-198'))
> > 		form_data.append(('comment_phd', 'Ph'))
> > 		form_data.append(('comment_supervising', ''))
> > 		form_data.append(('comment_citizen', 'ht'))
> > 		form_data.append(('comment_native', ''))
> > 		form_data.append(('comment_ta', 'n'))
> > 		form_data.append(('comment_programming', ''))
> > 		form_data.append(('comment_area', ''))
> > 		form_data.append(('comment_qualified', ''))
> > 		form_data.append(('comment_wanted', ''))
> > 		form_data.append(('comment_unwanted', ''))
> > 		form_data.append(('comment_native', 'ye'))
> > 		form_data.append(('comment_specialization', ''))
> > 		form_data.append(('comment_class_name', ''))
> > 		form_data.append(('comment_inst_name', ''))
> > 		form_data.append(('comment_exp_enrollment', '10s'))
> > 		form_data.append(('comment_num_ta_needed', '1d'))
> > 		form_data.append(('comment_num_ta_assigned', ''))
> > 		
> > 		v = Validator(form_data)
> > 		for r in v.results:
> > 			if r['valid'] == True:
> > 				print r['key'], r['value']
> > 			self.assert_(r['valid'] == False)
> > 
> 
> ***************************
> * Changes in revision 40 
> ***************************
> 
> ------------------------------------------------------------------------
> r40 | ting | 2009-03-25 22:44:08 -0500 (Wed, 25 Mar 2009) | 1 line
> 
> adding subversion log and script
> ------------------------------------------------------------------------
> 
> Index: sub_log3.sh
> ===================================================================
> 0a1,41
> > #!/bin/sh
> > 
> > 
> > # check for an optional command line variable
> > if [ $# -le 0 ]; then
> > 	echo >&2 "No command line args, running svnversion from current directory"
> > 	dir="./"
> > elif [ $1 = "-h" -o $1 = "--help" -o $# -gt 1 ]; then
> > 	/bin/echo -e "Usage: $0 [path]\n\tOutputs a running diff of a subversion checkout directory.\n\tpath is optional, defaulting to the current directory\n\tPlease note that the path must be a directory from which 'svn log' returns useful text."
> > else
> > 	dir=$1
> > 	echo >&2 "Running svnversion on this path: $dir"
> > fi
> > 
> > # get the current version
> > latestVersion=`svnversion $dir | grep -oE "[0-9]+" | tail -1`
> > 
> > # check whether the version we got is sane
> > if [ -z $latestVersion ]; then
> > 	echo >&2 "Error: svnversion does not return a number.  Are you in the correct directory?"
> > 	exit
> > elif [ $latestVersion -eq 1 ]; then
> > 	echo >&2 "Error: svnversion returns $latestVersion.  There aren't going to be any changes.  Maybe you forgot to commit some files?"
> > 	exit
> > fi
> > 
> > # output the information
> > /bin/echo -e "Current version = $latestVersion\n"
> > 
> > i=2
> > while [ $i -le "$latestVersion" ]
> > do
> > 	echo "***************************"
> > 	echo "* Changes in revision $i "
> > 	/bin/echo -e "***************************\n"
> > 	svn log -r $i $dir
> > 	echo ""
> > 	svn diff -c$i $dir --diff-cmd /usr/bin/diff -x "-Bw --suppress-common-lines"
> > 	echo ""
> > 	i=$(($i+1))
> > done
> 
> Property changes on: sub_log3.sh
> ___________________________________________________________________
> Added: svn:executable
>    + *
> 
> Index: subversion.diff
> ===================================================================
> 0a1,3234
> > Current version = 38
> > 
> > ***************************
> > * Changes in revision 2 
> > ***************************
> > 
> > ------------------------------------------------------------------------
> > r2 | levi | 2009-03-23 17:47:15 -0500 (Mon, 23 Mar 2009) | 1 line
> > 
> > Initial copy to SVN
> > ------------------------------------------------------------------------
> > 
> > Index: validator.pyc
> > ===================================================================
> > Cannot display: file marked as a binary type.
> > svn:mime-type = application/octet-stream
> > 
> > Property changes on: validator.pyc
> > ___________________________________________________________________
> > Added: svn:mime-type
> >    + application/octet-stream
> > 
> > Index: style/reset.css
> > ===================================================================
> > 0a1,50
> > > /*
> > >  * credit to Eric Meyer for this CSS reset
> > >  */
> > > 
> > > html, body, div, span, applet, object, iframe,
> > > h1, h2, h3, h4, h5, h6, p, blockquote, pre,
> > > a, abbr, acronym, address, big, cite, code,
> > > del, dfn, em, font, img, ins, kbd, q, s, samp,
> > > small, strike, strong, sub, sup, tt, var,
> > > b, u, i, center,
> > > dl, dt, dd, ol, ul, li,
> > > fieldset, form, label, legend,
> > > table, caption, tbody, tfoot, thead, tr, th, td {
> > > 	margin: 0;
> > > 	padding: 0;
> > > 	border: 0;
> > > 	outline: 0;
> > > 	font-size: 100%;
> > > 	vertical-align: baseline;
> > > 	background: transparent;
> > > }
> > > body {
> > > 	line-height: 1;
> > > }
> > > ol, ul {
> > > 	list-style: none;
> > > }
> > > blockquote, q {
> > > 	quotes: none;
> > > }
> > > 
> > > /* remember to define focus styles! */
> > > :focus {
> > > 	outline: 0;
> > > }
> > > 
> > > /* remember to highlight inserts somehow! */
> > > ins {
> > > 	text-decoration: none;
> > > }
> > > del {
> > > 	text-decoration: line-through;
> > > }
> > > 
> > > /* tables still need 'cellspacing="0"' in the markup */
> > > table {
> > > 	border-collapse: collapse;
> > > 	border-spacing: 0;
> > > }
> > > 
> > Index: style/main.css
> > ===================================================================
> > 0a1,83
> > > form {
> > > 	background-color: #EEE;
> > > 	border: 1px solid #CCC;
> > > 	font: small Verdana, Helvetica, Geneva, Arial, sans-serif;
> > > 	padding: 10px;
> > > 	margin: 10px;
> > > 	width: 400px;
> > > }
> > > 
> > > form dl {
> > > 	text-align: right;
> > > }
> > > 
> > > form dl dt {
> > > 	background-color: #FFF;
> > > 	border-left: 3px solid #CCC;
> > > 	float: left;
> > > 	line-height: 200%;
> > > 	padding: 0px 10px 0px 5px;
> > > }
> > > 
> > > form dl dd {
> > > 	padding: 0px 0px 10px 0px;
> > > 	position: relative;
> > > }
> > > 
> > > form dl dd input {
> > > 	width: 250px;
> > > }
> > > 
> > > form dl dd textarea {
> > > 	height: 100px;
> > > 	width: 250px;
> > > }
> > > 
> > > form dl dd span {
> > > 	background-color: #FF0;
> > > 	border: 1px solid #CC0;
> > > 	display: none;
> > > 	font: x-small Courier New, serif;
> > > 	padding: 2px;
> > > 	position: absolute;
> > > 	width: 150px;
> > > 	right: -180px;
> > > 	text-align: center;
> > > 	top: 4px;
> > > }
> > > 
> > > form dl dd span.error {
> > > 	background-color: #F00;
> > > 	border: 1px solid #000;
> > > 	display: inline;
> > > }
> > > 
> > > form div {
> > > 	text-align: right;
> > > }
> > > 
> > > form div input {
> > > 	background-color: #CCC;
> > > 	border: 1px outset #CCC;
> > > }
> > > 
> > > .onFocus {
> > > 	border: 2px solid #FF0;
> > > 	margin: 1px;
> > > }
> > > 
> > > .onBlur {
> > > 	border: 1px solid #000;
> > > 	margin: 2px;
> > > }
> > > 
> > > .valid {
> > > 	border: 3px solid #0F0;
> > > 	margin: 0px;
> > > }
> > > 
> > > .invalid {
> > > 	border: 3px solid #F00;
> > > 	margin: 0px;
> > > }
> > > 
> > Index: app.yaml
> > ===================================================================
> > 0a1,15
> > > application: cs373-54270-teamd
> > > version: 6
> > > runtime: python
> > > api_version: 1
> > > 
> > > handlers:
> > > - url: /js
> > >   static_dir: js
> > > 
> > > - url: /style
> > >   static_dir: style
> > > 
> > > - url: /.*
> > >   script: index.py
> > > 
> > Index: index.yaml
> > ===================================================================
> > 0a1,11
> > > indexes:
> > > 
> > > # AUTOGENERATED
> > > 
> > > # This index.yaml is automatically updated whenever the dev_appserver
> > > # detects that a new type of query is run.  If you want to manage the
> > > # index.yaml file manually, remove the above marker line (the line
> > > # saying "# AUTOGENERATED").  If you want to manage some indexes
> > > # manually, move them above the marker line.  The index.yaml file is
> > > # automatically uploaded to the admin console when you next deploy
> > > # your application using appcfg.py.
> > Index: index.html
> > ===================================================================
> > 0a1,29
> > > <!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
> > > <html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
> > > 	<head>
> > > 		<title>C S 373: 54270: TA Matching</title>
> > > 
> > > 		<link rel="stylesheet" type="text/css" href="/style/reset.css" />
> > > 		<link rel="stylesheet" type="text/css" href="/style/main.css" />
> > > 
> > > 		<script type="text/javascript" src="/js/load.js"></script>
> > > 		<script type="text/javascript" src="/js/setHighlight.js"></script>
> > > 		<script type="text/javascript" src="/js/formInputHighlight.js"></script>
> > > 		<script type="text/javascript" src="/js/formTextareaHighlight.js"></script>
> > > 	</head>
> > > 
> > > 	<body>
> > > 		<form action="/submitted" method="post">
> > > 			<dl>
> > > 				<dt><label for="name_test">Name</label></dt><dd><input type="text" name="name_test" id="name_test" {% if results %}{% for result in results %}{% ifequal result.key 'name_test' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Type in your name, at least one char</span></dd>
> > > 				<dt><label for="password_test">Password</label></dt><dd><input type="password" name="password_test" id="password_test" {% if results %}{% for result in results %}{% ifequal result.key 'password_test' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Type in your password, at least six chars</span></dd>
> > > 				<dt><label for="address_test">Address</label></dt><dd><input type="text" name="address_test" id="address_test" {% if results %}{% for result in results %}{% ifequal result.key 'address_test' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Type in your address</span></dd>
> > > 				<dt><label for="phone_test">Phone</label></dt><dd><input type="text" name="phone_test" id="phone_test" {% if results %}{% for result in results %}{% ifequal result.key 'phone_test' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Type in your phone number</span></dd>
> > > 				<dt><label for="email_test">Email</label></dt><dd><input type="text" name="email_test" id="email_test" {% if results %}{% for result in results %}{% ifequal result.key 'email_test' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Type in your email address</span></dd>
> > > 				<dt><label for="comment_test">Comment</label></dt><dd><textarea name="comment_test" id="comment_test">{% if results %}{% for result in results %}{% ifequal result.key 'comment_test' %}{% if result.valid %}{{ result.value }}</textarea><span{% else %}</textarea><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}</textarea><span{% endif %}>Type in your comment</span></dd>
> > > 			</dl>
> > > 			<div><input type="submit" value="Submit" /></div>
> > > 		</form>
> > > 	</body>
> > > </html>
> > > 
> > Index: js/formTextareaHighlight.js
> > ===================================================================
> > 0a1,10
> > > function formTextareaHighlight() {
> > > 	if(!document.getElementsByTagName) return;
> > > 
> > > 	var textareas = document.getElementsByTagName("textarea");
> > > 	for(var lcv = 0; lcv < textareas.length; ++lcv)
> > > 		setHighlight(textareas[lcv]);
> > > }
> > > 
> > > load(formTextareaHighlight);
> > > 
> > Index: js/formInputHighlight.js
> > ===================================================================
> > 0a1,14
> > > function formInputHighlight() {
> > > 	if(!document.getElementsByTagName) return;
> > > 
> > > 	var inputs = document.getElementsByTagName('input');
> > > 	for(var lcv = 0; lcv < inputs.length; ++lcv) {
> > > 		var input = inputs[lcv];
> > > 		var inputType = input.getAttribute('type');
> > > 		if(inputType == 'text' || inputType == 'password')
> > > 			setHighlight(input);
> > > 	}
> > > }
> > > 
> > > load(formInputHighlight);
> > > 
> > Index: js/load.js
> > ===================================================================
> > 0a1,12
> > > function load(func) {
> > > 	var old = window.onload;
> > > 	if(typeof window.onload != 'function')
> > > 		window.onload = func;
> > > 	else
> > > 		window.onload = function() {
> > > 			if(old)
> > > 				old();
> > > 			func();
> > > 		}
> > > }
> > > 
> > Index: js/setHighlight.js
> > ===================================================================
> > 0a1,46
> > > function setHighlight(field) {
> > > 	field.onfocus = function() {
> > > 		this.className = 'onFocus';
> > > 		this.parentNode.getElementsByTagName('span')[0].className = '';
> > > 		this.parentNode.getElementsByTagName('span')[0].style.display = 'inline';
> > > 	}
> > > 
> > > 	field.onblur = function() {
> > > 		var xmlHttp;
> > > 		try {
> > > 			// Firefox, Opera 8.0+, Safari
> > > 			xmlHttp = new XMLHttpRequest();
> > > 		}
> > > 		catch(e) {
> > > 			// Internet Explorer
> > > 			try {
> > > 				xmlHttp = new ActiveXObject("Msxml2.XMLHTTP");
> > > 			}
> > > 			catch(e) {
> > > 				try {
> > > 					xmlHttp=new ActiveXObject("Microsoft.XMLHTTP");
> > > 				}
> > > 				catch(e) {
> > > 					alert("Your browser does not support AJAX!");
> > > 					return false;
> > > 				}
> > > 			}
> > > 		}
> > > 		xmlHttp.onreadystatechange = function() {
> > > 			if(xmlHttp.readyState == 4) {
> > > 				var result = xmlHttp.responseXML.getElementsByTagName('field')[0].getAttribute('valid');
> > > 				if(result == 'True')
> > > 					field.className = 'valid';
> > > 				else if(result == 'False')
> > > 					field.className = 'invalid';
> > > 			}
> > > 		}
> > > 		this.className = 'onBlur';
> > > 		xmlHttp.open('GET','is_valid?key=' + this.getAttribute('name') + '&value=' + this.value, true);
> > > 		xmlHttp.send(null);
> > > 		this.parentNode.getElementsByTagName('span')[0].style.display = 'none';
> > > 	}
> > > 
> > > 	field.className = 'onBlur';
> > > }
> > > 
> > Index: validator.py
> > ===================================================================
> > 0a1,27
> > > import re
> > > 
> > > class Validator:
> > > 	def __init__(self, form_data):
> > > 		self.results = []
> > > 
> > > 		#TODO: how would this happen?
> > > #		if not form_data:
> > > #			self.valid = False
> > > #			self.errors.append('You POSTed without data.')
> > > 
> > > 		for key, value in form_data:
> > > 			result = {}
> > > 			result['key'] = key
> > > 			result['value'] = value
> > > 			ghetto_switch = {
> > > 				'name'     : lambda: True if re.match('.+', value) else False,
> > > 				'password' : lambda: True if re.match('.{6,30}', value) else False,
> > > 				'address'  : lambda: True if re.match('.+', value) else False,
> > > 				'phone'    : lambda: True if re.match('.+', value) else False,
> > > 				# lol, this is ALMOST to RFC 2822, doesn't handle double quoted sections before '@' or square bracket Internet address after, perfect bug op
> > > 				'email'    : lambda: True if re.match('[a-zA-Z0-9!#$%&\'*+/=?^_`{|}~-]+(?:\.[a-zA-Z0-9!#$%&\'*+/=?^_`{|}~-]+)*@(?:[a-zA-Z0-9](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?\.)+[a-zA-Z0-9](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?', value) else False,
> > > 				'comment'  : lambda: True if re.match('.+', value) else False,
> > > 			}[key.split('_')[0]]()
> > > 			result['valid'] = True if ghetto_switch else False
> > > 			self.results.append(result)
> > > 
> > Index: index.py
> > ===================================================================
> > 0a1,48
> > > import os
> > > from google.appengine.ext import webapp
> > > from google.appengine.ext.webapp import template
> > > from google.appengine.ext.webapp.util import run_wsgi_app
> > > from validator import Validator
> > > 
> > > class Index(webapp.RequestHandler):
> > > 	def __init__(self):
> > > 		self.results = []
> > > 
> > > 	def get(self):
> > > 		self.template()
> > > 
> > > 	def post(self):
> > > 		validator = Validator(self.request.params.items())
> > > 		self.results.extend(validator.results)
> > > 		self.template()
> > > 
> > > 	def template(self):
> > > 		template_values = {
> > > 			'results': self.results,
> > > 		}
> > > 		path = os.path.join(os.path.dirname(__file__), 'index.html')
> > > 		self.response.out.write(template.render(path, template_values))
> > > 
> > > class Is_valid(webapp.RequestHandler):
> > > 	def get(self):
> > > 		key = self.request.get('key')
> > > 		value = self.request.get('value')
> > > 		validator = Validator([(key, value)])
> > > #		self.response.headers['Content-Type'] = 'text/html'
> > > #		self.response.out.write('True' if validator.valid else 'False')
> > > 		self.response.headers['Content-Type'] = 'text/xml'
> > > 		self.response.out.write("<?xml version=\"1.0\" encoding=\"utf-8\"?>\n")
> > > 		self.response.out.write("<fields>\n")
> > > 		self.response.out.write("\t<field key=\"" + key + '" value="' + value + '" valid="' + str(validator.results[0]['valid']) + "\" />\n")
> > > 		self.response.out.write("</fields>\n")
> > > 
> > > application = webapp.WSGIApplication([('/is_valid', Is_valid),
> > >                                       ('/.*', Index)],
> > >                                      debug=True)
> > > 
> > > def main():
> > > 	run_wsgi_app(application)
> > > 
> > > if __name__ == "__main__":
> > > 	main()
> > > 
> > 
> > ***************************
> > * Changes in revision 3 
> > ***************************
> > 
> > ------------------------------------------------------------------------
> > r3 | estesox | 2009-03-23 18:47:18 -0500 (Mon, 23 Mar 2009) | 1 line
> > 
> > 
> > ------------------------------------------------------------------------
> > 
> > Index: TA1.txt
> > ===================================================================
> > 1c1
> > < -----
> > ---
> > > ----
> > 16,17c16,17
> > < Name:
> > < EID:
> > ---
> > > Name:Ji-Hoon Woo
> > > EID:jw3352
> > 19c19
> > < E-mail address:
> > ---
> > > E-mail address: estesox@gmail.com
> > 
> > ***************************
> > * Changes in revision 4 
> > ***************************
> > 
> > ------------------------------------------------------------------------
> > r4 | jeffery | 2009-03-23 18:52:26 -0500 (Mon, 23 Mar 2009) | 2 lines
> > 
> > Jeff's info for TA1.txt
> > 
> > ------------------------------------------------------------------------
> > 
> > Index: TA1.txt
> > ===================================================================
> > 31,32c31,32
> > < Name:
> > < EID:
> > ---
> > > Name: Jeffery Zhu
> > > EID: JZ995
> > 34c34
> > < E-mail address:
> > ---
> > > E-mail address: jz9901@mail.utexas.edu
> > 
> > ***************************
> > * Changes in revision 5 
> > ***************************
> > 
> > ------------------------------------------------------------------------
> > r5 | levi | 2009-03-23 19:11:42 -0500 (Mon, 23 Mar 2009) | 1 line
> > 
> > Copied first form so we have 3 now
> > ------------------------------------------------------------------------
> > 
> > Index: validator.pyc
> > ===================================================================
> > Cannot display: file marked as a binary type.
> > svn:mime-type = application/octet-stream
> > Index: index.py
> > ===================================================================
> > 7c7
> > < class Index(webapp.RequestHandler):
> > ---
> > > class Applicant(webapp.RequestHandler):
> > 23c23,61
> > < 		path = os.path.join(os.path.dirname(__file__), 'index.html')
> > ---
> > > 		path = os.path.join(os.path.dirname(__file__), 'applicant.html')
> > > 		self.response.out.write(template.render(path, template_values))
> > > 
> > > class Instructor(webapp.RequestHandler):
> > > 	def __init__(self):
> > > 		self.results = []
> > > 
> > > 	def get(self):
> > > 		self.template()
> > > 
> > > 	def post(self):
> > > 		validator = Validator(self.request.params.items())
> > > 		self.results.extend(validator.results)
> > > 		self.template()
> > > 
> > > 	def template(self):
> > > 		template_values = {
> > > 			'results': self.results,
> > > 		}
> > > 		path = os.path.join(os.path.dirname(__file__), 'instructor.html')
> > > 		self.response.out.write(template.render(path, template_values))
> > > 
> > > class Admin(webapp.RequestHandler):
> > > 	def __init__(self):
> > > 		self.results = []
> > > 
> > > 	def get(self):
> > > 		self.template()
> > > 
> > > 	def post(self):
> > > 		validator = Validator(self.request.params.items())
> > > 		self.results.extend(validator.results)
> > > 		self.template()
> > > 
> > > 	def template(self):
> > > 		template_values = {
> > > 			'results': self.results,
> > > 		}
> > > 		path = os.path.join(os.path.dirname(__file__), 'admin.html')
> > 40c78,80
> > <                                       ('/.*', Index)],
> > ---
> > >                                       ('/applicant', Applicant),
> > >                                       ('/instructor', Instructor),
> > >                                       ('/admin', Admin)],
> > 
> > ***************************
> > * Changes in revision 6 
> > ***************************
> > 
> > ------------------------------------------------------------------------
> > r6 | ting | 2009-03-23 19:13:04 -0500 (Mon, 23 Mar 2009) | 1 line
> > 
> > updated TA1.txt with template info
> > ------------------------------------------------------------------------
> > 
> > Index: TA1.txt
> > ===================================================================
> > 21c21
> > < Name:
> > ---
> > > Name: Levi Wiseman
> > 24c24
> > < E-mail address:
> > ---
> > > E-mail address: lwiseman@mail.utexas.edu
> > 26c26
> > < Name:
> > ---
> > > Name: Sariph Shrestha
> > 29c29
> > < E-mail address:
> > ---
> > > E-mail address: sariph.shrestha@gmail.com
> > 
> > ***************************
> > * Changes in revision 7 
> > ***************************
> > 
> > ------------------------------------------------------------------------
> > r7 | levi | 2009-03-23 19:13:37 -0500 (Mon, 23 Mar 2009) | 1 line
> > 
> > Copied first form so we have 3 now, needed to add first
> > ------------------------------------------------------------------------
> > 
> > Index: index.html
> > ===================================================================
> > 1,29d0
> > < <!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
> > < <html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
> > < 	<head>
> > < 		<title>C S 373: 54270: TA Matching</title>
> > < 
> > < 		<link rel="stylesheet" type="text/css" href="/style/reset.css" />
> > < 		<link rel="stylesheet" type="text/css" href="/style/main.css" />
> > < 
> > < 		<script type="text/javascript" src="/js/load.js"></script>
> > < 		<script type="text/javascript" src="/js/setHighlight.js"></script>
> > < 		<script type="text/javascript" src="/js/formInputHighlight.js"></script>
> > < 		<script type="text/javascript" src="/js/formTextareaHighlight.js"></script>
> > < 	</head>
> > < 
> > < 	<body>
> > < 		<form action="/submitted" method="post">
> > < 			<dl>
> > < 				<dt><label for="name_test">Name</label></dt><dd><input type="text" name="name_test" id="name_test" {% if results %}{% for result in results %}{% ifequal result.key 'name_test' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Type in your name, at least one char</span></dd>
> > < 				<dt><label for="password_test">Password</label></dt><dd><input type="password" name="password_test" id="password_test" {% if results %}{% for result in results %}{% ifequal result.key 'password_test' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Type in your password, at least six chars</span></dd>
> > < 				<dt><label for="address_test">Address</label></dt><dd><input type="text" name="address_test" id="address_test" {% if results %}{% for result in results %}{% ifequal result.key 'address_test' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Type in your address</span></dd>
> > < 				<dt><label for="phone_test">Phone</label></dt><dd><input type="text" name="phone_test" id="phone_test" {% if results %}{% for result in results %}{% ifequal result.key 'phone_test' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Type in your phone number</span></dd>
> > < 				<dt><label for="email_test">Email</label></dt><dd><input type="text" name="email_test" id="email_test" {% if results %}{% for result in results %}{% ifequal result.key 'email_test' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Type in your email address</span></dd>
> > < 				<dt><label for="comment_test">Comment</label></dt><dd><textarea name="comment_test" id="comment_test">{% if results %}{% for result in results %}{% ifequal result.key 'comment_test' %}{% if result.valid %}{{ result.value }}</textarea><span{% else %}</textarea><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}</textarea><span{% endif %}>Type in your comment</span></dd>
> > < 			</dl>
> > < 			<div><input type="submit" value="Submit" /></div>
> > < 		</form>
> > < 	</body>
> > < </html>
> > < 
> > Index: instructor.html
> > ===================================================================
> > 0a1,29
> > > <!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
> > > <html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
> > > 	<head>
> > > 		<title>C S 373: 54270: TA Matching: Instructor</title>
> > > 
> > > 		<link rel="stylesheet" type="text/css" href="/style/reset.css" />
> > > 		<link rel="stylesheet" type="text/css" href="/style/main.css" />
> > > 
> > > 		<script type="text/javascript" src="/js/load.js"></script>
> > > 		<script type="text/javascript" src="/js/setHighlight.js"></script>
> > > 		<script type="text/javascript" src="/js/formInputHighlight.js"></script>
> > > 		<script type="text/javascript" src="/js/formTextareaHighlight.js"></script>
> > > 	</head>
> > > 
> > > 	<body>
> > > 		<form action="/submitted" method="post">
> > > 			<dl>
> > > 				<dt><label for="name_test">Name</label></dt><dd><input type="text" name="name_test" id="name_test" {% if results %}{% for result in results %}{% ifequal result.key 'name_test' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Type in your name, at least one char</span></dd>
> > > 				<dt><label for="password_test">Password</label></dt><dd><input type="password" name="password_test" id="password_test" {% if results %}{% for result in results %}{% ifequal result.key 'password_test' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Type in your password, at least six chars</span></dd>
> > > 				<dt><label for="address_test">Address</label></dt><dd><input type="text" name="address_test" id="address_test" {% if results %}{% for result in results %}{% ifequal result.key 'address_test' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Type in your address</span></dd>
> > > 				<dt><label for="phone_test">Phone</label></dt><dd><input type="text" name="phone_test" id="phone_test" {% if results %}{% for result in results %}{% ifequal result.key 'phone_test' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Type in your phone number</span></dd>
> > > 				<dt><label for="email_test">Email</label></dt><dd><input type="text" name="email_test" id="email_test" {% if results %}{% for result in results %}{% ifequal result.key 'email_test' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Type in your email address</span></dd>
> > > 				<dt><label for="comment_test">Comment</label></dt><dd><textarea name="comment_test" id="comment_test">{% if results %}{% for result in results %}{% ifequal result.key 'comment_test' %}{% if result.valid %}{{ result.value }}</textarea><span{% else %}</textarea><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}</textarea><span{% endif %}>Type in your comment</span></dd>
> > > 			</dl>
> > > 			<div><input type="submit" value="Submit" /></div>
> > > 		</form>
> > > 	</body>
> > > </html>
> > > 
> > Index: admin.html
> > ===================================================================
> > 0a1,29
> > > <!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
> > > <html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
> > > 	<head>
> > > 		<title>C S 373: 54270: TA Matching: Admin</title>
> > > 
> > > 		<link rel="stylesheet" type="text/css" href="/style/reset.css" />
> > > 		<link rel="stylesheet" type="text/css" href="/style/main.css" />
> > > 
> > > 		<script type="text/javascript" src="/js/load.js"></script>
> > > 		<script type="text/javascript" src="/js/setHighlight.js"></script>
> > > 		<script type="text/javascript" src="/js/formInputHighlight.js"></script>
> > > 		<script type="text/javascript" src="/js/formTextareaHighlight.js"></script>
> > > 	</head>
> > > 
> > > 	<body>
> > > 		<form action="/submitted" method="post">
> > > 			<dl>
> > > 				<dt><label for="name_test">Name</label></dt><dd><input type="text" name="name_test" id="name_test" {% if results %}{% for result in results %}{% ifequal result.key 'name_test' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Type in your name, at least one char</span></dd>
> > > 				<dt><label for="password_test">Password</label></dt><dd><input type="password" name="password_test" id="password_test" {% if results %}{% for result in results %}{% ifequal result.key 'password_test' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Type in your password, at least six chars</span></dd>
> > > 				<dt><label for="address_test">Address</label></dt><dd><input type="text" name="address_test" id="address_test" {% if results %}{% for result in results %}{% ifequal result.key 'address_test' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Type in your address</span></dd>
> > > 				<dt><label for="phone_test">Phone</label></dt><dd><input type="text" name="phone_test" id="phone_test" {% if results %}{% for result in results %}{% ifequal result.key 'phone_test' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Type in your phone number</span></dd>
> > > 				<dt><label for="email_test">Email</label></dt><dd><input type="text" name="email_test" id="email_test" {% if results %}{% for result in results %}{% ifequal result.key 'email_test' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Type in your email address</span></dd>
> > > 				<dt><label for="comment_test">Comment</label></dt><dd><textarea name="comment_test" id="comment_test">{% if results %}{% for result in results %}{% ifequal result.key 'comment_test' %}{% if result.valid %}{{ result.value }}</textarea><span{% else %}</textarea><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}</textarea><span{% endif %}>Type in your comment</span></dd>
> > > 			</dl>
> > > 			<div><input type="submit" value="Submit" /></div>
> > > 		</form>
> > > 	</body>
> > > </html>
> > > 
> > Index: applicant.html
> > ===================================================================
> > 0a1,29
> > > <!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
> > > <html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
> > > 	<head>
> > > 		<title>C S 373: 54270: TA Matching: Applicant</title>
> > > 
> > > 		<link rel="stylesheet" type="text/css" href="/style/reset.css" />
> > > 		<link rel="stylesheet" type="text/css" href="/style/main.css" />
> > > 
> > > 		<script type="text/javascript" src="/js/load.js"></script>
> > > 		<script type="text/javascript" src="/js/setHighlight.js"></script>
> > > 		<script type="text/javascript" src="/js/formInputHighlight.js"></script>
> > > 		<script type="text/javascript" src="/js/formTextareaHighlight.js"></script>
> > > 	</head>
> > > 
> > > 	<body>
> > > 		<form action="/submitted" method="post">
> > > 			<dl>
> > > 				<dt><label for="name_test">Name</label></dt><dd><input type="text" name="name_test" id="name_test" {% if results %}{% for result in results %}{% ifequal result.key 'name_test' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Type in your name, at least one char</span></dd>
> > > 				<dt><label for="password_test">Password</label></dt><dd><input type="password" name="password_test" id="password_test" {% if results %}{% for result in results %}{% ifequal result.key 'password_test' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Type in your password, at least six chars</span></dd>
> > > 				<dt><label for="address_test">Address</label></dt><dd><input type="text" name="address_test" id="address_test" {% if results %}{% for result in results %}{% ifequal result.key 'address_test' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Type in your address</span></dd>
> > > 				<dt><label for="phone_test">Phone</label></dt><dd><input type="text" name="phone_test" id="phone_test" {% if results %}{% for result in results %}{% ifequal result.key 'phone_test' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Type in your phone number</span></dd>
> > > 				<dt><label for="email_test">Email</label></dt><dd><input type="text" name="email_test" id="email_test" {% if results %}{% for result in results %}{% ifequal result.key 'email_test' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Type in your email address</span></dd>
> > > 				<dt><label for="comment_test">Comment</label></dt><dd><textarea name="comment_test" id="comment_test">{% if results %}{% for result in results %}{% ifequal result.key 'comment_test' %}{% if result.valid %}{{ result.value }}</textarea><span{% else %}</textarea><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}</textarea><span{% endif %}>Type in your comment</span></dd>
> > > 			</dl>
> > > 			<div><input type="submit" value="Submit" /></div>
> > > 		</form>
> > > 	</body>
> > > </html>
> > > 
> > 
> > ***************************
> > * Changes in revision 8 
> > ***************************
> > 
> > ------------------------------------------------------------------------
> > r8 | levi | 2009-03-23 19:21:21 -0500 (Mon, 23 Mar 2009) | 1 line
> > 
> > Added index.html to link to forms
> > ------------------------------------------------------------------------
> > 
> > Index: index.html
> > ===================================================================
> > 0a1,13
> > > <!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
> > > <html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
> > > 	<head>
> > > 		<title>C S 373: 54270: TA Matching</title>
> > > 	</head>
> > > 
> > > 	<body>
> > > 		<div><a href="applicant">Applicants</a></div>
> > > 		<div><a href="instructor">Instructors</a></div>
> > > 		<div><a href="admin">Admins</a></div>
> > > 	</body>
> > > </html>
> > > 
> > 
> > ***************************
> > * Changes in revision 9 
> > ***************************
> > 
> > ------------------------------------------------------------------------
> > r9 | levi | 2009-03-23 19:30:27 -0500 (Mon, 23 Mar 2009) | 1 line
> > 
> > Added index.html to link to forms - fixed
> > ------------------------------------------------------------------------
> > 
> > Index: index.html
> > ===================================================================
> > 1,13d0
> > < <!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
> > < <html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
> > < 	<head>
> > < 		<title>C S 373: 54270: TA Matching</title>
> > < 	</head>
> > < 
> > < 	<body>
> > < 		<div><a href="applicant">Applicants</a></div>
> > < 		<div><a href="instructor">Instructors</a></div>
> > < 		<div><a href="admin">Admins</a></div>
> > < 	</body>
> > < </html>
> > < 
> > Index: app.yaml
> > ===================================================================
> > 12a13,15
> > > - url: /
> > >   static_dir: static_html
> > > 
> > Index: static_html/index.html
> > ===================================================================
> > 0a1,13
> > > <!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
> > > <html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
> > > 	<head>
> > > 		<title>C S 373: 54270: TA Matching</title>
> > > 	</head>
> > > 
> > > 	<body>
> > > 		<div><a href="applicant">Applicants</a></div>
> > > 		<div><a href="instructor">Instructors</a></div>
> > > 		<div><a href="admin">Admins</a></div>
> > > 	</body>
> > > </html>
> > > 
> > 
> > ***************************
> > * Changes in revision 10 
> > ***************************
> > 
> > ------------------------------------------------------------------------
> > r10 | levi | 2009-03-23 19:57:33 -0500 (Mon, 23 Mar 2009) | 1 line
> > 
> > Added support for future dynamic version of index.html
> > ------------------------------------------------------------------------
> > 
> > Index: app.yaml
> > ===================================================================
> > 13,15d12
> > < - url: /
> > <   static_dir: static_html
> > < 
> > Index: index.html
> > ===================================================================
> > 0a1,13
> > > <!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
> > > <html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
> > > 	<head>
> > > 		<title>C S 373: 54270: TA Matching</title>
> > > 	</head>
> > > 
> > > 	<body>
> > > 		<div><a href="applicant">Applicants</a></div>
> > > 		<div><a href="instructor">Instructors</a></div>
> > > 		<div><a href="admin">Admins</a></div>
> > > 	</body>
> > > </html>
> > > 
> > Index: applicant.html
> > ===================================================================
> > 18,19c18,20
> > < 				<dt><label for="name_test">Name</label></dt><dd><input type="text" name="name_test" id="name_test" {% if results %}{% for result in results %}{% ifequal result.key 'name_test' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Type in your name, at least one char</span></dd>
> > < 				<dt><label for="password_test">Password</label></dt><dd><input type="password" name="password_test" id="password_test" {% if results %}{% for result in results %}{% ifequal result.key 'password_test' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Type in your password, at least six chars</span></dd>
> > ---
> > > 				<dt><label for="phone_applicant">Phone</label></dt><dd><input type="text" name="phone_applicant" id="phone_applicant" {% if results %}{% for result in results %}{% ifequal result.key 'phone_applicant' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Type in your phone number</span></dd>
> > > 				<dt><label for="email_test">Email</label></dt><dd><input type="text" name="email_test" id="email_test" {% if results %}{% for result in results %}{% ifequal result.key 'email_test' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Type in your email address</span></dd>
> > > 				<dt><label for="date_test">Phone</label></dt><dd><input type="text" name="phone_test" id="phone_test" {% if results %}{% for result in results %}{% ifequal result.key 'phone_test' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Type in your phone number</span></dd>
> > 21d21
> > < 				<dt><label for="phone_test">Phone</label></dt><dd><input type="text" name="phone_test" id="phone_test" {% if results %}{% for result in results %}{% ifequal result.key 'phone_test' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Type in your phone number</span></dd>
> > Index: index.py
> > ===================================================================
> > 6a7,12
> > > class Index(webapp.RequestHandler):
> > > 	def get(self):
> > > 		template_values = {}
> > > 		path = os.path.join(os.path.dirname(__file__), 'index.html')
> > > 		self.response.out.write(template.render(path, template_values))
> > > 
> > 69,70d74
> > < #		self.response.headers['Content-Type'] = 'text/html'
> > < #		self.response.out.write('True' if validator.valid else 'False')
> > 80c84,85
> > <                                       ('/admin', Admin)],
> > ---
> > >                                       ('/admin', Admin),
> > >                                       ('/.*', Index)],
> > 
> > ***************************
> > * Changes in revision 11 
> > ***************************
> > 
> > ------------------------------------------------------------------------
> > r11 | levi | 2009-03-23 22:40:26 -0500 (Mon, 23 Mar 2009) | 1 line
> > 
> > Made applicant form
> > ------------------------------------------------------------------------
> > 
> > Index: applicant.html
> > ===================================================================
> > 16c16
> > < 		<form action="/submitted" method="post">
> > ---
> > > 		<form action="/applicant" method="post">
> > 18,23c18,29
> > < 				<dt><label for="phone_applicant">Phone</label></dt><dd><input type="text" name="phone_applicant" id="phone_applicant" {% if results %}{% for result in results %}{% ifequal result.key 'phone_applicant' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Type in your phone number</span></dd>
> > < 				<dt><label for="email_test">Email</label></dt><dd><input type="text" name="email_test" id="email_test" {% if results %}{% for result in results %}{% ifequal result.key 'email_test' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Type in your email address</span></dd>
> > < 				<dt><label for="date_test">Phone</label></dt><dd><input type="text" name="phone_test" id="phone_test" {% if results %}{% for result in results %}{% ifequal result.key 'phone_test' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Type in your phone number</span></dd>
> > < 				<dt><label for="address_test">Address</label></dt><dd><input type="text" name="address_test" id="address_test" {% if results %}{% for result in results %}{% ifequal result.key 'address_test' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Type in your address</span></dd>
> > < 				<dt><label for="email_test">Email</label></dt><dd><input type="text" name="email_test" id="email_test" {% if results %}{% for result in results %}{% ifequal result.key 'email_test' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Type in your email address</span></dd>
> > < 				<dt><label for="comment_test">Comment</label></dt><dd><textarea name="comment_test" id="comment_test">{% if results %}{% for result in results %}{% ifequal result.key 'comment_test' %}{% if result.valid %}{{ result.value }}</textarea><span{% else %}</textarea><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}</textarea><span{% endif %}>Type in your comment</span></dd>
> > ---
> > > 				<dt><label for="phone_applicant">Phone</label></dt><dd><input type="text" name="phone_applicant" id="phone_applicant" {% if results %}{% for result in results %}{% ifequal result.key 'phone_applicant' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>What is your phone number?</span></dd>
> > > 				<dt><label for="email_applicant">Email</label></dt><dd><input type="text" name="email_applicant" id="email_applicant" {% if results %}{% for result in results %}{% ifequal result.key 'email_applicant' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>What is your email address?</span></dd>
> > > 				<dt><label for="comment_major">Major field</label></dt><dd><input type="text" name="comment_major" id="comment_major" {% if results %}{% for result in results %}{% ifequal result.key 'comment_major' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>What is your major field?</span></dd>
> > > 				<dt><label for="comment_admission">Admission date</label></dt><dd><input type="text" name="comment_admission" id="comment_admission" {% if results %}{% for result in results %}{% ifequal result.key 'comment_admission' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>What is your admission date?</span></dd>
> > > 				<dt><label for="comment_phd">PhD or Masters</label></dt><dd><input type="text" name="comment_phd" id="comment_phd" {% if results %}{% for result in results %}{% ifequal result.key 'comment_phd' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Do you have a PhD or Masters? Type in "PhD" or "Masters".</span></dd>
> > > 				<dt><label for="comment_supervising">Supervising professor</label></dt><dd><input type="text" name="comment_supervising" id="comment_supervising" {% if results %}{% for result in results %}{% ifequal result.key 'comment_supervising' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Who is your supervising professor?</span></dd>
> > > 				<dt><label for="comment_citizen">Citizen or resident</label></dt><dd><input type="text" name="comment_citizen" id="comment_citizen" {% if results %}{% for result in results %}{% ifequal result.key 'comment_citizen' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Are you a citizen or resident? Type in "citizen" or "resident".</span></dd>
> > > 				<dt><label for="comment_native">Native English speaker</label></dt><dd><input type="text" name="comment_native" id="comment_native" {% if results %}{% for result in results %}{% ifequal result.key 'comment_native' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Are you a native English speaker? Type in "yes" or "no".</span></dd>
> > > 				<dt><label for="comment_ta">TA history</label></dt><dd><input type="text" name="comment_ta" id="comment_ta" {% if results %}{% for result in results %}{% ifequal result.key 'comment_ta' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Do you have a history being a TA? Type in "yes" or "no".</span></dd>
> > > 				<dt><label for="comment_programming">Programming languages</label></dt><dd><input type="text" name="comment_programming" id="comment_programming" {% if results %}{% for result in results %}{% ifequal result.key 'comment_programming' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>What programming languages do you know?</span></dd>
> > > 				<dt><label for="comment_area">Area of specialization</label></dt><dd><input type="text" name="comment_area" id="comment_area" {% if results %}{% for result in results %}{% ifequal result.key 'comment_area' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>What is your area of specialization?</span></dd>
> > > 				<dt><label for="comment_qualified">Course qualified to teach</label></dt><dd><input type="text" name="comment_qualified" id="comment_qualified" {% if results %}{% for result in results %}{% ifequal result.key 'comment_qualified' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>What course(s) are you qualified to teach?</span></dd>
> > 
> > ***************************
> > * Changes in revision 12 
> > ***************************
> > 
> > ------------------------------------------------------------------------
> > r12 | levi | 2009-03-23 22:55:05 -0500 (Mon, 23 Mar 2009) | 1 line
> > 
> > Added instructor form
> > ------------------------------------------------------------------------
> > 
> > Index: instructor.html
> > ===================================================================
> > 16c16
> > < 		<form action="/submitted" method="post">
> > ---
> > > 		<form action="instructor" method="post">
> > 18,23c18,21
> > < 				<dt><label for="name_test">Name</label></dt><dd><input type="text" name="name_test" id="name_test" {% if results %}{% for result in results %}{% ifequal result.key 'name_test' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Type in your name, at least one char</span></dd>
> > < 				<dt><label for="password_test">Password</label></dt><dd><input type="password" name="password_test" id="password_test" {% if results %}{% for result in results %}{% ifequal result.key 'password_test' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Type in your password, at least six chars</span></dd>
> > < 				<dt><label for="address_test">Address</label></dt><dd><input type="text" name="address_test" id="address_test" {% if results %}{% for result in results %}{% ifequal result.key 'address_test' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Type in your address</span></dd>
> > < 				<dt><label for="phone_test">Phone</label></dt><dd><input type="text" name="phone_test" id="phone_test" {% if results %}{% for result in results %}{% ifequal result.key 'phone_test' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Type in your phone number</span></dd>
> > < 				<dt><label for="email_test">Email</label></dt><dd><input type="text" name="email_test" id="email_test" {% if results %}{% for result in results %}{% ifequal result.key 'email_test' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Type in your email address</span></dd>
> > < 				<dt><label for="comment_test">Comment</label></dt><dd><textarea name="comment_test" id="comment_test">{% if results %}{% for result in results %}{% ifequal result.key 'comment_test' %}{% if result.valid %}{{ result.value }}</textarea><span{% else %}</textarea><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}</textarea><span{% endif %}>Type in your comment</span></dd>
> > ---
> > > 				<dt><label for="comment_wanted">Specific wanted students</label></dt><dd><input type="text" name="comment_wanted" id="comment_wanted" {% if results %}{% for result in results %}{% ifequal result.key 'comment_wanted' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Are there any students you specifically want?</span></dd>
> > > 				<dt><label for="comment_unwanted">Specific unwanted students</label></dt><dd><input type="text" name="comment_unwanted" id="comment_unwanted" {% if results %}{% for result in results %}{% ifequal result.key 'comment_unwanted' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Are there any students you specifically don't want?</span></dd>
> > > 				<dt><label for="comment_native">Native English speaker</label></dt><dd><input type="text" name="comment_native" id="comment_native" {% if results %}{% for result in results %}{% ifequal result.key 'comment_native' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Are you a native English speaker? Type in "yes" or "no".</span></dd>
> > > 				<dt><label for="comment_specialization">Background in a particular area of specialization</label></dt><dd><input type="text" name="comment_specialization" id="comment_specialization" {% if results %}{% for result in results %}{% ifequal result.key 'comment_specialization' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Background in a particular area of specialization?</span></dd>
> > Index: applicant.html
> > ===================================================================
> > 16c16
> > < 		<form action="/applicant" method="post">
> > ---
> > > 		<form action="applicant" method="post">
> > 
> > ***************************
> > * Changes in revision 13 
> > ***************************
> > 
> > ------------------------------------------------------------------------
> > r13 | levi | 2009-03-23 23:05:50 -0500 (Mon, 23 Mar 2009) | 1 line
> > 
> > Added admin form
> > ------------------------------------------------------------------------
> > 
> > Index: admin.html
> > ===================================================================
> > 16c16
> > < 		<form action="/submitted" method="post">
> > ---
> > > 		<form action="admin" method="post">
> > 18,23c18,22
> > < 				<dt><label for="name_test">Name</label></dt><dd><input type="text" name="name_test" id="name_test" {% if results %}{% for result in results %}{% ifequal result.key 'name_test' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Type in your name, at least one char</span></dd>
> > < 				<dt><label for="password_test">Password</label></dt><dd><input type="password" name="password_test" id="password_test" {% if results %}{% for result in results %}{% ifequal result.key 'password_test' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Type in your password, at least six chars</span></dd>
> > < 				<dt><label for="address_test">Address</label></dt><dd><input type="text" name="address_test" id="address_test" {% if results %}{% for result in results %}{% ifequal result.key 'address_test' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Type in your address</span></dd>
> > < 				<dt><label for="phone_test">Phone</label></dt><dd><input type="text" name="phone_test" id="phone_test" {% if results %}{% for result in results %}{% ifequal result.key 'phone_test' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Type in your phone number</span></dd>
> > < 				<dt><label for="email_test">Email</label></dt><dd><input type="text" name="email_test" id="email_test" {% if results %}{% for result in results %}{% ifequal result.key 'email_test' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Type in your email address</span></dd>
> > < 				<dt><label for="comment_test">Comment</label></dt><dd><textarea name="comment_test" id="comment_test">{% if results %}{% for result in results %}{% ifequal result.key 'comment_test' %}{% if result.valid %}{{ result.value }}</textarea><span{% else %}</textarea><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}</textarea><span{% endif %}>Type in your comment</span></dd>
> > ---
> > > 				<dt><label for="comment_class_name">Class number/name</label></dt><dd><input type="text" name="comment_class_name" id="comment_class_name" {% if results %}{% for result in results %}{% ifequal result.key 'comment_class_name' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>What is the class's number/name?</span></dd>
> > > 				<dt><label for="comment_inst_name">Instructor's name</label></dt><dd><input type="text" name="comment_inst_name" id="comment_inst_name" {% if results %}{% for result in results %}{% ifequal result.key 'comment_inst_name' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>What instructor will teach the class?</span></dd>
> > > 				<dt><label for="comment_exp_enrollment">Expected enrollment</label></dt><dd><input type="text" name="comment_exp_enrollment" id="comment_exp_enrollment" {% if results %}{% for result in results %}{% ifequal result.key 'comment_exp_enrollment' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>How many students are expected to enroll?</span></dd>
> > > 				<dt><label for="comment_num_ta_needed">Number of TAs needed</label></dt><dd><input type="text" name="comment_num_ta_needed" id="comment_num_ta_needed" {% if results %}{% for result in results %}{% ifequal result.key 'comment_num_ta_needed' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>How many TAs will be needed?</span></dd>
> > > 				<dt><label for="comment_num_ta_assigned">Number of TAs assigned</label></dt><dd><input type="text" name="comment_num_ta_assigned" id="comment_num_ta_assigned" {% if results %}{% for result in results %}{% ifequal result.key 'comment_num_ta_assigned' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>How many TAs are assigned?</span></dd>
> > 
> > ***************************
> > * Changes in revision 14 
> > ***************************
> > 
> > ------------------------------------------------------------------------
> > r14 | levi | 2009-03-24 00:21:47 -0500 (Tue, 24 Mar 2009) | 1 line
> > 
> > Cleaned up index.py
> > ------------------------------------------------------------------------
> > 
> > Index: index.py
> > ===================================================================
> > 9d8
> > < 		template_values = {}
> > 11c10
> > < 		self.response.out.write(template.render(path, template_values))
> > ---
> > > 		self.response.out.write(template.render(path, {}))
> > 
> > ***************************
> > * Changes in revision 15 
> > ***************************
> > 
> > ------------------------------------------------------------------------
> > r15 | estesox | 2009-03-24 16:31:06 -0500 (Tue, 24 Mar 2009) | 2 lines
> > 
> > Jeffery Zhu and Ji-Hoon Woo's Validations and Unit Tests
> > 
> > ------------------------------------------------------------------------
> > 
> > Index: TestValidation.py
> > ===================================================================
> > 0a1,148
> > > #!/usr/bin/env python
> > > 
> > > # ------------
> > > # TestValidation.py
> > > # ------------
> > > 
> > > import unittest
> > > import Validation
> > > 
> > > # ---------
> > > # TestAdmin
> > > # ---------
> > > 
> > > class TestAdmin (unittest.TestCase) :
> > >     # ------------
> > >     # phone_number
> > >     # ------------
> > >     def testPhoneNumber1 (self) :
> > >         self.assert_(not Validation.phone_number('abc'))
> > >     def testPhoneNumber2 (self) :
> > >         self.assert_(Validation.phone_number('123-4567'))
> > >     def testPhoneNumber3 (self) :
> > >         self.assert_(not Validation.phone_number('11-123-4567'))
> > >     def testPhoneNumber4 (self) :
> > >         self.assert_(Validation.phone_number('123-123-4567'))
> > >     def testPhoneNumber5 (self) :
> > >         self.assert_(not Validation.phone_number('123-45-67'))
> > >     def testPhoneNumber6 (self) :
> > >         self.assert_(not Validation.phone_number('123-4567-1'))
> > >     # ------------
> > >     # phone_number_ext
> > >     # ------------
> > >     def testphone_number_ext1 (self) :
> > >         self.assert_(not Validation.phone_number_ext('abc'))
> > >     def testphone_number_ext2 (self) :
> > >         self.assert_(Validation.phone_number_ext(''))
> > >     def testphone_number_ext3 (self) :
> > >         self.assert_(Validation.phone_number_ext('11'))
> > >     def testphone_number_ext4 (self) :
> > >         self.assert_(Validation.phone_number_ext('11111'))
> > >     # ------------
> > >     # email
> > >     # ------------
> > >     def testemail1 (self) :
> > >         self.assert_(not Validation.email('abc'))
> > >     def testemail2 (self) :
> > >         self.assert_(not Validation.email('abc@11..com'))
> > >     def testemail3 (self) :
> > >         self.assert_(not Validation.email('abc..aa@asdf.com'))
> > >     def testemail4 (self) :
> > >         self.assert_(Validation.email('abc_asdf@adsfasd.org'))
> > >     def testemail5 (self) :
> > >         self.assert_(Validation.email('asdfasdf@cs.asdf.edu'))
> > >     def testemail6 (self) :
> > >         self.assert_(Validation.email('abc@asdf.asdf.asdf.asdf.asdf.com'))
> > >     def testemail7 (self) :
> > >         self.assert_(not Validation.email('.asdf@sdfsdaf.com'))
> > >     def testemail8 (self) :
> > >         self.assert_(not Validation.email('abc.@asdfasd.com'))
> > >     def testemail9 (self) :
> > >         self.assert_(Validation.email('-abc@asdfasd.com'))
> > >     def testemail10 (self) :
> > >         self.assert_(Validation.email('abc.aaa@asdfasd.com'))
> > >     def testemail11 (self) :
> > >         self.assert_(not Validation.email('ab c@asdfasd.com'))
> > >     def testemail12 (self) :
> > >         self.assert_(not Validation.email('ab#$c@asdfasd.com'))
> > >     def testemail13 (self) :
> > >         self.assert_(not Validation.email('ab@c@asdfasd.com'))
> > >     # ------------
> > >     # date
> > >     # ------------
> > >     def testdate1 (self) :
> > >         self.assert_(not Validation.date('00-12-1999'))
> > >     def testdate2 (self) :
> > >         self.assert_(not Validation.date('02-30-1999'))
> > >     def testdate3 (self) :
> > >         self.assert_(not Validation.date('13-12-1999'))
> > >     def testdate4 (self) :
> > >         self.assert_(not Validation.date('01-00-1999'))
> > >     def testdate5 (self) :
> > >         self.assert_(Validation.date('02-28-1999'))
> > >     def testdate6 (self) :
> > >         self.assert_(not Validation.date('00-42-1999'))
> > >     def testdate7 (self) :
> > >         self.assert_(not Validation.date('00-12-99'))
> > >     def testdate8 (self) :
> > >         self.assert_(not Validation.date('00-00-12-1999'))
> > >     def testdate9 (self) :
> > >         self.assert_(not Validation.date('01-1-1999'))
> > >     def testdate10 (self) :
> > >         self.assert_(not Validation.date('5-12-1999'))
> > >     def testdate11 (self) :
> > >         self.assert_(not Validation.date('04-31-1999'))
> > >     def testdate12 (self) :
> > >         self.assert_(Validation.date('04-30-1999'))
> > >     # ------------
> > >     # name
> > >     # ------------
> > >     def testname1 (self) :
> > >         self.assert_(not Validation.name('aaa'))
> > >     def testname2 (self) :
> > >         self.assert_(Validation.name('Aaa'))
> > >     def testname3 (self) :
> > >         self.assert_(Validation.name('Aaa-dd'))
> > >     def testname4 (self) :
> > >         self.assert_(not Validation.name('8aaa'))
> > >     def testname5 (self) :
> > >         self.assert_(not Validation.name(''))
> > >     def testname6 (self) :
> > >         self.assert_(not Validation.name('Baa--'))
> > >     def testname7 (self) :
> > >         self.assert_(not Validation.name('Aa$'))
> > >     def testname8 (self) :
> > >         self.assert_(not Validation.name('Ba a'))
> > >     # ------------
> > >     # class_number
> > >     # ------------
> > >     def testclass_number1 (self) :
> > >         self.assert_(not Validation.class_number('aaa'))
> > >     def testclass_number2 (self) :
> > >         self.assert_(not Validation.class_number('cs'))
> > >     def testclass_number3 (self) :
> > >         self.assert_(not Validation.class_number('cs1'))
> > >     def testclass_number4 (self) :
> > >         self.assert_(Validation.class_number('cs987'))
> > >     def testclass_number5 (self) :
> > >         self.assert_(Validation.class_number('CS987'))
> > >     def testclass_number6 (self) :
> > >         self.assert_(not Validation.class_number('cs*76'))
> > >     def testclass_number7 (self) :
> > >         self.assert_(not Validation.class_number('Cs333'))
> > >     def testclass_number8 (self) :
> > >         self.assert_(not Validation.class_number('cS123'))
> > >     def testclass_number9 (self) :
> > >         self.assert_(not Validation.class_number('ee315'))
> > >     # ------------
> > >     # number
> > >     # ------------
> > >     def testnumber1 (self) :
> > >         self.assert_(not Validation.number('aaa'))
> > >     def testnumber2 (self) :
> > >         self.assert_(not Validation.number(''))
> > >     def testnumber3 (self) :
> > >         self.assert_(Validation.number('12312323'))
> > > 
> > > if __name__ == "__main__" :
> > >     unittest.main()
> > Index: Validation.py
> > ===================================================================
> > 0a1,50
> > > #!/usr/bin/env python
> > > 
> > > # -------------
> > > # Validation.py
> > > # -------------
> > > 
> > > import re
> > > 
> > > # ------------
> > > # phone_number
> > > # ------------
> > > def phone_number (s) :
> > >         return not re.search('^(\d\d\d-)?\d\d\d-\d\d\d\d$', s) is None
> > > # ----------------
> > > # phone_number_ext
> > > # ----------------
> > > def phone_number_ext (s) :
> > >         return not re.search('^(\d)*$',s) is None
> > > # ------------
> > > # email
> > > # ------------
> > > def email (s) :
> > >         return not re.search('(^(\w|\-|\_)+((\.)?(\w|\-|\_)+)*)\@(\w)+(\-|\w)*(\w)+((\.)?(\w)+(\-|\w)*(\w)+)*\.(com|net|org|gov|edu)$', s) is None
> > > # ------------
> > > # date
> > > # ------------
> > > def date (s) :
> > >         result = False
> > >         #Feb
> > >         if(not re.search('^(02)\-((0[1-9])|((1|2)(\d)))\-[0-9][0-9][0-9][0-9]$',s) is None): return True
> > >         #Jan, Mar, May...
> > >         if(not re.search('^(01|03|05|07|08|10|12)\-(30|31|(((0[1-9])|((1|2)(\d)))))\-[0-9][0-9][0-9][0-9]$',s) is None): return True
> > >         #Apr, Jun, Sep, Nov
> > >         if(not re.search('^(04|06|09|11)\-(30|(((0[1-9])|((1|2)(\d)))))\-[0-9][0-9][0-9][0-9]$',s) is None): return True
> > >         return False
> > > # ------------
> > > # name
> > > # ------------
> > > def name (s) :
> > >         return not re.search('^[A-Z][a-zA-Z\'\-]*[a-zA-Z]$',s) is None
> > > # ------------
> > > # class_number
> > > # ------------
> > > def class_number (s) :
> > >         return not re.search('(^cs\d\d\d)|(^CS\d\d\d)',s) is None
> > > # ------------
> > > # number
> > > # ------------
> > > def number (s) :
> > >         return not re.search('^(\d)+$',s) is None
> > 
> > ***************************
> > * Changes in revision 16 
> > ***************************
> > 
> > ------------------------------------------------------------------------
> > r16 | ting | 2009-03-25 14:13:28 -0500 (Wed, 25 Mar 2009) | 1 line
> > 
> > modify TA1.txt to include section for own contributions.
> > ------------------------------------------------------------------------
> > 
> > Index: TA1.txt
> > ===================================================================
> > 42a43,48
> > > ------------------------------
> > > My Contribution to the Project
> > > ------------------------------
> > > 
> > > 
> > > 
> > 46a53,61
> > > Name: HanPing Ting
> > > 
> > > Name: Ji-Hoon Woo
> > > 
> > > Name: Levi Wiseman
> > > 
> > > Name: Sariph Shrestha
> > > 
> > > Name: Jeffery Zhu
> > 
> > ***************************
> > * Changes in revision 17 
> > ***************************
> > 
> > ------------------------------------------------------------------------
> > r17 | jeffery | 2009-03-25 14:16:54 -0500 (Wed, 25 Mar 2009) | 5 lines
> > 
> > Made applicant.html more readable.
> > Started using Validation.py's functions in validator.py
> > 
> > Jeffery Zhu
> > 
> > ------------------------------------------------------------------------
> > 
> > Index: validator.py
> > ===================================================================
> > 1a2
> > > import Validation
> > 17c18
> > < 				'name'     : lambda: True if re.match('.+', value) else False,
> > ---
> > > 				'name'     : Validation.name(value),
> > 20c21
> > < 				'phone'    : lambda: True if re.match('.+', value) else False,
> > ---
> > > 				'phone'    : Validation.phone_number(value),
> > 22c23
> > < 				'email'    : lambda: True if re.match('[a-zA-Z0-9!#$%&\'*+/=?^_`{|}~-]+(?:\.[a-zA-Z0-9!#$%&\'*+/=?^_`{|}~-]+)*@(?:[a-zA-Z0-9](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?\.)+[a-zA-Z0-9](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?', value) else False,
> > ---
> > > 				'email'    : Validation.email(value),
> > 27a29,44
> > > #		for key, value in form_data:
> > > #			result = {}
> > > #			result['key'] = key
> > > #			result['value'] = value
> > > #			ghetto_switch = {
> > > #				'name'     : lambda: True if re.match('.+', value) else False,
> > > #				'password' : lambda: True if re.match('.{6,30}', value) else False,
> > > #				'address'  : lambda: True if re.match('.+', value) else False,
> > > #				'phone'    : lambda: True if re.match('.+', value) else False,
> > > #				# lol, this is ALMOST to RFC 2822, doesn't handle double quoted sections before '@' or square bracket Internet address after, perfect bug op
> > > #				'email'    : lambda: True if re.match('[a-zA-Z0-9!#$%&\'*+/=?^_`{|}~-]+(?:\.[a-zA-Z0-9!#$%&\'*+/=?^_`{|}~-]+)*@(?:[a-zA-Z0-9](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?\.)+[a-zA-Z0-9](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?', value) else False,
> > > #				'comment'  : lambda: True if re.match('.+', value) else False,
> > > #			}[key.split('_')[0]]()
> > > #			result['valid'] = True if ghetto_switch else False
> > > #			self.results.append(result)
> > > 
> > Index: applicant.html
> > ===================================================================
> > 18,29c18,77
> > < 				<dt><label for="phone_applicant">Phone</label></dt><dd><input type="text" name="phone_applicant" id="phone_applicant" {% if results %}{% for result in results %}{% ifequal result.key 'phone_applicant' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>What is your phone number?</span></dd>
> > < 				<dt><label for="email_applicant">Email</label></dt><dd><input type="text" name="email_applicant" id="email_applicant" {% if results %}{% for result in results %}{% ifequal result.key 'email_applicant' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>What is your email address?</span></dd>
> > < 				<dt><label for="comment_major">Major field</label></dt><dd><input type="text" name="comment_major" id="comment_major" {% if results %}{% for result in results %}{% ifequal result.key 'comment_major' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>What is your major field?</span></dd>
> > < 				<dt><label for="comment_admission">Admission date</label></dt><dd><input type="text" name="comment_admission" id="comment_admission" {% if results %}{% for result in results %}{% ifequal result.key 'comment_admission' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>What is your admission date?</span></dd>
> > < 				<dt><label for="comment_phd">PhD or Masters</label></dt><dd><input type="text" name="comment_phd" id="comment_phd" {% if results %}{% for result in results %}{% ifequal result.key 'comment_phd' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Do you have a PhD or Masters? Type in "PhD" or "Masters".</span></dd>
> > < 				<dt><label for="comment_supervising">Supervising professor</label></dt><dd><input type="text" name="comment_supervising" id="comment_supervising" {% if results %}{% for result in results %}{% ifequal result.key 'comment_supervising' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Who is your supervising professor?</span></dd>
> > < 				<dt><label for="comment_citizen">Citizen or resident</label></dt><dd><input type="text" name="comment_citizen" id="comment_citizen" {% if results %}{% for result in results %}{% ifequal result.key 'comment_citizen' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Are you a citizen or resident? Type in "citizen" or "resident".</span></dd>
> > < 				<dt><label for="comment_native">Native English speaker</label></dt><dd><input type="text" name="comment_native" id="comment_native" {% if results %}{% for result in results %}{% ifequal result.key 'comment_native' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Are you a native English speaker? Type in "yes" or "no".</span></dd>
> > < 				<dt><label for="comment_ta">TA history</label></dt><dd><input type="text" name="comment_ta" id="comment_ta" {% if results %}{% for result in results %}{% ifequal result.key 'comment_ta' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Do you have a history being a TA? Type in "yes" or "no".</span></dd>
> > < 				<dt><label for="comment_programming">Programming languages</label></dt><dd><input type="text" name="comment_programming" id="comment_programming" {% if results %}{% for result in results %}{% ifequal result.key 'comment_programming' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>What programming languages do you know?</span></dd>
> > < 				<dt><label for="comment_area">Area of specialization</label></dt><dd><input type="text" name="comment_area" id="comment_area" {% if results %}{% for result in results %}{% ifequal result.key 'comment_area' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>What is your area of specialization?</span></dd>
> > < 				<dt><label for="comment_qualified">Course qualified to teach</label></dt><dd><input type="text" name="comment_qualified" id="comment_qualified" {% if results %}{% for result in results %}{% ifequal result.key 'comment_qualified' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>What course(s) are you qualified to teach?</span></dd>
> > ---
> > > 				<dt><label for="phone_applicant">Phone</label></dt><dd>
> > > 				<input type="text" name="phone_applicant" id="phone_applicant" {% if results %}{% for result in results %}{% ifequal result.key 'phone_applicant' %}{% if result.valid %}value="{{ result.value }}" />
> > > 				<span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><
> > > 				span{% endif %}>What is your phone number?</span></dd>
> > > 
> > > 				<dt><label for="email_applicant">Email</label></dt><dd>
> > > 				<input type="text" name="email_applicant" id="email_applicant" {% if results %}{% for result in results %}{% ifequal result.key 'email_applicant' %}{% if result.valid %}value="{{ result.value }}" />
> > > 				<span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/>
> > > 				<span{% endif %}>What is your email address?</span></dd>
> > > 
> > > 				<dt><label for="comment_major">Major field</label></dt><dd>
> > > 				<input type="text" name="comment_major" id="comment_major" {% if results %}{% for result in results %}{% ifequal result.key 'comment_major' %}{% if result.valid %}value="{{ result.value }}" />
> > > 				<span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/>
> > > 				<span{% endif %}>What is your major field?</span></dd>
> > > 
> > > 				<dt><label for="comment_admission">Admission date</label></dt>
> > > 				<dd><input type="text" name="comment_admission" id="comment_admission" {% if results %}{% for result in results %}{% ifequal result.key 'comment_admission' %}{% if result.valid %}value="{{ result.value }}" />
> > > 				<span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/>
> > > 				<span{% endif %}>What is your admission date?</span></dd>
> > > 
> > > 				<dt><label for="comment_phd">PhD or Masters</label></dt>
> > > 				<dd><input type="text" name="comment_phd" id="comment_phd" {% if results %}{% for result in results %}{% ifequal result.key 'comment_phd' %}{% if result.valid %}value="{{ result.value }}" />
> > > 				<span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/>
> > > 				<span{% endif %}>Do you have a PhD or Masters? Type in "PhD" or "Masters".</span></dd>
> > > 
> > > 				<dt><label for="comment_supervising">Supervising professor</label></dt>
> > > 				<dd><input type="text" name="comment_supervising" id="comment_supervising" {% if results %}{% for result in results %}{% ifequal result.key 'comment_supervising' %}{% if result.valid %}value="{{ result.value }}" />
> > > 				<span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/>
> > > 				<span{% endif %}>Who is your supervising professor?</span></dd>
> > > 
> > > 				<dt><label for="comment_citizen">Citizen or resident</label></dt>
> > > 				<dd><input type="text" name="comment_citizen" id="comment_citizen" {% if results %}{% for result in results %}{% ifequal result.key 'comment_citizen' %}{% if result.valid %}value="{{ result.value }}" />
> > > 				<span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/>
> > > 				<span{% endif %}>Are you a citizen or resident? Type in "citizen" or "resident".</span></dd>
> > > 
> > > 				<dt><label for="comment_native">Native English speaker</label></dt>
> > > 				<dd><input type="text" name="comment_native" id="comment_native" {% if results %}{% for result in results %}{% ifequal result.key 'comment_native' %}{% if result.valid %}value="{{ result.value }}" />
> > > 				<span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/>
> > > 				<span{% endif %}>Are you a native English speaker? Type in "yes" or "no".</span></dd>
> > > 
> > > 				<dt><label for="comment_ta">TA history</label></dt>
> > > 				<dd><input type="text" name="comment_ta" id="comment_ta" {% if results %}{% for result in results %}{% ifequal result.key 'comment_ta' %}{% if result.valid %}value="{{ result.value }}" />
> > > 				<span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/>
> > > 				<span{% endif %}>Do you have a history being a TA? Type in "yes" or "no".</span></dd>
> > > 
> > > 				<dt><label for="comment_programming">Programming languages</label></dt>
> > > 				<dd><input type="text" name="comment_programming" id="comment_programming" {% if results %}{% for result in results %}{% ifequal result.key 'comment_programming' %}{% if result.valid %}value="{{ result.value }}" />
> > > 				<span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/>
> > > 				<span{% endif %}>What programming languages do you know?</span></dd>
> > > 
> > > 				<dt><label for="comment_area">Area of specialization</label></dt>
> > > 				<dd><input type="text" name="comment_area" id="comment_area" {% if results %}{% for result in results %}{% ifequal result.key 'comment_area' %}{% if result.valid %}value="{{ result.value }}" />
> > > 				<span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/>
> > > 				<span{% endif %}>What is your area of specialization?</span></dd>
> > > 
> > > 				<dt><label for="comment_qualified">Course qualified to teach</label></dt>
> > > 				<dd><input type="text" name="comment_qualified" id="comment_qualified" {% if results %}{% for result in results %}{% ifequal result.key 'comment_qualified' %}{% if result.valid %}value="{{ result.value }}" />
> > > 				<span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/>
> > > 				<span{% endif %}>What course(s) are you qualified to teach?</span></dd>
> > > 
> > 
> > ***************************
> > * Changes in revision 18 
> > ***************************
> > 
> > ------------------------------------------------------------------------
> > r18 | jeffery | 2009-03-25 14:18:26 -0500 (Wed, 25 Mar 2009) | 2 lines
> > 
> > Minor fix. Jeffery Zhu
> > 
> > ------------------------------------------------------------------------
> > 
> > Index: applicant.html
> > ===================================================================
> > 20,21c20,21
> > < 				<span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><
> > < 				span{% endif %}>What is your phone number?</span></dd>
> > ---
> > > 				<span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/>
> > > 				<span{% endif %}>What is your phone number?</span></dd>
> > 
> > ***************************
> > * Changes in revision 19 
> > ***************************
> > 
> > ------------------------------------------------------------------------
> > r19 | jeffery | 2009-03-25 14:37:23 -0500 (Wed, 25 Mar 2009) | 7 lines
> > 
> > Made instructor.html and admin.html more readable.
> > 
> > Added all fields to validator.py and used Validation.py functions to perform validation.
> > 
> > Jeffery Zhu
> > 
> > 
> > ------------------------------------------------------------------------
> > 
> > Index: instructor.html
> > ===================================================================
> > 18,21c18,36
> > < 				<dt><label for="comment_wanted">Specific wanted students</label></dt><dd><input type="text" name="comment_wanted" id="comment_wanted" {% if results %}{% for result in results %}{% ifequal result.key 'comment_wanted' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Are there any students you specifically want?</span></dd>
> > < 				<dt><label for="comment_unwanted">Specific unwanted students</label></dt><dd><input type="text" name="comment_unwanted" id="comment_unwanted" {% if results %}{% for result in results %}{% ifequal result.key 'comment_unwanted' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Are there any students you specifically don't want?</span></dd>
> > < 				<dt><label for="comment_native">Native English speaker</label></dt><dd><input type="text" name="comment_native" id="comment_native" {% if results %}{% for result in results %}{% ifequal result.key 'comment_native' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Are you a native English speaker? Type in "yes" or "no".</span></dd>
> > < 				<dt><label for="comment_specialization">Background in a particular area of specialization</label></dt><dd><input type="text" name="comment_specialization" id="comment_specialization" {% if results %}{% for result in results %}{% ifequal result.key 'comment_specialization' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Background in a particular area of specialization?</span></dd>
> > ---
> > > 				<dt><label for="comment_wanted">Specific wanted students</label></dt>
> > > 				<dd><input type="text" name="comment_wanted" id="comment_wanted" {% if results %}{% for result in results %}{% ifequal result.key 'comment_wanted' %}{% if result.valid %}value="{{ result.value }}" />
> > > 				<span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/>
> > > 				<span{% endif %}>Are there any students you specifically want?</span></dd>
> > > 
> > > 				<dt><label for="comment_unwanted">Specific unwanted students</label></dt>
> > > 				<dd><input type="text" name="comment_unwanted" id="comment_unwanted" {% if results %}{% for result in results %}{% ifequal result.key 'comment_unwanted' %}{% if result.valid %}value="{{ result.value }}" />
> > > 				<span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/>
> > > 				<span{% endif %}>Are there any students you specifically don't want?</span></dd>
> > > 
> > > 				<dt><label for="comment_native">Native English speaker</label></dt>
> > > 				<dd><input type="text" name="comment_native" id="comment_native" {% if results %}{% for result in results %}{% ifequal result.key 'comment_native' %}{% if result.valid %}value="{{ result.value }}" />
> > > 				<span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/>
> > > 				<span{% endif %}>Are you a native English speaker? Type in "yes" or "no".</span></dd>
> > > 
> > > 				<dt><label for="comment_specialization">Background in a particular area of specialization</label>
> > > 				</dt><dd><input type="text" name="comment_specialization" id="comment_specialization" {% if results %}{% for result in results %}{% ifequal result.key 'comment_specialization' %}{% if result.valid %}value="{{ result.value }}" />
> > > 				<span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/>
> > > 				<span{% endif %}>Background in a particular area of specialization?</span></dd>
> > Index: Validation.py
> > ===================================================================
> > 50a51,56
> > > 
> > > # ------------
> > > # comment
> > > # ------------
> > > def comment (s) :
> > >         return not re.search('.+',s) is None
> > \ No newline at end of file
> > Index: index.html
> > ===================================================================
> > 7a8
> > > 		<div>TA Assignment Page for Applicants and Administration
> > Index: admin.html
> > ===================================================================
> > 18,22c18,41
> > < 				<dt><label for="comment_class_name">Class number/name</label></dt><dd><input type="text" name="comment_class_name" id="comment_class_name" {% if results %}{% for result in results %}{% ifequal result.key 'comment_class_name' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>What is the class's number/name?</span></dd>
> > < 				<dt><label for="comment_inst_name">Instructor's name</label></dt><dd><input type="text" name="comment_inst_name" id="comment_inst_name" {% if results %}{% for result in results %}{% ifequal result.key 'comment_inst_name' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>What instructor will teach the class?</span></dd>
> > < 				<dt><label for="comment_exp_enrollment">Expected enrollment</label></dt><dd><input type="text" name="comment_exp_enrollment" id="comment_exp_enrollment" {% if results %}{% for result in results %}{% ifequal result.key 'comment_exp_enrollment' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>How many students are expected to enroll?</span></dd>
> > < 				<dt><label for="comment_num_ta_needed">Number of TAs needed</label></dt><dd><input type="text" name="comment_num_ta_needed" id="comment_num_ta_needed" {% if results %}{% for result in results %}{% ifequal result.key 'comment_num_ta_needed' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>How many TAs will be needed?</span></dd>
> > < 				<dt><label for="comment_num_ta_assigned">Number of TAs assigned</label></dt><dd><input type="text" name="comment_num_ta_assigned" id="comment_num_ta_assigned" {% if results %}{% for result in results %}{% ifequal result.key 'comment_num_ta_assigned' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>How many TAs are assigned?</span></dd>
> > ---
> > > 				<dt><label for="comment_class_name">Class number/name</label></dt>
> > > 				<dd><input type="text" name="comment_class_name" id="comment_class_name" {% if results %}{% for result in results %}{% ifequal result.key 'comment_class_name' %}{% if result.valid %}value="{{ result.value }}" />
> > > 				<span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/>
> > > 				<span{% endif %}>What is the class's number/name?</span></dd>
> > > 
> > > 				<dt><label for="comment_inst_name">Instructor's name</label></dt>
> > > 				<dd><input type="text" name="comment_inst_name" id="comment_inst_name" {% if results %}{% for result in results %}{% ifequal result.key 'comment_inst_name' %}{% if result.valid %}value="{{ result.value }}" />
> > > 				<span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/>
> > > 				<span{% endif %}>What instructor will teach the class?</span></dd>
> > > 
> > > 				<dt><label for="comment_exp_enrollment">Expected enrollment</label></dt>
> > > 				<dd><input type="text" name="comment_exp_enrollment" id="comment_exp_enrollment" {% if results %}{% for result in results %}{% ifequal result.key 'comment_exp_enrollment' %}{% if result.valid %}value="{{ result.value }}" />
> > > 				<span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/>
> > > 				<span{% endif %}>How many students are expected to enroll?</span></dd>
> > > 
> > > 				<dt><label for="comment_num_ta_needed">Number of TAs needed</label></dt>
> > > 				<dd><input type="text" name="comment_num_ta_needed" id="comment_num_ta_needed" {% if results %}{% for result in results %}{% ifequal result.key 'comment_num_ta_needed' %}{% if result.valid %}value="{{ result.value }}" />
> > > 				<span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/>
> > > 				<span{% endif %}>How many TAs will be needed?</span></dd>
> > > 
> > > 				<dt><label for="comment_num_ta_assigned">Number of TAs assigned</label></dt>
> > > 				<dd><input type="text" name="comment_num_ta_assigned" id="comment_num_ta_assigned" {% if results %}{% for result in results %}{% ifequal result.key 'comment_num_ta_assigned' %}{% if result.valid %}value="{{ result.value }}" />
> > > 				<span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/>
> > > 				<span{% endif %}>How many TAs are assigned?</span></dd>
> > Index: validator.py
> > ===================================================================
> > 18,21c18,21
> > < 				'name'     : Validation.name(value),
> > < 				'password' : lambda: True if re.match('.{6,30}', value) else False,
> > < 				'address'  : lambda: True if re.match('.+', value) else False,
> > < 				'phone'    : Validation.phone_number(value),
> > ---
> > > 				#'name'     : Validation.name(value),
> > > 				#'password' : lambda: True if re.match('.{6,30}', value) else False,
> > > 				#'address'  : lambda: True if re.match('.+', value) else False,
> > > 				#'phone'    : Validation.phone_number(value),
> > 23,24c23,53
> > < 				'email'    : Validation.email(value),
> > < 				'comment'  : lambda: True if re.match('.+', value) else False,
> > ---
> > > 				#'email'    : Validation.email(value),
> > > 				#'comment'  : lambda: True if re.match('.+', value) else False,
> > > 				
> > > 				#TA Applicant switches
> > > 				'phone_applicant'		: Validation.phone_number(value)
> > > 				'email_applicant'		: Validation.email(value)
> > > 				'comment_major'			: Validation.comment(value)
> > > 				'comment_admission'		: Validation.comment(value)
> > > 				'comment_phd'			: Validation.comment(value)
> > > 				'comment_supervising'		: Validation.comment(value)
> > > 				'comment_citizen'		: Validation.comment(value)
> > > 				'comment_native'		: Validation.comment(value)
> > > 				'comment_ta'			: Validation.comment(value)
> > > 				'comment_programming'		: Validation.comment(value)
> > > 				'comment_area'			: Validation.comment(value)
> > > 				'comment_qualified'		: Validation.comment(value)
> > > 			
> > > 				#Instructor Swicthes
> > > 				'comment_wanted'		: Validation.comment(value)
> > > 				'comment_unwanted'		: Validation.comment(value)
> > > 				'comment_native'		: Validation.comment(value)
> > > 				'comment_specialization'	: Validation.comment(value)
> > > 				#Admin switches	
> > > 				
> > > 				'comment_class_name'		: Validation.comment(value)
> > > 				'comment_inst_name'		: Validation.comment(value)
> > > 				'comment_exp_enrollment'	: Validation.comment(value)
> > > 				'comment_num_ta_needed'		: Validation.comment(value)
> > > 				'comment_num_ta_assigned'	: Validation.comment(value)
> > > 				
> > > 				
> > 
> > ***************************
> > * Changes in revision 20 
> > ***************************
> > 
> > ------------------------------------------------------------------------
> > r20 | ting | 2009-03-25 16:22:37 -0500 (Wed, 25 Mar 2009) | 1 line
> > 
> > added area code unit test
> > ------------------------------------------------------------------------
> > 
> > Index: TestValidation.py
> > ===================================================================
> > 29a30,31
> > > 	def testPhoneNumber7 (self) :
> > > 		self.assert_(Validation.phone_number('(000)123-4567'))
> > Index: validator.py
> > ===================================================================
> > 
> > ***************************
> > * Changes in revision 21 
> > ***************************
> > 
> > ------------------------------------------------------------------------
> > r21 | ting | 2009-03-25 16:41:21 -0500 (Wed, 25 Mar 2009) | 1 line
> > 
> > modified html files to use relative pathing vs. absolute pathing
> > ------------------------------------------------------------------------
> > 
> > Index: instructor.html
> > ===================================================================
> > 6,7c6,7
> > < 		<link rel="stylesheet" type="text/css" href="/style/reset.css" />
> > < 		<link rel="stylesheet" type="text/css" href="/style/main.css" />
> > ---
> > > 		<link rel="stylesheet" type="text/css" href="style/reset.css" />
> > > 		<link rel="stylesheet" type="text/css" href="style/main.css" />
> > 9,12c9,12
> > < 		<script type="text/javascript" src="/js/load.js"></script>
> > < 		<script type="text/javascript" src="/js/setHighlight.js"></script>
> > < 		<script type="text/javascript" src="/js/formInputHighlight.js"></script>
> > < 		<script type="text/javascript" src="/js/formTextareaHighlight.js"></script>
> > ---
> > > 		<script type="text/javascript" src="js/load.js"></script>
> > > 		<script type="text/javascript" src="js/setHighlight.js"></script>
> > > 		<script type="text/javascript" src="js/formInputHighlight.js"></script>
> > > 		<script type="text/javascript" src="js/formTextareaHighlight.js"></script>
> > Index: admin.html
> > ===================================================================
> > 6,7c6,7
> > < 		<link rel="stylesheet" type="text/css" href="/style/reset.css" />
> > < 		<link rel="stylesheet" type="text/css" href="/style/main.css" />
> > ---
> > > 		<link rel="stylesheet" type="text/css" href="style/reset.css" />
> > > 		<link rel="stylesheet" type="text/css" href="style/main.css" />
> > 9,12c9,12
> > < 		<script type="text/javascript" src="/js/load.js"></script>
> > < 		<script type="text/javascript" src="/js/setHighlight.js"></script>
> > < 		<script type="text/javascript" src="/js/formInputHighlight.js"></script>
> > < 		<script type="text/javascript" src="/js/formTextareaHighlight.js"></script>
> > ---
> > > 		<script type="text/javascript" src="js/load.js"></script>
> > > 		<script type="text/javascript" src="js/setHighlight.js"></script>
> > > 		<script type="text/javascript" src="js/formInputHighlight.js"></script>
> > > 		<script type="text/javascript" src="js/formTextareaHighlight.js"></script>
> > Index: applicant.html
> > ===================================================================
> > 6,7c6,7
> > < 		<link rel="stylesheet" type="text/css" href="/style/reset.css" />
> > < 		<link rel="stylesheet" type="text/css" href="/style/main.css" />
> > ---
> > > 		<link rel="stylesheet" type="text/css" href="style/reset.css" />
> > > 		<link rel="stylesheet" type="text/css" href="style/main.css" />
> > 9,12c9,12
> > < 		<script type="text/javascript" src="/js/load.js"></script>
> > < 		<script type="text/javascript" src="/js/setHighlight.js"></script>
> > < 		<script type="text/javascript" src="/js/formInputHighlight.js"></script>
> > < 		<script type="text/javascript" src="/js/formTextareaHighlight.js"></script>
> > ---
> > > 		<script type="text/javascript" src="js/load.js"></script>
> > > 		<script type="text/javascript" src="js/setHighlight.js"></script>
> > > 		<script type="text/javascript" src="js/formInputHighlight.js"></script>
> > > 		<script type="text/javascript" src="js/formTextareaHighlight.js"></script>
> > 
> > ***************************
> > * Changes in revision 22 
> > ***************************
> > 
> > ------------------------------------------------------------------------
> > r22 | ting | 2009-03-25 17:15:21 -0500 (Wed, 25 Mar 2009) | 1 line
> > 
> > javascript/html broken.  rollback to r16
> > ------------------------------------------------------------------------
> > 
> > Index: instructor.html
> > ===================================================================
> > 6,7c6,7
> > < 		<link rel="stylesheet" type="text/css" href="style/reset.css" />
> > < 		<link rel="stylesheet" type="text/css" href="style/main.css" />
> > ---
> > > 		<link rel="stylesheet" type="text/css" href="/style/reset.css" />
> > > 		<link rel="stylesheet" type="text/css" href="/style/main.css" />
> > 9,12c9,12
> > < 		<script type="text/javascript" src="js/load.js"></script>
> > < 		<script type="text/javascript" src="js/setHighlight.js"></script>
> > < 		<script type="text/javascript" src="js/formInputHighlight.js"></script>
> > < 		<script type="text/javascript" src="js/formTextareaHighlight.js"></script>
> > ---
> > > 		<script type="text/javascript" src="/js/load.js"></script>
> > > 		<script type="text/javascript" src="/js/setHighlight.js"></script>
> > > 		<script type="text/javascript" src="/js/formInputHighlight.js"></script>
> > > 		<script type="text/javascript" src="/js/formTextareaHighlight.js"></script>
> > 18,36c18,21
> > < 				<dt><label for="comment_wanted">Specific wanted students</label></dt>
> > < 				<dd><input type="text" name="comment_wanted" id="comment_wanted" {% if results %}{% for result in results %}{% ifequal result.key 'comment_wanted' %}{% if result.valid %}value="{{ result.value }}" />
> > < 				<span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/>
> > < 				<span{% endif %}>Are there any students you specifically want?</span></dd>
> > < 
> > < 				<dt><label for="comment_unwanted">Specific unwanted students</label></dt>
> > < 				<dd><input type="text" name="comment_unwanted" id="comment_unwanted" {% if results %}{% for result in results %}{% ifequal result.key 'comment_unwanted' %}{% if result.valid %}value="{{ result.value }}" />
> > < 				<span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/>
> > < 				<span{% endif %}>Are there any students you specifically don't want?</span></dd>
> > < 
> > < 				<dt><label for="comment_native">Native English speaker</label></dt>
> > < 				<dd><input type="text" name="comment_native" id="comment_native" {% if results %}{% for result in results %}{% ifequal result.key 'comment_native' %}{% if result.valid %}value="{{ result.value }}" />
> > < 				<span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/>
> > < 				<span{% endif %}>Are you a native English speaker? Type in "yes" or "no".</span></dd>
> > < 
> > < 				<dt><label for="comment_specialization">Background in a particular area of specialization</label>
> > < 				</dt><dd><input type="text" name="comment_specialization" id="comment_specialization" {% if results %}{% for result in results %}{% ifequal result.key 'comment_specialization' %}{% if result.valid %}value="{{ result.value }}" />
> > < 				<span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/>
> > < 				<span{% endif %}>Background in a particular area of specialization?</span></dd>
> > ---
> > > 				<dt><label for="comment_wanted">Specific wanted students</label></dt><dd><input type="text" name="comment_wanted" id="comment_wanted" {% if results %}{% for result in results %}{% ifequal result.key 'comment_wanted' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Are there any students you specifically want?</span></dd>
> > > 				<dt><label for="comment_unwanted">Specific unwanted students</label></dt><dd><input type="text" name="comment_unwanted" id="comment_unwanted" {% if results %}{% for result in results %}{% ifequal result.key 'comment_unwanted' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Are there any students you specifically don't want?</span></dd>
> > > 				<dt><label for="comment_native">Native English speaker</label></dt><dd><input type="text" name="comment_native" id="comment_native" {% if results %}{% for result in results %}{% ifequal result.key 'comment_native' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Are you a native English speaker? Type in "yes" or "no".</span></dd>
> > > 				<dt><label for="comment_specialization">Background in a particular area of specialization</label></dt><dd><input type="text" name="comment_specialization" id="comment_specialization" {% if results %}{% for result in results %}{% ifequal result.key 'comment_specialization' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Background in a particular area of specialization?</span></dd>
> > Index: TestValidation.py
> > ===================================================================
> > 30,31d29
> > < 	def testPhoneNumber7 (self) :
> > < 		self.assert_(Validation.phone_number('(000)123-4567'))
> > Index: Validation.py
> > ===================================================================
> > 51,56d50
> > < 
> > < # ------------
> > < # comment
> > < # ------------
> > < def comment (s) :
> > <         return not re.search('.+',s) is None
> > \ No newline at end of file
> > Index: index.html
> > ===================================================================
> > 8d7
> > < 		<div>TA Assignment Page for Applicants and Administration
> > Index: admin.html
> > ===================================================================
> > 6,7c6,7
> > < 		<link rel="stylesheet" type="text/css" href="style/reset.css" />
> > < 		<link rel="stylesheet" type="text/css" href="style/main.css" />
> > ---
> > > 		<link rel="stylesheet" type="text/css" href="/style/reset.css" />
> > > 		<link rel="stylesheet" type="text/css" href="/style/main.css" />
> > 9,12c9,12
> > < 		<script type="text/javascript" src="js/load.js"></script>
> > < 		<script type="text/javascript" src="js/setHighlight.js"></script>
> > < 		<script type="text/javascript" src="js/formInputHighlight.js"></script>
> > < 		<script type="text/javascript" src="js/formTextareaHighlight.js"></script>
> > ---
> > > 		<script type="text/javascript" src="/js/load.js"></script>
> > > 		<script type="text/javascript" src="/js/setHighlight.js"></script>
> > > 		<script type="text/javascript" src="/js/formInputHighlight.js"></script>
> > > 		<script type="text/javascript" src="/js/formTextareaHighlight.js"></script>
> > 18,41c18,22
> > < 				<dt><label for="comment_class_name">Class number/name</label></dt>
> > < 				<dd><input type="text" name="comment_class_name" id="comment_class_name" {% if results %}{% for result in results %}{% ifequal result.key 'comment_class_name' %}{% if result.valid %}value="{{ result.value }}" />
> > < 				<span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/>
> > < 				<span{% endif %}>What is the class's number/name?</span></dd>
> > < 
> > < 				<dt><label for="comment_inst_name">Instructor's name</label></dt>
> > < 				<dd><input type="text" name="comment_inst_name" id="comment_inst_name" {% if results %}{% for result in results %}{% ifequal result.key 'comment_inst_name' %}{% if result.valid %}value="{{ result.value }}" />
> > < 				<span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/>
> > < 				<span{% endif %}>What instructor will teach the class?</span></dd>
> > < 
> > < 				<dt><label for="comment_exp_enrollment">Expected enrollment</label></dt>
> > < 				<dd><input type="text" name="comment_exp_enrollment" id="comment_exp_enrollment" {% if results %}{% for result in results %}{% ifequal result.key 'comment_exp_enrollment' %}{% if result.valid %}value="{{ result.value }}" />
> > < 				<span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/>
> > < 				<span{% endif %}>How many students are expected to enroll?</span></dd>
> > < 
> > < 				<dt><label for="comment_num_ta_needed">Number of TAs needed</label></dt>
> > < 				<dd><input type="text" name="comment_num_ta_needed" id="comment_num_ta_needed" {% if results %}{% for result in results %}{% ifequal result.key 'comment_num_ta_needed' %}{% if result.valid %}value="{{ result.value }}" />
> > < 				<span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/>
> > < 				<span{% endif %}>How many TAs will be needed?</span></dd>
> > < 
> > < 				<dt><label for="comment_num_ta_assigned">Number of TAs assigned</label></dt>
> > < 				<dd><input type="text" name="comment_num_ta_assigned" id="comment_num_ta_assigned" {% if results %}{% for result in results %}{% ifequal result.key 'comment_num_ta_assigned' %}{% if result.valid %}value="{{ result.value }}" />
> > < 				<span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/>
> > < 				<span{% endif %}>How many TAs are assigned?</span></dd>
> > ---
> > > 				<dt><label for="comment_class_name">Class number/name</label></dt><dd><input type="text" name="comment_class_name" id="comment_class_name" {% if results %}{% for result in results %}{% ifequal result.key 'comment_class_name' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>What is the class's number/name?</span></dd>
> > > 				<dt><label for="comment_inst_name">Instructor's name</label></dt><dd><input type="text" name="comment_inst_name" id="comment_inst_name" {% if results %}{% for result in results %}{% ifequal result.key 'comment_inst_name' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>What instructor will teach the class?</span></dd>
> > > 				<dt><label for="comment_exp_enrollment">Expected enrollment</label></dt><dd><input type="text" name="comment_exp_enrollment" id="comment_exp_enrollment" {% if results %}{% for result in results %}{% ifequal result.key 'comment_exp_enrollment' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>How many students are expected to enroll?</span></dd>
> > > 				<dt><label for="comment_num_ta_needed">Number of TAs needed</label></dt><dd><input type="text" name="comment_num_ta_needed" id="comment_num_ta_needed" {% if results %}{% for result in results %}{% ifequal result.key 'comment_num_ta_needed' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>How many TAs will be needed?</span></dd>
> > > 				<dt><label for="comment_num_ta_assigned">Number of TAs assigned</label></dt><dd><input type="text" name="comment_num_ta_assigned" id="comment_num_ta_assigned" {% if results %}{% for result in results %}{% ifequal result.key 'comment_num_ta_assigned' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>How many TAs are assigned?</span></dd>
> > Index: validator.py
> > ===================================================================
> > 2d1
> > < import Validation
> > 18,21c17,20
> > < 				#'name'     : Validation.name(value),
> > < 				#'password' : lambda: True if re.match('.{6,30}', value) else False,
> > < 				#'address'  : lambda: True if re.match('.+', value) else False,
> > < 				#'phone'    : Validation.phone_number(value),
> > ---
> > > 				'name'     : lambda: True if re.match('.+', value) else False,
> > > 				'password' : lambda: True if re.match('.{6,30}', value) else False,
> > > 				'address'  : lambda: True if re.match('.+', value) else False,
> > > 				'phone'    : lambda: True if re.match('.+', value) else False,
> > 23,53c22,23
> > < 				#'email'    : Validation.email(value),
> > < 				#'comment'  : lambda: True if re.match('.+', value) else False,
> > < 
> > < 				#TA Applicant switches
> > < 				'phone_applicant'		: Validation.phone_number(value)
> > < 				'email_applicant'		: Validation.email(value)
> > < 				'comment_major'			: Validation.comment(value)
> > < 				'comment_admission'		: Validation.comment(value)
> > < 				'comment_phd'			: Validation.comment(value)
> > < 				'comment_supervising'		: Validation.comment(value)
> > < 				'comment_citizen'		: Validation.comment(value)
> > < 				'comment_native'		: Validation.comment(value)
> > < 				'comment_ta'			: Validation.comment(value)
> > < 				'comment_programming'		: Validation.comment(value)
> > < 				'comment_area'			: Validation.comment(value)
> > < 				'comment_qualified'		: Validation.comment(value)
> > < 
> > < 				#Instructor Swicthes
> > < 				'comment_wanted'		: Validation.comment(value)
> > < 				'comment_unwanted'		: Validation.comment(value)
> > < 				'comment_native'		: Validation.comment(value)
> > < 				'comment_specialization'	: Validation.comment(value)
> > < 				#Admin switches	
> > < 
> > < 				'comment_class_name'		: Validation.comment(value)
> > < 				'comment_inst_name'		: Validation.comment(value)
> > < 				'comment_exp_enrollment'	: Validation.comment(value)
> > < 				'comment_num_ta_needed'		: Validation.comment(value)
> > < 				'comment_num_ta_assigned'	: Validation.comment(value)
> > < 
> > < 
> > ---
> > > 				'email'    : lambda: True if re.match('[a-zA-Z0-9!#$%&\'*+/=?^_`{|}~-]+(?:\.[a-zA-Z0-9!#$%&\'*+/=?^_`{|}~-]+)*@(?:[a-zA-Z0-9](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?\.)+[a-zA-Z0-9](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?', value) else False,
> > > 				'comment'  : lambda: True if re.match('.+', value) else False,
> > 58,73d27
> > < #		for key, value in form_data:
> > < #			result = {}
> > < #			result['key'] = key
> > < #			result['value'] = value
> > < #			ghetto_switch = {
> > < #				'name'     : lambda: True if re.match('.+', value) else False,
> > < #				'password' : lambda: True if re.match('.{6,30}', value) else False,
> > < #				'address'  : lambda: True if re.match('.+', value) else False,
> > < #				'phone'    : lambda: True if re.match('.+', value) else False,
> > < #				# lol, this is ALMOST to RFC 2822, doesn't handle double quoted sections before '@' or square bracket Internet address after, perfect bug op
> > < #				'email'    : lambda: True if re.match('[a-zA-Z0-9!#$%&\'*+/=?^_`{|}~-]+(?:\.[a-zA-Z0-9!#$%&\'*+/=?^_`{|}~-]+)*@(?:[a-zA-Z0-9](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?\.)+[a-zA-Z0-9](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?', value) else False,
> > < #				'comment'  : lambda: True if re.match('.+', value) else False,
> > < #			}[key.split('_')[0]]()
> > < #			result['valid'] = True if ghetto_switch else False
> > < #			self.results.append(result)
> > < 
> > Index: applicant.html
> > ===================================================================
> > 6,7c6,7
> > < 		<link rel="stylesheet" type="text/css" href="style/reset.css" />
> > < 		<link rel="stylesheet" type="text/css" href="style/main.css" />
> > ---
> > > 		<link rel="stylesheet" type="text/css" href="/style/reset.css" />
> > > 		<link rel="stylesheet" type="text/css" href="/style/main.css" />
> > 9,12c9,12
> > < 		<script type="text/javascript" src="js/load.js"></script>
> > < 		<script type="text/javascript" src="js/setHighlight.js"></script>
> > < 		<script type="text/javascript" src="js/formInputHighlight.js"></script>
> > < 		<script type="text/javascript" src="js/formTextareaHighlight.js"></script>
> > ---
> > > 		<script type="text/javascript" src="/js/load.js"></script>
> > > 		<script type="text/javascript" src="/js/setHighlight.js"></script>
> > > 		<script type="text/javascript" src="/js/formInputHighlight.js"></script>
> > > 		<script type="text/javascript" src="/js/formTextareaHighlight.js"></script>
> > 18,77c18,29
> > < 				<dt><label for="phone_applicant">Phone</label></dt><dd>
> > < 				<input type="text" name="phone_applicant" id="phone_applicant" {% if results %}{% for result in results %}{% ifequal result.key 'phone_applicant' %}{% if result.valid %}value="{{ result.value }}" />
> > < 				<span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/>
> > < 				<span{% endif %}>What is your phone number?</span></dd>
> > < 
> > < 				<dt><label for="email_applicant">Email</label></dt><dd>
> > < 				<input type="text" name="email_applicant" id="email_applicant" {% if results %}{% for result in results %}{% ifequal result.key 'email_applicant' %}{% if result.valid %}value="{{ result.value }}" />
> > < 				<span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/>
> > < 				<span{% endif %}>What is your email address?</span></dd>
> > < 
> > < 				<dt><label for="comment_major">Major field</label></dt><dd>
> > < 				<input type="text" name="comment_major" id="comment_major" {% if results %}{% for result in results %}{% ifequal result.key 'comment_major' %}{% if result.valid %}value="{{ result.value }}" />
> > < 				<span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/>
> > < 				<span{% endif %}>What is your major field?</span></dd>
> > < 
> > < 				<dt><label for="comment_admission">Admission date</label></dt>
> > < 				<dd><input type="text" name="comment_admission" id="comment_admission" {% if results %}{% for result in results %}{% ifequal result.key 'comment_admission' %}{% if result.valid %}value="{{ result.value }}" />
> > < 				<span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/>
> > < 				<span{% endif %}>What is your admission date?</span></dd>
> > < 
> > < 				<dt><label for="comment_phd">PhD or Masters</label></dt>
> > < 				<dd><input type="text" name="comment_phd" id="comment_phd" {% if results %}{% for result in results %}{% ifequal result.key 'comment_phd' %}{% if result.valid %}value="{{ result.value }}" />
> > < 				<span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/>
> > < 				<span{% endif %}>Do you have a PhD or Masters? Type in "PhD" or "Masters".</span></dd>
> > < 
> > < 				<dt><label for="comment_supervising">Supervising professor</label></dt>
> > < 				<dd><input type="text" name="comment_supervising" id="comment_supervising" {% if results %}{% for result in results %}{% ifequal result.key 'comment_supervising' %}{% if result.valid %}value="{{ result.value }}" />
> > < 				<span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/>
> > < 				<span{% endif %}>Who is your supervising professor?</span></dd>
> > < 
> > < 				<dt><label for="comment_citizen">Citizen or resident</label></dt>
> > < 				<dd><input type="text" name="comment_citizen" id="comment_citizen" {% if results %}{% for result in results %}{% ifequal result.key 'comment_citizen' %}{% if result.valid %}value="{{ result.value }}" />
> > < 				<span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/>
> > < 				<span{% endif %}>Are you a citizen or resident? Type in "citizen" or "resident".</span></dd>
> > < 
> > < 				<dt><label for="comment_native">Native English speaker</label></dt>
> > < 				<dd><input type="text" name="comment_native" id="comment_native" {% if results %}{% for result in results %}{% ifequal result.key 'comment_native' %}{% if result.valid %}value="{{ result.value }}" />
> > < 				<span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/>
> > < 				<span{% endif %}>Are you a native English speaker? Type in "yes" or "no".</span></dd>
> > < 
> > < 				<dt><label for="comment_ta">TA history</label></dt>
> > < 				<dd><input type="text" name="comment_ta" id="comment_ta" {% if results %}{% for result in results %}{% ifequal result.key 'comment_ta' %}{% if result.valid %}value="{{ result.value }}" />
> > < 				<span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/>
> > < 				<span{% endif %}>Do you have a history being a TA? Type in "yes" or "no".</span></dd>
> > < 
> > < 				<dt><label for="comment_programming">Programming languages</label></dt>
> > < 				<dd><input type="text" name="comment_programming" id="comment_programming" {% if results %}{% for result in results %}{% ifequal result.key 'comment_programming' %}{% if result.valid %}value="{{ result.value }}" />
> > < 				<span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/>
> > < 				<span{% endif %}>What programming languages do you know?</span></dd>
> > < 
> > < 				<dt><label for="comment_area">Area of specialization</label></dt>
> > < 				<dd><input type="text" name="comment_area" id="comment_area" {% if results %}{% for result in results %}{% ifequal result.key 'comment_area' %}{% if result.valid %}value="{{ result.value }}" />
> > < 				<span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/>
> > < 				<span{% endif %}>What is your area of specialization?</span></dd>
> > < 
> > < 				<dt><label for="comment_qualified">Course qualified to teach</label></dt>
> > < 				<dd><input type="text" name="comment_qualified" id="comment_qualified" {% if results %}{% for result in results %}{% ifequal result.key 'comment_qualified' %}{% if result.valid %}value="{{ result.value }}" />
> > < 				<span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/>
> > < 				<span{% endif %}>What course(s) are you qualified to teach?</span></dd>
> > < 
> > ---
> > > 				<dt><label for="phone_applicant">Phone</label></dt><dd><input type="text" name="phone_applicant" id="phone_applicant" {% if results %}{% for result in results %}{% ifequal result.key 'phone_applicant' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>What is your phone number?</span></dd>
> > > 				<dt><label for="email_applicant">Email</label></dt><dd><input type="text" name="email_applicant" id="email_applicant" {% if results %}{% for result in results %}{% ifequal result.key 'email_applicant' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>What is your email address?</span></dd>
> > > 				<dt><label for="comment_major">Major field</label></dt><dd><input type="text" name="comment_major" id="comment_major" {% if results %}{% for result in results %}{% ifequal result.key 'comment_major' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>What is your major field?</span></dd>
> > > 				<dt><label for="comment_admission">Admission date</label></dt><dd><input type="text" name="comment_admission" id="comment_admission" {% if results %}{% for result in results %}{% ifequal result.key 'comment_admission' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>What is your admission date?</span></dd>
> > > 				<dt><label for="comment_phd">PhD or Masters</label></dt><dd><input type="text" name="comment_phd" id="comment_phd" {% if results %}{% for result in results %}{% ifequal result.key 'comment_phd' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Do you have a PhD or Masters? Type in "PhD" or "Masters".</span></dd>
> > > 				<dt><label for="comment_supervising">Supervising professor</label></dt><dd><input type="text" name="comment_supervising" id="comment_supervising" {% if results %}{% for result in results %}{% ifequal result.key 'comment_supervising' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Who is your supervising professor?</span></dd>
> > > 				<dt><label for="comment_citizen">Citizen or resident</label></dt><dd><input type="text" name="comment_citizen" id="comment_citizen" {% if results %}{% for result in results %}{% ifequal result.key 'comment_citizen' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Are you a citizen or resident? Type in "citizen" or "resident".</span></dd>
> > > 				<dt><label for="comment_native">Native English speaker</label></dt><dd><input type="text" name="comment_native" id="comment_native" {% if results %}{% for result in results %}{% ifequal result.key 'comment_native' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Are you a native English speaker? Type in "yes" or "no".</span></dd>
> > > 				<dt><label for="comment_ta">TA history</label></dt><dd><input type="text" name="comment_ta" id="comment_ta" {% if results %}{% for result in results %}{% ifequal result.key 'comment_ta' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Do you have a history being a TA? Type in "yes" or "no".</span></dd>
> > > 				<dt><label for="comment_programming">Programming languages</label></dt><dd><input type="text" name="comment_programming" id="comment_programming" {% if results %}{% for result in results %}{% ifequal result.key 'comment_programming' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>What programming languages do you know?</span></dd>
> > > 				<dt><label for="comment_area">Area of specialization</label></dt><dd><input type="text" name="comment_area" id="comment_area" {% if results %}{% for result in results %}{% ifequal result.key 'comment_area' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>What is your area of specialization?</span></dd>
> > > 				<dt><label for="comment_qualified">Course qualified to teach</label></dt><dd><input type="text" name="comment_qualified" id="comment_qualified" {% if results %}{% for result in results %}{% ifequal result.key 'comment_qualified' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>What course(s) are you qualified to teach?</span></dd>
> > 
> > ***************************
> > * Changes in revision 23 
> > ***************************
> > 
> > ------------------------------------------------------------------------
> > r23 | levi | 2009-03-25 17:20:44 -0500 (Wed, 25 Mar 2009) | 1 line
> > 
> > Updated TA1.txt with my EID
> > ------------------------------------------------------------------------
> > 
> > Index: validator.pyc
> > ===================================================================
> > Cannot display: file marked as a binary type.
> > svn:mime-type = application/octet-stream
> > Index: TA1.txt
> > ===================================================================
> > 22c22
> > < EID:
> > ---
> > > EID: lbw429
> > 
> > ***************************
> > * Changes in revision 24 
> > ***************************
> > 
> > ------------------------------------------------------------------------
> > r24 | ting | 2009-03-25 17:22:02 -0500 (Wed, 25 Mar 2009) | 1 line
> > 
> > removing unnecessary .pyc files
> > ------------------------------------------------------------------------
> > 
> > Index: validator.pyc
> > ===================================================================
> > Cannot display: file marked as a binary type.
> > svn:mime-type = application/octet-stream
> > 
> > ***************************
> > * Changes in revision 25 
> > ***************************
> > 
> > ------------------------------------------------------------------------
> > r25 | jeffery | 2009-03-25 19:21:51 -0500 (Wed, 25 Mar 2009) | 5 lines
> > 
> > Validation is working
> > Cleaned up a little html, will do more
> > 
> > Jeffery Zhu
> > 
> > ------------------------------------------------------------------------
> > 
> > Index: Validation.py
> > ===================================================================
> > 50a51,56
> > > 
> > > # ------------
> > > # comment
> > > # ------------
> > > def comment (s) :
> > >         return not re.search('.+',s) is None
> > \ No newline at end of file
> > Index: app.yaml
> > ===================================================================
> > 2c2
> > < version: 6
> > ---
> > > version: 7
> > Index: validator.py
> > ===================================================================
> > 1a2
> > > import Validation
> > 17,20c18,21
> > < 				'name'     : lambda: True if re.match('.+', value) else False,
> > < 				'password' : lambda: True if re.match('.{6,30}', value) else False,
> > < 				'address'  : lambda: True if re.match('.+', value) else False,
> > < 				'phone'    : lambda: True if re.match('.+', value) else False,
> > ---
> > > 				#'name'     : Validation.name(value),
> > > 				#'password' : lambda: True if re.match('.{6,30}', value) else False,
> > > 				#'address'  : lambda: True if re.match('.+', value) else False,
> > > 				#'phone'    : Validation.phone_number(value),
> > 22,24c23,55
> > < 				'email'    : lambda: True if re.match('[a-zA-Z0-9!#$%&\'*+/=?^_`{|}~-]+(?:\.[a-zA-Z0-9!#$%&\'*+/=?^_`{|}~-]+)*@(?:[a-zA-Z0-9](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?\.)+[a-zA-Z0-9](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?', value) else False,
> > < 				'comment'  : lambda: True if re.match('.+', value) else False,
> > < 			}[key.split('_')[0]]()
> > ---
> > > 				#'email'    : Validation.email(value),
> > > 				#'comment'  : lambda: True if re.match('.+', value) else False,
> > > 				
> > > 				#TA Applicant switches
> > > 				'phone_applicant'		: lambda x: Validation.phone_number(x),
> > > 				'email_applicant'		: lambda x: Validation.email(x),
> > > 				'comment_major'			: lambda x: Validation.comment(x),
> > > 				'comment_admission'		: lambda x: Validation.comment(x),
> > > 				'comment_phd'			: lambda x: Validation.comment(x),
> > > 				'comment_supervising'		: lambda x: Validation.comment(x),
> > > 				'comment_citizen'		: lambda x: Validation.comment(x),
> > > 				'comment_native'		: lambda x: Validation.comment(x),
> > > 				'comment_ta'			: lambda x: Validation.comment(x),
> > > 				'comment_programming'		: lambda x: Validation.comment(x),
> > > 				'comment_area'			: lambda x: Validation.comment(x),
> > > 				'comment_qualified'		: lambda x: Validation.comment(x),
> > > 			
> > > 				#Instructor Swicthes
> > > 				'comment_wanted'		: lambda x: Validation.comment(x),
> > > 				'comment_unwanted'		: lambda x: Validation.comment(x),
> > > 				'comment_native'		: lambda x: Validation.comment(x),
> > > 				'comment_specialization'	: lambda x: Validation.comment(x),
> > > 				#Admin switches	
> > > 				
> > > 				'comment_class_name'		: lambda x: Validation.comment(x),
> > > 				'comment_inst_name'		: lambda x: Validation.comment(x),
> > > 				'comment_exp_enrollment'	: lambda x: Validation.comment(x),
> > > 				'comment_num_ta_needed'		: lambda x: Validation.comment(x),
> > > 				'comment_num_ta_assigned'	: lambda x: Validation.comment(x),
> > > 				
> > > 				
> > > 			}[key](value)
> > > 			
> > 27a59,74
> > > #		for key, value in form_data:
> > > #			result = {}
> > > #			result['key'] = key
> > > #			result['value'] = value
> > > #			ghetto_switch = {
> > > #				'name'     : lambda: True if re.match('.+', value) else False,
> > > #				'password' : lambda: True if re.match('.{6,30}', value) else False,
> > > #				'address'  : lambda: True if re.match('.+', value) else False,
> > > #				'phone'    : lambda: True if re.match('.+', value) else False,
> > > #				# lol, this is ALMOST to RFC 2822, doesn't handle double quoted sections before '@' or square bracket Internet address after, perfect bug op
> > > #				'email'    : lambda: True if re.match('[a-zA-Z0-9!#$%&\'*+/=?^_`{|}~-]+(?:\.[a-zA-Z0-9!#$%&\'*+/=?^_`{|}~-]+)*@(?:[a-zA-Z0-9](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?\.)+[a-zA-Z0-9](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?', value) else False,
> > > #				'comment'  : lambda: True if re.match('.+', value) else False,
> > > #			}[key.split('_')[0]]()
> > > #			result['valid'] = True if ghetto_switch else False
> > > #			self.results.append(result)
> > > 
> > Index: applicant.html
> > ===================================================================
> > 18,29c18,72
> > < 				<dt><label for="phone_applicant">Phone</label></dt><dd><input type="text" name="phone_applicant" id="phone_applicant" {% if results %}{% for result in results %}{% ifequal result.key 'phone_applicant' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>What is your phone number?</span></dd>
> > < 				<dt><label for="email_applicant">Email</label></dt><dd><input type="text" name="email_applicant" id="email_applicant" {% if results %}{% for result in results %}{% ifequal result.key 'email_applicant' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>What is your email address?</span></dd>
> > < 				<dt><label for="comment_major">Major field</label></dt><dd><input type="text" name="comment_major" id="comment_major" {% if results %}{% for result in results %}{% ifequal result.key 'comment_major' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>What is your major field?</span></dd>
> > < 				<dt><label for="comment_admission">Admission date</label></dt><dd><input type="text" name="comment_admission" id="comment_admission" {% if results %}{% for result in results %}{% ifequal result.key 'comment_admission' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>What is your admission date?</span></dd>
> > < 				<dt><label for="comment_phd">PhD or Masters</label></dt><dd><input type="text" name="comment_phd" id="comment_phd" {% if results %}{% for result in results %}{% ifequal result.key 'comment_phd' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Do you have a PhD or Masters? Type in "PhD" or "Masters".</span></dd>
> > < 				<dt><label for="comment_supervising">Supervising professor</label></dt><dd><input type="text" name="comment_supervising" id="comment_supervising" {% if results %}{% for result in results %}{% ifequal result.key 'comment_supervising' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Who is your supervising professor?</span></dd>
> > < 				<dt><label for="comment_citizen">Citizen or resident</label></dt><dd><input type="text" name="comment_citizen" id="comment_citizen" {% if results %}{% for result in results %}{% ifequal result.key 'comment_citizen' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Are you a citizen or resident? Type in "citizen" or "resident".</span></dd>
> > < 				<dt><label for="comment_native">Native English speaker</label></dt><dd><input type="text" name="comment_native" id="comment_native" {% if results %}{% for result in results %}{% ifequal result.key 'comment_native' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Are you a native English speaker? Type in "yes" or "no".</span></dd>
> > < 				<dt><label for="comment_ta">TA history</label></dt><dd><input type="text" name="comment_ta" id="comment_ta" {% if results %}{% for result in results %}{% ifequal result.key 'comment_ta' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Do you have a history being a TA? Type in "yes" or "no".</span></dd>
> > < 				<dt><label for="comment_programming">Programming languages</label></dt><dd><input type="text" name="comment_programming" id="comment_programming" {% if results %}{% for result in results %}{% ifequal result.key 'comment_programming' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>What programming languages do you know?</span></dd>
> > < 				<dt><label for="comment_area">Area of specialization</label></dt><dd><input type="text" name="comment_area" id="comment_area" {% if results %}{% for result in results %}{% ifequal result.key 'comment_area' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>What is your area of specialization?</span></dd>
> > < 				<dt><label for="comment_qualified">Course qualified to teach</label></dt><dd><input type="text" name="comment_qualified" id="comment_qualified" {% if results %}{% for result in results %}{% ifequal result.key 'comment_qualified' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>What course(s) are you qualified to teach?</span></dd>
> > ---
> > > 				<dt><label for="phone_applicant">Phone</label></dt>
> > > 				<dd><input type="text" name="phone_applicant" id="phone_applicant" {% if results %}{% for result in results %}{% ifequal result.key 'phone_applicant' %}{% if result.valid %}value="{{ result.value }}" />
> > > 				<span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/>
> > > 				<span{% endif %}>What is your phone number?</span></dd>
> > > 
> > > 				<dt><label for="email_applicant">Email</label></dt>
> > > 				<dd><input type="text" name="email_applicant" id="email_applicant" {% if results %}{% for result in results %}{% ifequal result.key 'email_applicant' %}{% if result.valid %}value="{{ result.value }}" />
> > > 				<span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/>
> > > 				<span{% endif %}>What is your email address?</span></dd>
> > > 
> > > 				<dt><label for="comment_major">Major field</label></dt>
> > > 				<dd><input type="text" name="comment_major" id="comment_major" {% if results %}{% for result in results %}{% ifequal result.key 'comment_major' %}{% if result.valid %}value="{{ result.value }}" />
> > > 				<span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/>
> > > 				<span{% endif %}>What is your major field?</span></dd>
> > > 
> > > 				<dt><label for="comment_admission">Admission date</label></dt><dd><input type="text" name="comment_admission" id="comment_admission" {% if results %}{% for result in results %}{% ifequal result.key 'comment_admission' %}{% if result.valid %}value="{{ result.value }}" />
> > > 				<span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/>
> > > 				<span{% endif %}>What is your admission date?</span></dd>
> > > 
> > > 				<dt><label for="comment_phd">PhD or Masters</label></dt><dd><input type="text" name="comment_phd" id="comment_phd" {% if results %}{% for result in results %}{% ifequal result.key 'comment_phd' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/>
> > > 				<span{% endif %}>Do you have a PhD or Masters? Type in "PhD" or "Masters".</span></dd>
> > > 
> > > 				<dt><label for="comment_supervising">Supervising professor</label></dt>
> > > 				<dd><input type="text" name="comment_supervising" id="comment_supervising" {% if results %}{% for result in results %}{% ifequal result.key 'comment_supervising' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/>
> > > 				<span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/>
> > > 				<span{% endif %}>Who is your supervising professor?</span></dd>
> > > 
> > > 				<dt><label for="comment_citizen">Citizen or resident</label></dt>
> > > 				<dd><input type="text" name="comment_citizen" id="comment_citizen" {% if results %}{% for result in results %}{% ifequal result.key 'comment_citizen' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/>
> > > 				<span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/>
> > > 				<span{% endif %}>Are you a citizen or resident? Type in "citizen" or "resident".</span></dd>
> > > 
> > > 				<dt><label for="comment_native">Native English speaker</label></dt>
> > > 				<dd><input type="text" name="comment_native" id="comment_native" {% if results %}{% for result in results %}{% ifequal result.key 'comment_native' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/>
> > > 				<span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/>
> > > 				<span{% endif %}>Are you a native English speaker? Type in "yes" or "no".</span></dd>
> > > 
> > > 				<dt><label for="comment_ta">TA history</label></dt><dd><input type="text" name="comment_ta" id="comment_ta" {% if results %}{% for result in results %}{% ifequal result.key 'comment_ta' %}{% if result.valid %}value="{{ result.value }}" />
> > > 				<span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/>
> > > 				<span{% endif %}>Do you have a history being a TA? Type in "yes" or "no".</span></dd>
> > > 
> > > 				<dt><label for="comment_programming">Programming languages</label></dt>
> > > 				<dd><input type="text" name="comment_programming" id="comment_programming" {% if results %}{% for result in results %}{% ifequal result.key 'comment_programming' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/>
> > > 				<span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/>
> > > 				<span{% endif %}>What programming languages do you know?</span></dd>
> > > 
> > > 				<dt><label for="comment_area">Area of specialization</label></dt>
> > > 				<dd><input type="text" name="comment_area" id="comment_area" {% if results %}{% for result in results %}{% ifequal result.key 'comment_area' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/>
> > > 				<span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/>
> > > 				<span{% endif %}>What is your area of specialization?</span></dd>
> > > 
> > > 				<dt><label for="comment_qualified">Course qualified to teach</label></dt>
> > > 				<dd><input type="text" name="comment_qualified" id="comment_qualified" {% if results %}{% for result in results %}{% ifequal result.key 'comment_qualified' %}{% if result.valid %}value="{{ result.value }}" />
> > > 				<span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/>
> > > 				<span{% endif %}>What course(s) are you qualified to teach?</span></dd>
> > 
> > ***************************
> > * Changes in revision 26 
> > ***************************
> > 
> > ------------------------------------------------------------------------
> > r26 | jeffery | 2009-03-25 20:12:58 -0500 (Wed, 25 Mar 2009) | 4 lines
> > 
> > Added more validations to the validator
> > Cleaned up the html, the test boxes on the right don't over lap any more
> > Jeffery Zhu
> > 
> > ------------------------------------------------------------------------
> > 
> > Index: instructor.html
> > ===================================================================
> > 18,21c18,42
> > < 				<dt><label for="comment_wanted">Specific wanted students</label></dt><dd><input type="text" name="comment_wanted" id="comment_wanted" {% if results %}{% for result in results %}{% ifequal result.key 'comment_wanted' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Are there any students you specifically want?</span></dd>
> > < 				<dt><label for="comment_unwanted">Specific unwanted students</label></dt><dd><input type="text" name="comment_unwanted" id="comment_unwanted" {% if results %}{% for result in results %}{% ifequal result.key 'comment_unwanted' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Are there any students you specifically don't want?</span></dd>
> > < 				<dt><label for="comment_native">Native English speaker</label></dt><dd><input type="text" name="comment_native" id="comment_native" {% if results %}{% for result in results %}{% ifequal result.key 'comment_native' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Are you a native English speaker? Type in "yes" or "no".</span></dd>
> > < 				<dt><label for="comment_specialization">Background in a particular area of specialization</label></dt><dd><input type="text" name="comment_specialization" id="comment_specialization" {% if results %}{% for result in results %}{% ifequal result.key 'comment_specialization' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>Background in a particular area of specialization?</span></dd>
> > ---
> > > 				<dt><label for="comment_wanted">Specific wanted students</label></dt>
> > > 				<dd><input type="text" name="comment_wanted" id="comment_wanted" {% if results %}{% for result in results %}{% ifequal result.key 'comment_wanted' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/>
> > > 				<span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/>
> > > 				<span{% endif %}>Are there any students you specifically want?</span></dd>
> > > 				
> > > 				<br />
> > > 
> > > 				<dt><label for="comment_unwanted">Specific unwanted students</label></dt>
> > > 				<dd><input type="text" name="comment_unwanted" id="comment_unwanted" {% if results %}{% for result in results %}{% ifequal result.key 'comment_unwanted' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/>
> > > 				<span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/>
> > > 				<span{% endif %}>Are there any students you specifically don't want?</span></dd>
> > > 
> > > 				<br />
> > > 
> > > 				<dt><label for="comment_native">Native English speaker</label></dt>
> > > 				<dd><input type="text" name="comment_native" id="comment_native" {% if results %}{% for result in results %}{% ifequal result.key 'comment_native' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/>
> > > 				<span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/>
> > > 				<span{% endif %}>Are you a native English speaker? Type in "yes" or "no".</span></dd>
> > > 
> > > 				<br />
> > > 
> > > 				<dt><label for="comment_specialization">Background in a particular area of specialization</label></dt>
> > > 				<dd><input type="text" name="comment_specialization" id="comment_specialization" {% if results %}{% for result in results %}{% ifequal result.key 'comment_specialization' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/>
> > > 				<span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/>
> > > 				<span{% endif %}>Background in a particular area of specialization?</span></dd>
> > Index: style/main.css
> > ===================================================================
> > 7c7
> > < 	width: 400px;
> > ---
> > > 	width: 500px;
> > Index: Validation.py
> > ===================================================================
> > 56a57,74
> > > 
> > > # ------------
> > > # Degree type
> > > # ------------
> > > def degree_type (s) :
> > >         return not re.search('^(PhD|Masters)$',s) is None
> > > 
> > > # ------------
> > > # Citizen or Resident
> > > # ------------
> > > def citizen (s) :
> > >         return not re.search('^(citizen|resident)$',s) is None
> > > 
> > > # ------------
> > > # Yes or No
> > > # ------------
> > > def yes_no (s) :
> > >         return not re.search('^(yes|no)$',s) is None
> > Index: app.yaml
> > ===================================================================
> > 2c2
> > < version: 7
> > ---
> > > version: 8
> > Index: admin.html
> > ===================================================================
> > 18,22c18,49
> > < 				<dt><label for="comment_class_name">Class number/name</label></dt><dd><input type="text" name="comment_class_name" id="comment_class_name" {% if results %}{% for result in results %}{% ifequal result.key 'comment_class_name' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>What is the class's number/name?</span></dd>
> > < 				<dt><label for="comment_inst_name">Instructor's name</label></dt><dd><input type="text" name="comment_inst_name" id="comment_inst_name" {% if results %}{% for result in results %}{% ifequal result.key 'comment_inst_name' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>What instructor will teach the class?</span></dd>
> > < 				<dt><label for="comment_exp_enrollment">Expected enrollment</label></dt><dd><input type="text" name="comment_exp_enrollment" id="comment_exp_enrollment" {% if results %}{% for result in results %}{% ifequal result.key 'comment_exp_enrollment' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>How many students are expected to enroll?</span></dd>
> > < 				<dt><label for="comment_num_ta_needed">Number of TAs needed</label></dt><dd><input type="text" name="comment_num_ta_needed" id="comment_num_ta_needed" {% if results %}{% for result in results %}{% ifequal result.key 'comment_num_ta_needed' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>How many TAs will be needed?</span></dd>
> > < 				<dt><label for="comment_num_ta_assigned">Number of TAs assigned</label></dt><dd><input type="text" name="comment_num_ta_assigned" id="comment_num_ta_assigned" {% if results %}{% for result in results %}{% ifequal result.key 'comment_num_ta_assigned' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/><span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/><span{% endif %}>How many TAs are assigned?</span></dd>
> > ---
> > > 				<dt><label for="comment_class_name">Class number/name</label></dt>
> > > 				<dd><input type="text" name="comment_class_name" id="comment_class_name" {% if results %}{% for result in results %}{% ifequal result.key 'comment_class_name' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/>
> > > 				<span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/>
> > > 				<span{% endif %}>What is the class's number/name?</span></dd>
> > > 
> > > 				<br />
> > > 
> > > 				<dt><label for="comment_inst_name">Instructor's name</label></dt>
> > > 				<dd><input type="text" name="comment_inst_name" id="comment_inst_name" {% if results %}{% for result in results %}{% ifequal result.key 'comment_inst_name' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/>
> > > 				<span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/>
> > > 				<span{% endif %}>What instructor will teach the class?</span></dd>
> > > 
> > > 				<br />
> > > 
> > > 				<dt><label for="comment_exp_enrollment">Expected enrollment</label></dt>
> > > 				<dd><input type="text" name="comment_exp_enrollment" id="comment_exp_enrollment" {% if results %}{% for result in results %}{% ifequal result.key 'comment_exp_enrollment' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/>
> > > 				<span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/>
> > > 				<span{% endif %}>How many students are expected to enroll?</span></dd>
> > > 
> > > 				<br />
> > > 
> > > 				<dt><label for="comment_num_ta_needed">Number of TAs needed</label></dt>
> > > 				<dd><input type="text" name="comment_num_ta_needed" id="comment_num_ta_needed" {% if results %}{% for result in results %}{% ifequal result.key 'comment_num_ta_needed' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/>
> > > 				<span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/>
> > > 				<span{% endif %}>How many TAs will be needed?</span></dd>
> > > 
> > > 				<br />
> > > 
> > > 				<dt><label for="comment_num_ta_assigned">Number of TAs assigned</label></dt>
> > > 				<dd><input type="text" name="comment_num_ta_assigned" id="comment_num_ta_assigned" {% if results %}{% for result in results %}{% ifequal result.key 'comment_num_ta_assigned' %}{% if result.valid %}value="{{ result.value }}" /><span{% else %}/>
> > > 				<span class="error"{% endif %}{% endifequal %}{% endfor %}{% else %}/>
> > > 				<span{% endif %}>How many TAs are assigned?</span></dd>
> > Index: validator.py
> > ===================================================================
> > 30,31c30,31
> > < 				'comment_admission'		: lambda x: Validation.comment(x),
> > < 				'comment_phd'			: lambda x: Validation.comment(x),
> > ---
> > > 				'comment_admission'		: lambda x: Validation.date(x),
> > > 				'comment_phd'			: lambda x: Validation.degree_type(x),
> > 33,35c33,35
> > < 				'comment_citizen'		: lambda x: Validation.comment(x),
> > < 				'comment_native'		: lambda x: Validation.comment(x),
> > < 				'comment_ta'			: lambda x: Validation.comment(x),
> > ---
> > > 				'comment_citizen'		: lambda x: Validation.citizen(x),
> > > 				'comment_native'		: lambda x: Validation.yes_no(x),
> > > 				'comment_ta'			: lambda x: Validation.yes_no(x),
> > Index: applicant.html
> > ===================================================================
> > 22a23,24
> > > 				<br />
> > > 
> > 27a30,31
> > > 				<br />
> > > 
> > 33c37,39
> > < 				<dt><label for="comment_admission">Admission date</label></dt><dd><input type="text" name="comment_admission" id="comment_admission" {% if results %}{% for result in results %}{% ifequal result.key 'comment_admission' %}{% if result.valid %}value="{{ result.value }}" />
> > ---
> > > 				<br />
> > > 
> > > 				<dt><label for="comment_admission">Admission date (DD-MM-YYYY)</label></dt><dd><input type="text" name="comment_admission" id="comment_admission" {% if results %}{% for result in results %}{% ifequal result.key 'comment_admission' %}{% if result.valid %}value="{{ result.value }}" />
> > 36a43,44
> > > 				<br />
> > > 
> > 39a48,49
> > > 				<br />
> > > 
> > 44a55,56
> > > 				<br />
> > > 
> > 49a62,63
> > > 				<br />
> > > 
> > 54a69,70
> > > 				<br />
> > > 
> > 58a75,76
> > > 				<br />
> > > 
> > 63a82,83
> > > 				<br />
> > > 
> > 68a89,90
> > > 				<br />
> > > 
> > 
> > ***************************
> > * Changes in revision 27 
> > ***************************
> > 
> > ------------------------------------------------------------------------
> > r27 | estesox | 2009-03-25 20:22:53 -0500 (Wed, 25 Mar 2009) | 1 line
> > 
> > name validation enhanced
> > ------------------------------------------------------------------------
> > 
> > Index: Validation.py
> > ===================================================================
> > 40c40
> > <         return not re.search('^[A-Z][a-zA-Z\'\-]*[a-zA-Z]$',s) is None
> > ---
> > >         return not re.search('^^([A-Z]([a-zA-Z]*(\-|\')?[a-zA-Z]*[a-zA-Z](\')?)*(\s))+$',s) is None
> > 
> > ***************************
> > * Changes in revision 28 
> > ***************************
> > 
> > ------------------------------------------------------------------------
> > r28 | estesox | 2009-03-25 20:24:47 -0500 (Wed, 25 Mar 2009) | 1 line
> > 
> > email validation enhanced
> > ------------------------------------------------------------------------
> > 
> > Index: Validation.py
> > ===================================================================
> > 23c23
> > <         return not re.search('(^(\w|\-|\_)+((\.)?(\w|\-|\_)+)*)\@(\w)+(\-|\w)*(\w)+((\.)?(\w)+(\-|\w)*(\w)+)*\.(com|net|org|gov|edu)$', s) is None
> > ---
> > >         return not re.search('(^(\w|\-|\_)+((\.)?(\w|\-|\_)+)*)\@(\w)+(\-|\w)*(\w)+((\.)?(\w)+(\-|\w)*(\w)+)*\.(com|net|org|gov|edu|info|biz|us)$', s) is None
> > 
> > ***************************
> > * Changes in revision 29 
> > ***************************
> > 
> > ------------------------------------------------------------------------
> > r29 | estesox | 2009-03-25 20:29:18 -0500 (Wed, 25 Mar 2009) | 1 line
> > 
> > email validation enhanced
> > ------------------------------------------------------------------------
> > 
> > Index: Validation.py
> > ===================================================================
> > 23c23
> > <         return not re.search('(^(\w|\-|\_)+((\.)?(\w|\-|\_)+)*)\@(\w)+(\-|\w)*(\w)+((\.)?(\w)+(\-|\w)*(\w)+)*\.(com|net|org|gov|edu|info|biz|us)$', s) is None
> > ---
> > >         return not re.search('(^(\w|\-|\_)(\+)?((\.)?(\w|\-|\_)+)*)\@(\w)+(\-|\w)*(\w)+((\.)?(\w)+(\-|\w)*(\w)+)*\.(com|net|org|gov|edu|info|biz|us)$', s) is None
> > 
> > ***************************
> > * Changes in revision 30 
> > ***************************
> > 
> > ------------------------------------------------------------------------
> > r30 | estesox | 2009-03-25 20:35:10 -0500 (Wed, 25 Mar 2009) | 1 line
> > 
> > minor fix of name validation
> > ------------------------------------------------------------------------
> > 
> > Index: Validation.py
> > ===================================================================
> > 40c40
> > <         return not re.search('^^([A-Z]([a-zA-Z]*(\-|\')?[a-zA-Z]*[a-zA-Z](\')?)*(\s))+$',s) is None
> > ---
> > >         return not re.search('^^([A-Z]([a-zA-Z]*(\-|\')?[a-zA-Z]*[a-zA-Z](\')?)*(\s)?)+$',s) is None
> > 
> > ***************************
> > * Changes in revision 31 
> > ***************************
> > 
> > ------------------------------------------------------------------------
> > r31 | levi | 2009-03-25 21:03:34 -0500 (Wed, 25 Mar 2009) | 1 line
> > 
> > Added UML.pdf
> > ------------------------------------------------------------------------
> > 
> > Index: UML.pdf
> > ===================================================================
> > Cannot display: file marked as a binary type.
> > svn:mime-type = application/octet-stream
> > 
> > Property changes on: UML.pdf
> > ___________________________________________________________________
> > Added: svn:mime-type
> >    + application/octet-stream
> > 
> > 
> > ***************************
> > * Changes in revision 32 
> > ***************************
> > 
> > ------------------------------------------------------------------------
> > r32 | jeffery | 2009-03-25 21:37:26 -0500 (Wed, 25 Mar 2009) | 3 lines
> > 
> > Added unit tests for comment, degree type, yes or no, and resident fields
> > Jeffery Zhu
> > 
> > ------------------------------------------------------------------------
> > 
> > Index: TestValidation.py
> > ===================================================================
> > 146a147,189
> > >     # ------------
> > >     # comment
> > >     # ------------
> > >     def testcomment1 (self) :
> > >         self.assert_(Validation.comment('aaa'))
> > > 
> > >     # ------------
> > >     # Degree type
> > >     # ------------
> > >     def testdegree1 (self) :
> > >         self.assert_(not Validation.degree_type('aaa'))
> > >     def testdegree2 (self) :
> > >         self.assert_(not Validation.degree_type(''))
> > >     def testdegree3 (self) :
> > >         self.assert_(Validation.degree_type('PhD'))
> > >     def testdegree4 (self) :
> > >         self.assert_(Validation.degree_type('Masters'))
> > > 
> > >     # ------------
> > >     # Citizen or Resident
> > >     # ------------
> > >     def testcitizen1 (self) :
> > >         self.assert_(not Validation.citizen('aaa'))
> > >     def testcitizen2 (self) :
> > >         self.assert_(not Validation.citizen(''))
> > >     def testcitizen3 (self) :
> > >         self.assert_( Validation.citizen('citizen'))
> > >     def testcitizen4 (self) :
> > >         self.assert_(Validation.citizen('resident'))
> > > 
> > >     # ------------
> > >     # Yes or No
> > >     # ------------
> > >     def testyesno1 (self) :
> > >         self.assert_(not Validation.yes_no('aaa'))
> > >     def testyesno2 (self) :
> > >         self.assert_(Validation.yes_no('yes'))
> > >     def testyesno3 (self) :
> > >         self.assert_(Validation.yes_no('no'))
> > >     def testyesno4 (self) :
> > >         self.assert_(not Validation.yes_no(''))
> > > 
> > > 
> > Index: app.yaml
> > ===================================================================
> > 2c2
> > < version: 8
> > ---
> > > version: 10
> > Index: validator.py
> > ===================================================================
> > 18,21c18,19
> > < 				#'name'     : Validation.name(value),
> > < 				#'password' : lambda: True if re.match('.{6,30}', value) else False,
> > < 				#'address'  : lambda: True if re.match('.+', value) else False,
> > < 				#'phone'    : Validation.phone_number(value),
> > ---
> > > 				
> > > 				#'email'    : lambda: True if re.match('[a-zA-Z0-9!#$%&\'*+/=?^_`{|}~-]+(?:\.[a-zA-Z0-9!#$%&\'*+/=?^_`{|}~-]+)*@(?:[a-zA-Z0-9](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?\.)+[a-zA-Z0-9](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?', value) else False,
> > 23,24d20
> > < 				#'email'    : Validation.email(value),
> > < 				#'comment'  : lambda: True if re.match('.+', value) else False,
> > 43c39
> > < 				'comment_native'		: lambda x: Validation.comment(x),
> > ---
> > > 				'comment_native'		: lambda x: Validation.yes_no(x),
> > 49,51c45,47
> > < 				'comment_exp_enrollment'	: lambda x: Validation.comment(x),
> > < 				'comment_num_ta_needed'		: lambda x: Validation.comment(x),
> > < 				'comment_num_ta_assigned'	: lambda x: Validation.comment(x),
> > ---
> > > 				'comment_exp_enrollment'	: lambda x: Validation.number(x),
> > > 				'comment_num_ta_needed'		: lambda x: Validation.number(x),
> > > 				'comment_num_ta_assigned'	: lambda x: Validation.number(x),
> > 58,74d53
> > < 
> > < #		for key, value in form_data:
> > < #			result = {}
> > < #			result['key'] = key
> > < #			result['value'] = value
> > < #			ghetto_switch = {
> > < #				'name'     : lambda: True if re.match('.+', value) else False,
> > < #				'password' : lambda: True if re.match('.{6,30}', value) else False,
> > < #				'address'  : lambda: True if re.match('.+', value) else False,
> > < #				'phone'    : lambda: True if re.match('.+', value) else False,
> > < #				# lol, this is ALMOST to RFC 2822, doesn't handle double quoted sections before '@' or square bracket Internet address after, perfect bug op
> > < #				'email'    : lambda: True if re.match('[a-zA-Z0-9!#$%&\'*+/=?^_`{|}~-]+(?:\.[a-zA-Z0-9!#$%&\'*+/=?^_`{|}~-]+)*@(?:[a-zA-Z0-9](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?\.)+[a-zA-Z0-9](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?', value) else False,
> > < #				'comment'  : lambda: True if re.match('.+', value) else False,
> > < #			}[key.split('_')[0]]()
> > < #			result['valid'] = True if ghetto_switch else False
> > < #			self.results.append(result)
> > < 
> > Index: applicant.html
> > ===================================================================
> > 18c18
> > < 				<dt><label for="phone_applicant">Phone</label></dt>
> > ---
> > > 				<dt><label for="phone_applicant">Phone (xxx-xxx-xxxx)</label></dt>
> > 25c25
> > < 				<dt><label for="email_applicant">Email</label></dt>
> > ---
> > > 				<dt><label for="email_applicant">Email (xxx@xxx.xxx)</label></dt>
> > 
> > ***************************
> > * Changes in revision 33 
> > ***************************
> > 
> > ------------------------------------------------------------------------
> > r33 | estesox | 2009-03-25 21:44:27 -0500 (Wed, 25 Mar 2009) | 1 line
> > 
> > TA1.txt updated to include everyone's EID
> > ------------------------------------------------------------------------
> > 
> > Index: TA1.txt
> > ===================================================================
> > 27c27
> > < EID:
> > ---
> > > EID:sks732
> > 
> > ***************************
> > * Changes in revision 34 
> > ***************************
> > 
> > ------------------------------------------------------------------------
> > r34 | estesox | 2009-03-25 21:59:06 -0500 (Wed, 25 Mar 2009) | 1 line
> > 
> > applicant.html slightly modified
> > ------------------------------------------------------------------------
> > 
> > Index: applicant.html
> > ===================================================================
> > 39c39
> > < 				<dt><label for="comment_admission">Admission date (DD-MM-YYYY)</label></dt><dd><input type="text" name="comment_admission" id="comment_admission" {% if results %}{% for result in results %}{% ifequal result.key 'comment_admission' %}{% if result.valid %}value="{{ result.value }}" />
> > ---
> > > 				<dt><label for="comment_admission">Admission date (MM-DD-YYYY)</label></dt><dd><input type="text" name="comment_admission" id="comment_admission" {% if results %}{% for result in results %}{% ifequal result.key 'comment_admission' %}{% if result.valid %}value="{{ result.value }}" />
> > 
> > ***************************
> > * Changes in revision 35 
> > ***************************
> > 
> > ------------------------------------------------------------------------
> > r35 | ting | 2009-03-25 22:05:46 -0500 (Wed, 25 Mar 2009) | 1 line
> > 
> > added code doc for index.py, TestValidation.py
> > ------------------------------------------------------------------------
> > 
> > Index: TestValidation.py
> > ===================================================================
> > 3,6d2
> > < # ------------
> > < # TestValidation.py
> > < # ------------
> > < 
> > 10,13d5
> > < # ---------
> > < # TestAdmin
> > < # ---------
> > < 
> > 15,17c7,9
> > <     # ------------
> > <     # phone_number
> > <     # ------------
> > ---
> > > 	"""
> > > 	Test phone number validation.
> > > 	"""
> > 30,32c22,25
> > <     # ------------
> > <     # phone_number_ext
> > <     # ------------
> > ---
> > > 
> > > 	"""
> > > 	Test phone number extension validation.
> > > 	"""
> > 41,43c34,37
> > <     # ------------
> > <     # email
> > <     # ------------
> > ---
> > > 
> > > 	"""
> > > 	Test e-mail validation.
> > > 	"""
> > 70,72c64,67
> > <     # ------------
> > <     # date
> > <     # ------------
> > ---
> > > 
> > > 	"""
> > > 	Test date validation.
> > > 	"""
> > 97,99c92,95
> > <     # ------------
> > <     # name
> > <     # ------------
> > ---
> > > 
> > > 	"""
> > > 	Test name validation.
> > > 	"""
> > 116,118c112,115
> > <     # ------------
> > <     # class_number
> > <     # ------------
> > ---
> > > 
> > > 	"""
> > > 	Test class number validation.
> > > 	"""
> > 137,139c134
> > <     # ------------
> > <     # number
> > <     # ------------
> > ---
> > > 
> > 147,149c142,145
> > <     # ------------
> > <     # comment
> > <     # ------------
> > ---
> > > 
> > > 	"""
> > > 	Test comment validation.
> > > 	"""
> > 153,155c149,151
> > <     # ------------
> > <     # Degree type
> > <     # ------------
> > ---
> > > 	"""
> > > 	Test degree validation.
> > > 	"""
> > 165,167c161,163
> > <     # ------------
> > <     # Citizen or Resident
> > <     # ------------
> > ---
> > > 	"""
> > > 	Test citizen/resident validation.
> > > 	"""
> > 177,179c173,175
> > <     # ------------
> > <     # Yes or No
> > <     # ------------
> > ---
> > > 	"""
> > > 	Test yes/no validation.
> > > 	"""
> > Index: index.py
> > ===================================================================
> > 7a8,10
> > > 	"""
> > > 	Default class if nothing is passed to the index.
> > > 	"""
> > 8a12,14
> > > 		"""
> > > 		Displays the class template.
> > > 		"""
> > 12a19,21
> > > 	"""
> > > 	Class for handling the applicant form and validation.
> > > 	"""
> > 13a23,25
> > > 		"""
> > > 		Constructor initializes results.
> > > 		"""
> > 16a29,31
> > > 		"""
> > > 		Displays the class template upon get request.
> > > 		"""
> > 19a35,37
> > > 		"""
> > > 		Validates form elements and will eventually submit the information to a database.
> > > 		"""
> > 24a43,45
> > > 		"""
> > > 		Renders the template.
> > > 		"""
> > 31a53,55
> > > 	"""
> > > 	Class for handling the instructor form and validation.
> > > 	"""
> > 32a57,59
> > > 		"""
> > > 		Constructor initializes results.
> > > 		"""
> > 35a63,65
> > > 		"""
> > > 		Displays the class template upon get request.
> > > 		"""
> > 38a69,71
> > > 		"""
> > > 		Validates form elements and will eventually submit the information to a database.
> > > 		"""
> > 43a77,79
> > > 		"""
> > > 		Renders the template.
> > > 		"""
> > 50a87,89
> > > 	"""
> > > 	Class for handling the admin form and validation.
> > > 	"""
> > 51a91,93
> > > 		"""
> > > 		Constructor initializes results.
> > > 		"""
> > 54a97,99
> > > 		"""
> > > 		Displays the class template upon get request.
> > > 		"""
> > 57a103,105
> > > 		"""
> > > 		Validates form elements and will eventually submit the information to a database.
> > > 		"""
> > 62a111,113
> > > 		"""
> > > 		Renders the template.
> > > 		"""
> > 69a121,123
> > > 	"""
> > > 	Validates each field entry upon get request.
> > > 	"""
> > 87a142,144
> > > 	"""
> > > 	Runs the program when called.
> > > 	"""
> > 
> > ***************************
> > * Changes in revision 36 
> > ***************************
> > 
> > ------------------------------------------------------------------------
> > r36 | ting | 2009-03-25 22:20:22 -0500 (Wed, 25 Mar 2009) | 1 line
> > 
> > updated code doc for validator.py, validation.py
> > ------------------------------------------------------------------------
> > 
> > Index: Validation.py
> > ===================================================================
> > 3,6d2
> > < # -------------
> > < # Validation.py
> > < # -------------
> > < 
> > 9,11d4
> > < # ------------
> > < # phone_number
> > < # ------------
> > 12a6,8
> > > 	"""
> > > 	Phone number validator.
> > > 	"""
> > 14,16c10
> > < # ----------------
> > < # phone_number_ext
> > < # ----------------
> > ---
> > > 
> > 17a12,14
> > > 	"""
> > > 	Phone number extension validator.
> > > 	"""
> > 19,21c16
> > < # ------------
> > < # email
> > < # ------------
> > ---
> > > 
> > 22a18,20
> > > 	"""
> > > 	E-mail address validator.
> > > 	"""
> > 24,26c22
> > < # ------------
> > < # date
> > < # ------------
> > ---
> > > 
> > 27a24,26
> > > 	"""
> > > 	Date validator.
> > > 	"""
> > 36,38c35
> > < # ------------
> > < # name
> > < # ------------
> > ---
> > > 
> > 39a37,39
> > > 	"""
> > > 	Name validator.
> > > 	"""
> > 41,43c41
> > < # ------------
> > < # class_number
> > < # ------------
> > ---
> > > 
> > 44a43,45
> > > 	"""
> > > 	Class number validator.
> > > 	"""
> > 46,48c47
> > < # ------------
> > < # number
> > < # ------------
> > ---
> > > 
> > 49a49,51
> > > 	"""
> > > 	Number validator.
> > > 	"""
> > 52,54d53
> > < # ------------
> > < # comment
> > < # ------------
> > 55a55,57
> > > 	"""
> > > 	Comment validator.
> > > 	"""
> > 58,60d59
> > < # ------------
> > < # Degree type
> > < # ------------
> > 61a61,63
> > > 	"""
> > > 	Degree validator.
> > > 	"""
> > 64,66d65
> > < # ------------
> > < # Citizen or Resident
> > < # ------------
> > 67a67,69
> > > 	"""
> > > 	Resident/Citizen validator.
> > > 	"""
> > 70,72d71
> > < # ------------
> > < # Yes or No
> > < # ------------
> > 73a73,75
> > > 	"""
> > > 	yes/no validator.
> > > 	"""
> > Index: TA1.txt
> > ===================================================================
> > Index: validator.py
> > ===================================================================
> > 4a5,7
> > > 	"""
> > > 	Generic validator class depending on form type.
> > > 	"""
> > 5a9,11
> > > 		"""
> > > 		Constructor validates k-v pairs found in form_data and returns results.
> > > 		"""
> > 18d23
> > < 				
> > 41d45
> > < 				#Admin switches	
> > 42a47
> > > 				#Admin switches	
> > 48,49d52
> > < 				
> > < 				
> > 
> > ***************************
> > * Changes in revision 37 
> > ***************************
> > 
> > ------------------------------------------------------------------------
> > r37 | ting | 2009-03-25 22:26:53 -0500 (Wed, 25 Mar 2009) | 1 line
> > 
> > fixed TestValidation indention problems, add TestValidation.html
> > ------------------------------------------------------------------------
> > 
> > Index: TestValidation.py
> > ===================================================================
> > Index: TestValidation.html
> > ===================================================================
> > 0a1,320
> > > 
> > > <!doctype html PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
> > > <html><head><title>Python: module TestValidation</title>
> > > </head><body bgcolor="#f0f0f8">
> > > 
> > > <table width="100%" cellspacing=0 cellpadding=2 border=0 summary="heading">
> > > <tr bgcolor="#7799ee">
> > > <td valign=bottom>&nbsp;<br>
> > > <font color="#ffffff" face="helvetica, arial">&nbsp;<br><big><big><strong>TestValidation</strong></big></big></font></td
> > > ><td align=right valign=bottom
> > > ><font color="#ffffff" face="helvetica, arial"><a href=".">index</a><br><a href="file:/home/ting/svn/cs373_pj5/TestValidation.py">/home/ting/svn/cs373_pj5/TestValidation.py</a></font></td></tr></table>
> > >     <p></p>
> > > <p>
> > > <table width="100%" cellspacing=0 cellpadding=2 border=0 summary="section">
> > > <tr bgcolor="#aa55cc">
> > > <td colspan=3 valign=bottom>&nbsp;<br>
> > > <font color="#fffff" face="helvetica, arial"><big><strong>Modules</strong></big></font></td></tr>
> > >     
> > > <tr><td bgcolor="#aa55cc"><tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</tt></td><td>&nbsp;</td>
> > > <td width="100%"><table width="100%" summary="list"><tr><td width="25%" valign=top><a href="Validation.html">Validation</a><br>
> > > </td><td width="25%" valign=top><a href="unittest.html">unittest</a><br>
> > > </td><td width="25%" valign=top></td><td width="25%" valign=top></td></tr></table></td></tr></table><p>
> > > <table width="100%" cellspacing=0 cellpadding=2 border=0 summary="section">
> > > <tr bgcolor="#ee77aa">
> > > <td colspan=3 valign=bottom>&nbsp;<br>
> > > <font color="#ffffff" face="helvetica, arial"><big><strong>Classes</strong></big></font></td></tr>
> > >     
> > > <tr><td bgcolor="#ee77aa"><tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</tt></td><td>&nbsp;</td>
> > > <td width="100%"><dl>
> > > <dt><font face="helvetica, arial"><a href="unittest.html#TestCase">unittest.TestCase</a>(<a href="__builtin__.html#object">__builtin__.object</a>)
> > > </font></dt><dd>
> > > <dl>
> > > <dt><font face="helvetica, arial"><a href="TestValidation.html#TestAdmin">TestAdmin</a>
> > > </font></dt></dl>
> > > </dd>
> > > </dl>
> > >  <p>
> > > <table width="100%" cellspacing=0 cellpadding=2 border=0 summary="section">
> > > <tr bgcolor="#ffc8d8">
> > > <td colspan=3 valign=bottom>&nbsp;<br>
> > > <font color="#000000" face="helvetica, arial"><a name="TestAdmin">class <strong>TestAdmin</strong></a>(<a href="unittest.html#TestCase">unittest.TestCase</a>)</font></td></tr>
> > >     
> > > <tr bgcolor="#ffc8d8"><td rowspan=2><tt>&nbsp;&nbsp;&nbsp;</tt></td>
> > > <td colspan=2><tt>Test&nbsp;phone&nbsp;number&nbsp;validation.<br>&nbsp;</tt></td></tr>
> > > <tr><td>&nbsp;</td>
> > > <td width="100%"><dl><dt>Method resolution order:</dt>
> > > <dd><a href="TestValidation.html#TestAdmin">TestAdmin</a></dd>
> > > <dd><a href="unittest.html#TestCase">unittest.TestCase</a></dd>
> > > <dd><a href="__builtin__.html#object">__builtin__.object</a></dd>
> > > </dl>
> > > <hr>
> > > Methods defined here:<br>
> > > <dl><dt><a name="TestAdmin-testPhoneNumber1"><strong>testPhoneNumber1</strong></a>(self)</dt></dl>
> > > 
> > > <dl><dt><a name="TestAdmin-testPhoneNumber2"><strong>testPhoneNumber2</strong></a>(self)</dt></dl>
> > > 
> > > <dl><dt><a name="TestAdmin-testPhoneNumber3"><strong>testPhoneNumber3</strong></a>(self)</dt></dl>
> > > 
> > > <dl><dt><a name="TestAdmin-testPhoneNumber4"><strong>testPhoneNumber4</strong></a>(self)</dt></dl>
> > > 
> > > <dl><dt><a name="TestAdmin-testPhoneNumber5"><strong>testPhoneNumber5</strong></a>(self)</dt></dl>
> > > 
> > > <dl><dt><a name="TestAdmin-testPhoneNumber6"><strong>testPhoneNumber6</strong></a>(self)</dt></dl>
> > > 
> > > <dl><dt><a name="TestAdmin-testcitizen1"><strong>testcitizen1</strong></a>(self)</dt></dl>
> > > 
> > > <dl><dt><a name="TestAdmin-testcitizen2"><strong>testcitizen2</strong></a>(self)</dt></dl>
> > > 
> > > <dl><dt><a name="TestAdmin-testcitizen3"><strong>testcitizen3</strong></a>(self)</dt></dl>
> > > 
> > > <dl><dt><a name="TestAdmin-testcitizen4"><strong>testcitizen4</strong></a>(self)</dt></dl>
> > > 
> > > <dl><dt><a name="TestAdmin-testclass_number1"><strong>testclass_number1</strong></a>(self)</dt></dl>
> > > 
> > > <dl><dt><a name="TestAdmin-testclass_number2"><strong>testclass_number2</strong></a>(self)</dt></dl>
> > > 
> > > <dl><dt><a name="TestAdmin-testclass_number3"><strong>testclass_number3</strong></a>(self)</dt></dl>
> > > 
> > > <dl><dt><a name="TestAdmin-testclass_number4"><strong>testclass_number4</strong></a>(self)</dt></dl>
> > > 
> > > <dl><dt><a name="TestAdmin-testclass_number5"><strong>testclass_number5</strong></a>(self)</dt></dl>
> > > 
> > > <dl><dt><a name="TestAdmin-testclass_number6"><strong>testclass_number6</strong></a>(self)</dt></dl>
> > > 
> > > <dl><dt><a name="TestAdmin-testclass_number7"><strong>testclass_number7</strong></a>(self)</dt></dl>
> > > 
> > > <dl><dt><a name="TestAdmin-testclass_number8"><strong>testclass_number8</strong></a>(self)</dt></dl>
> > > 
> > > <dl><dt><a name="TestAdmin-testclass_number9"><strong>testclass_number9</strong></a>(self)</dt></dl>
> > > 
> > > <dl><dt><a name="TestAdmin-testcomment1"><strong>testcomment1</strong></a>(self)</dt></dl>
> > > 
> > > <dl><dt><a name="TestAdmin-testdate1"><strong>testdate1</strong></a>(self)</dt></dl>
> > > 
> > > <dl><dt><a name="TestAdmin-testdate10"><strong>testdate10</strong></a>(self)</dt></dl>
> > > 
> > > <dl><dt><a name="TestAdmin-testdate11"><strong>testdate11</strong></a>(self)</dt></dl>
> > > 
> > > <dl><dt><a name="TestAdmin-testdate12"><strong>testdate12</strong></a>(self)</dt></dl>
> > > 
> > > <dl><dt><a name="TestAdmin-testdate2"><strong>testdate2</strong></a>(self)</dt></dl>
> > > 
> > > <dl><dt><a name="TestAdmin-testdate3"><strong>testdate3</strong></a>(self)</dt></dl>
> > > 
> > > <dl><dt><a name="TestAdmin-testdate4"><strong>testdate4</strong></a>(self)</dt></dl>
> > > 
> > > <dl><dt><a name="TestAdmin-testdate5"><strong>testdate5</strong></a>(self)</dt></dl>
> > > 
> > > <dl><dt><a name="TestAdmin-testdate6"><strong>testdate6</strong></a>(self)</dt></dl>
> > > 
> > > <dl><dt><a name="TestAdmin-testdate7"><strong>testdate7</strong></a>(self)</dt></dl>
> > > 
> > > <dl><dt><a name="TestAdmin-testdate8"><strong>testdate8</strong></a>(self)</dt></dl>
> > > 
> > > <dl><dt><a name="TestAdmin-testdate9"><strong>testdate9</strong></a>(self)</dt></dl>
> > > 
> > > <dl><dt><a name="TestAdmin-testdegree1"><strong>testdegree1</strong></a>(self)</dt></dl>
> > > 
> > > <dl><dt><a name="TestAdmin-testdegree2"><strong>testdegree2</strong></a>(self)</dt></dl>
> > > 
> > > <dl><dt><a name="TestAdmin-testdegree3"><strong>testdegree3</strong></a>(self)</dt></dl>
> > > 
> > > <dl><dt><a name="TestAdmin-testdegree4"><strong>testdegree4</strong></a>(self)</dt></dl>
> > > 
> > > <dl><dt><a name="TestAdmin-testemail1"><strong>testemail1</strong></a>(self)</dt></dl>
> > > 
> > > <dl><dt><a name="TestAdmin-testemail10"><strong>testemail10</strong></a>(self)</dt></dl>
> > > 
> > > <dl><dt><a name="TestAdmin-testemail11"><strong>testemail11</strong></a>(self)</dt></dl>
> > > 
> > > <dl><dt><a name="TestAdmin-testemail12"><strong>testemail12</strong></a>(self)</dt></dl>
> > > 
> > > <dl><dt><a name="TestAdmin-testemail13"><strong>testemail13</strong></a>(self)</dt></dl>
> > > 
> > > <dl><dt><a name="TestAdmin-testemail2"><strong>testemail2</strong></a>(self)</dt></dl>
> > > 
> > > <dl><dt><a name="TestAdmin-testemail3"><strong>testemail3</strong></a>(self)</dt></dl>
> > > 
> > > <dl><dt><a name="TestAdmin-testemail4"><strong>testemail4</strong></a>(self)</dt></dl>
> > > 
> > > <dl><dt><a name="TestAdmin-testemail5"><strong>testemail5</strong></a>(self)</dt></dl>
> > > 
> > > <dl><dt><a name="TestAdmin-testemail6"><strong>testemail6</strong></a>(self)</dt></dl>
> > > 
> > > <dl><dt><a name="TestAdmin-testemail7"><strong>testemail7</strong></a>(self)</dt></dl>
> > > 
> > > <dl><dt><a name="TestAdmin-testemail8"><strong>testemail8</strong></a>(self)</dt></dl>
> > > 
> > > <dl><dt><a name="TestAdmin-testemail9"><strong>testemail9</strong></a>(self)</dt></dl>
> > > 
> > > <dl><dt><a name="TestAdmin-testname1"><strong>testname1</strong></a>(self)</dt></dl>
> > > 
> > > <dl><dt><a name="TestAdmin-testname2"><strong>testname2</strong></a>(self)</dt></dl>
> > > 
> > > <dl><dt><a name="TestAdmin-testname3"><strong>testname3</strong></a>(self)</dt></dl>
> > > 
> > > <dl><dt><a name="TestAdmin-testname4"><strong>testname4</strong></a>(self)</dt></dl>
> > > 
> > > <dl><dt><a name="TestAdmin-testname5"><strong>testname5</strong></a>(self)</dt></dl>
> > > 
> > > <dl><dt><a name="TestAdmin-testname6"><strong>testname6</strong></a>(self)</dt></dl>
> > > 
> > > <dl><dt><a name="TestAdmin-testname7"><strong>testname7</strong></a>(self)</dt></dl>
> > > 
> > > <dl><dt><a name="TestAdmin-testname8"><strong>testname8</strong></a>(self)</dt></dl>
> > > 
> > > <dl><dt><a name="TestAdmin-testnumber1"><strong>testnumber1</strong></a>(self)</dt></dl>
> > > 
> > > <dl><dt><a name="TestAdmin-testnumber2"><strong>testnumber2</strong></a>(self)</dt></dl>
> > > 
> > > <dl><dt><a name="TestAdmin-testnumber3"><strong>testnumber3</strong></a>(self)</dt></dl>
> > > 
> > > <dl><dt><a name="TestAdmin-testphone_number_ext1"><strong>testphone_number_ext1</strong></a>(self)</dt></dl>
> > > 
> > > <dl><dt><a name="TestAdmin-testphone_number_ext2"><strong>testphone_number_ext2</strong></a>(self)</dt></dl>
> > > 
> > > <dl><dt><a name="TestAdmin-testphone_number_ext3"><strong>testphone_number_ext3</strong></a>(self)</dt></dl>
> > > 
> > > <dl><dt><a name="TestAdmin-testphone_number_ext4"><strong>testphone_number_ext4</strong></a>(self)</dt></dl>
> > > 
> > > <dl><dt><a name="TestAdmin-testyesno1"><strong>testyesno1</strong></a>(self)</dt></dl>
> > > 
> > > <dl><dt><a name="TestAdmin-testyesno2"><strong>testyesno2</strong></a>(self)</dt></dl>
> > > 
> > > <dl><dt><a name="TestAdmin-testyesno3"><strong>testyesno3</strong></a>(self)</dt></dl>
> > > 
> > > <dl><dt><a name="TestAdmin-testyesno4"><strong>testyesno4</strong></a>(self)</dt></dl>
> > > 
> > > <hr>
> > > Methods inherited from <a href="unittest.html#TestCase">unittest.TestCase</a>:<br>
> > > <dl><dt><a name="TestAdmin-__call__"><strong>__call__</strong></a>(self, *args, **kwds)</dt></dl>
> > > 
> > > <dl><dt><a name="TestAdmin-__init__"><strong>__init__</strong></a>(self, methodName<font color="#909090">='runTest'</font>)</dt><dd><tt>Create&nbsp;an&nbsp;instance&nbsp;of&nbsp;the&nbsp;class&nbsp;that&nbsp;will&nbsp;use&nbsp;the&nbsp;named&nbsp;test<br>
> > > method&nbsp;when&nbsp;executed.&nbsp;Raises&nbsp;a&nbsp;ValueError&nbsp;if&nbsp;the&nbsp;instance&nbsp;does<br>
> > > not&nbsp;have&nbsp;a&nbsp;method&nbsp;with&nbsp;the&nbsp;specified&nbsp;name.</tt></dd></dl>
> > > 
> > > <dl><dt><a name="TestAdmin-__repr__"><strong>__repr__</strong></a>(self)</dt></dl>
> > > 
> > > <dl><dt><a name="TestAdmin-__str__"><strong>__str__</strong></a>(self)</dt></dl>
> > > 
> > > <dl><dt><a name="TestAdmin-assertAlmostEqual"><strong>assertAlmostEqual</strong></a> = failUnlessAlmostEqual(self, first, second, places<font color="#909090">=7</font>, msg<font color="#909090">=None</font>)</dt><dd><tt>Fail&nbsp;if&nbsp;the&nbsp;two&nbsp;objects&nbsp;are&nbsp;unequal&nbsp;as&nbsp;determined&nbsp;by&nbsp;their<br>
> > > difference&nbsp;rounded&nbsp;to&nbsp;the&nbsp;given&nbsp;number&nbsp;of&nbsp;decimal&nbsp;places<br>
> > > (default&nbsp;7)&nbsp;and&nbsp;comparing&nbsp;to&nbsp;zero.<br>
> > > &nbsp;<br>
> > > Note&nbsp;that&nbsp;decimal&nbsp;places&nbsp;(from&nbsp;zero)&nbsp;are&nbsp;usually&nbsp;not&nbsp;the&nbsp;same<br>
> > > as&nbsp;significant&nbsp;digits&nbsp;(measured&nbsp;from&nbsp;the&nbsp;most&nbsp;signficant&nbsp;digit).</tt></dd></dl>
> > > 
> > > <dl><dt><a name="TestAdmin-assertAlmostEquals"><strong>assertAlmostEquals</strong></a> = failUnlessAlmostEqual(self, first, second, places<font color="#909090">=7</font>, msg<font color="#909090">=None</font>)</dt><dd><tt>Fail&nbsp;if&nbsp;the&nbsp;two&nbsp;objects&nbsp;are&nbsp;unequal&nbsp;as&nbsp;determined&nbsp;by&nbsp;their<br>
> > > difference&nbsp;rounded&nbsp;to&nbsp;the&nbsp;given&nbsp;number&nbsp;of&nbsp;decimal&nbsp;places<br>
> > > (default&nbsp;7)&nbsp;and&nbsp;comparing&nbsp;to&nbsp;zero.<br>
> > > &nbsp;<br>
> > > Note&nbsp;that&nbsp;decimal&nbsp;places&nbsp;(from&nbsp;zero)&nbsp;are&nbsp;usually&nbsp;not&nbsp;the&nbsp;same<br>
> > > as&nbsp;significant&nbsp;digits&nbsp;(measured&nbsp;from&nbsp;the&nbsp;most&nbsp;signficant&nbsp;digit).</tt></dd></dl>
> > > 
> > > <dl><dt><a name="TestAdmin-assertEqual"><strong>assertEqual</strong></a> = failUnlessEqual(self, first, second, msg<font color="#909090">=None</font>)</dt><dd><tt>Fail&nbsp;if&nbsp;the&nbsp;two&nbsp;objects&nbsp;are&nbsp;unequal&nbsp;as&nbsp;determined&nbsp;by&nbsp;the&nbsp;'=='<br>
> > > operator.</tt></dd></dl>
> > > 
> > > <dl><dt><a name="TestAdmin-assertEquals"><strong>assertEquals</strong></a> = failUnlessEqual(self, first, second, msg<font color="#909090">=None</font>)</dt><dd><tt>Fail&nbsp;if&nbsp;the&nbsp;two&nbsp;objects&nbsp;are&nbsp;unequal&nbsp;as&nbsp;determined&nbsp;by&nbsp;the&nbsp;'=='<br>
> > > operator.</tt></dd></dl>
> > > 
> > > <dl><dt><a name="TestAdmin-assertFalse"><strong>assertFalse</strong></a> = failIf(self, expr, msg<font color="#909090">=None</font>)</dt><dd><tt>Fail&nbsp;the&nbsp;test&nbsp;if&nbsp;the&nbsp;expression&nbsp;is&nbsp;true.</tt></dd></dl>
> > > 
> > > <dl><dt><a name="TestAdmin-assertNotAlmostEqual"><strong>assertNotAlmostEqual</strong></a> = failIfAlmostEqual(self, first, second, places<font color="#909090">=7</font>, msg<font color="#909090">=None</font>)</dt><dd><tt>Fail&nbsp;if&nbsp;the&nbsp;two&nbsp;objects&nbsp;are&nbsp;equal&nbsp;as&nbsp;determined&nbsp;by&nbsp;their<br>
> > > difference&nbsp;rounded&nbsp;to&nbsp;the&nbsp;given&nbsp;number&nbsp;of&nbsp;decimal&nbsp;places<br>
> > > (default&nbsp;7)&nbsp;and&nbsp;comparing&nbsp;to&nbsp;zero.<br>
> > > &nbsp;<br>
> > > Note&nbsp;that&nbsp;decimal&nbsp;places&nbsp;(from&nbsp;zero)&nbsp;are&nbsp;usually&nbsp;not&nbsp;the&nbsp;same<br>
> > > as&nbsp;significant&nbsp;digits&nbsp;(measured&nbsp;from&nbsp;the&nbsp;most&nbsp;signficant&nbsp;digit).</tt></dd></dl>
> > > 
> > > <dl><dt><a name="TestAdmin-assertNotAlmostEquals"><strong>assertNotAlmostEquals</strong></a> = failIfAlmostEqual(self, first, second, places<font color="#909090">=7</font>, msg<font color="#909090">=None</font>)</dt><dd><tt>Fail&nbsp;if&nbsp;the&nbsp;two&nbsp;objects&nbsp;are&nbsp;equal&nbsp;as&nbsp;determined&nbsp;by&nbsp;their<br>
> > > difference&nbsp;rounded&nbsp;to&nbsp;the&nbsp;given&nbsp;number&nbsp;of&nbsp;decimal&nbsp;places<br>
> > > (default&nbsp;7)&nbsp;and&nbsp;comparing&nbsp;to&nbsp;zero.<br>
> > > &nbsp;<br>
> > > Note&nbsp;that&nbsp;decimal&nbsp;places&nbsp;(from&nbsp;zero)&nbsp;are&nbsp;usually&nbsp;not&nbsp;the&nbsp;same<br>
> > > as&nbsp;significant&nbsp;digits&nbsp;(measured&nbsp;from&nbsp;the&nbsp;most&nbsp;signficant&nbsp;digit).</tt></dd></dl>
> > > 
> > > <dl><dt><a name="TestAdmin-assertNotEqual"><strong>assertNotEqual</strong></a> = failIfEqual(self, first, second, msg<font color="#909090">=None</font>)</dt><dd><tt>Fail&nbsp;if&nbsp;the&nbsp;two&nbsp;objects&nbsp;are&nbsp;equal&nbsp;as&nbsp;determined&nbsp;by&nbsp;the&nbsp;'=='<br>
> > > operator.</tt></dd></dl>
> > > 
> > > <dl><dt><a name="TestAdmin-assertNotEquals"><strong>assertNotEquals</strong></a> = failIfEqual(self, first, second, msg<font color="#909090">=None</font>)</dt><dd><tt>Fail&nbsp;if&nbsp;the&nbsp;two&nbsp;objects&nbsp;are&nbsp;equal&nbsp;as&nbsp;determined&nbsp;by&nbsp;the&nbsp;'=='<br>
> > > operator.</tt></dd></dl>
> > > 
> > > <dl><dt><a name="TestAdmin-assertRaises"><strong>assertRaises</strong></a> = failUnlessRaises(self, excClass, callableObj, *args, **kwargs)</dt><dd><tt>Fail&nbsp;unless&nbsp;an&nbsp;exception&nbsp;of&nbsp;class&nbsp;excClass&nbsp;is&nbsp;thrown<br>
> > > by&nbsp;callableObj&nbsp;when&nbsp;invoked&nbsp;with&nbsp;arguments&nbsp;args&nbsp;and&nbsp;keyword<br>
> > > arguments&nbsp;kwargs.&nbsp;If&nbsp;a&nbsp;different&nbsp;type&nbsp;of&nbsp;exception&nbsp;is<br>
> > > thrown,&nbsp;it&nbsp;will&nbsp;not&nbsp;be&nbsp;caught,&nbsp;and&nbsp;the&nbsp;test&nbsp;case&nbsp;will&nbsp;be<br>
> > > deemed&nbsp;to&nbsp;have&nbsp;suffered&nbsp;an&nbsp;error,&nbsp;exactly&nbsp;as&nbsp;for&nbsp;an<br>
> > > unexpected&nbsp;exception.</tt></dd></dl>
> > > 
> > > <dl><dt><a name="TestAdmin-assertTrue"><strong>assertTrue</strong></a> = failUnless(self, expr, msg<font color="#909090">=None</font>)</dt><dd><tt>Fail&nbsp;the&nbsp;test&nbsp;unless&nbsp;the&nbsp;expression&nbsp;is&nbsp;true.</tt></dd></dl>
> > > 
> > > <dl><dt><a name="TestAdmin-assert_"><strong>assert_</strong></a> = failUnless(self, expr, msg<font color="#909090">=None</font>)</dt><dd><tt>Fail&nbsp;the&nbsp;test&nbsp;unless&nbsp;the&nbsp;expression&nbsp;is&nbsp;true.</tt></dd></dl>
> > > 
> > > <dl><dt><a name="TestAdmin-countTestCases"><strong>countTestCases</strong></a>(self)</dt></dl>
> > > 
> > > <dl><dt><a name="TestAdmin-debug"><strong>debug</strong></a>(self)</dt><dd><tt>Run&nbsp;the&nbsp;test&nbsp;without&nbsp;collecting&nbsp;errors&nbsp;in&nbsp;a&nbsp;TestResult</tt></dd></dl>
> > > 
> > > <dl><dt><a name="TestAdmin-defaultTestResult"><strong>defaultTestResult</strong></a>(self)</dt></dl>
> > > 
> > > <dl><dt><a name="TestAdmin-fail"><strong>fail</strong></a>(self, msg<font color="#909090">=None</font>)</dt><dd><tt>Fail&nbsp;immediately,&nbsp;with&nbsp;the&nbsp;given&nbsp;message.</tt></dd></dl>
> > > 
> > > <dl><dt><a name="TestAdmin-failIf"><strong>failIf</strong></a>(self, expr, msg<font color="#909090">=None</font>)</dt><dd><tt>Fail&nbsp;the&nbsp;test&nbsp;if&nbsp;the&nbsp;expression&nbsp;is&nbsp;true.</tt></dd></dl>
> > > 
> > > <dl><dt><a name="TestAdmin-failIfAlmostEqual"><strong>failIfAlmostEqual</strong></a>(self, first, second, places<font color="#909090">=7</font>, msg<font color="#909090">=None</font>)</dt><dd><tt>Fail&nbsp;if&nbsp;the&nbsp;two&nbsp;objects&nbsp;are&nbsp;equal&nbsp;as&nbsp;determined&nbsp;by&nbsp;their<br>
> > > difference&nbsp;rounded&nbsp;to&nbsp;the&nbsp;given&nbsp;number&nbsp;of&nbsp;decimal&nbsp;places<br>
> > > (default&nbsp;7)&nbsp;and&nbsp;comparing&nbsp;to&nbsp;zero.<br>
> > > &nbsp;<br>
> > > Note&nbsp;that&nbsp;decimal&nbsp;places&nbsp;(from&nbsp;zero)&nbsp;are&nbsp;usually&nbsp;not&nbsp;the&nbsp;same<br>
> > > as&nbsp;significant&nbsp;digits&nbsp;(measured&nbsp;from&nbsp;the&nbsp;most&nbsp;signficant&nbsp;digit).</tt></dd></dl>
> > > 
> > > <dl><dt><a name="TestAdmin-failIfEqual"><strong>failIfEqual</strong></a>(self, first, second, msg<font color="#909090">=None</font>)</dt><dd><tt>Fail&nbsp;if&nbsp;the&nbsp;two&nbsp;objects&nbsp;are&nbsp;equal&nbsp;as&nbsp;determined&nbsp;by&nbsp;the&nbsp;'=='<br>
> > > operator.</tt></dd></dl>
> > > 
> > > <dl><dt><a name="TestAdmin-failUnless"><strong>failUnless</strong></a>(self, expr, msg<font color="#909090">=None</font>)</dt><dd><tt>Fail&nbsp;the&nbsp;test&nbsp;unless&nbsp;the&nbsp;expression&nbsp;is&nbsp;true.</tt></dd></dl>
> > > 
> > > <dl><dt><a name="TestAdmin-failUnlessAlmostEqual"><strong>failUnlessAlmostEqual</strong></a>(self, first, second, places<font color="#909090">=7</font>, msg<font color="#909090">=None</font>)</dt><dd><tt>Fail&nbsp;if&nbsp;the&nbsp;two&nbsp;objects&nbsp;are&nbsp;unequal&nbsp;as&nbsp;determined&nbsp;by&nbsp;their<br>
> > > difference&nbsp;rounded&nbsp;to&nbsp;the&nbsp;given&nbsp;number&nbsp;of&nbsp;decimal&nbsp;places<br>
> > > (default&nbsp;7)&nbsp;and&nbsp;comparing&nbsp;to&nbsp;zero.<br>
> > > &nbsp;<br>
> > > Note&nbsp;that&nbsp;decimal&nbsp;places&nbsp;(from&nbsp;zero)&nbsp;are&nbsp;usually&nbsp;not&nbsp;the&nbsp;same<br>
> > > as&nbsp;significant&nbsp;digits&nbsp;(measured&nbsp;from&nbsp;the&nbsp;most&nbsp;signficant&nbsp;digit).</tt></dd></dl>
> > > 
> > > <dl><dt><a name="TestAdmin-failUnlessEqual"><strong>failUnlessEqual</strong></a>(self, first, second, msg<font color="#909090">=None</font>)</dt><dd><tt>Fail&nbsp;if&nbsp;the&nbsp;two&nbsp;objects&nbsp;are&nbsp;unequal&nbsp;as&nbsp;determined&nbsp;by&nbsp;the&nbsp;'=='<br>
> > > operator.</tt></dd></dl>
> > > 
> > > <dl><dt><a name="TestAdmin-failUnlessRaises"><strong>failUnlessRaises</strong></a>(self, excClass, callableObj, *args, **kwargs)</dt><dd><tt>Fail&nbsp;unless&nbsp;an&nbsp;exception&nbsp;of&nbsp;class&nbsp;excClass&nbsp;is&nbsp;thrown<br>
> > > by&nbsp;callableObj&nbsp;when&nbsp;invoked&nbsp;with&nbsp;arguments&nbsp;args&nbsp;and&nbsp;keyword<br>
> > > arguments&nbsp;kwargs.&nbsp;If&nbsp;a&nbsp;different&nbsp;type&nbsp;of&nbsp;exception&nbsp;is<br>
> > > thrown,&nbsp;it&nbsp;will&nbsp;not&nbsp;be&nbsp;caught,&nbsp;and&nbsp;the&nbsp;test&nbsp;case&nbsp;will&nbsp;be<br>
> > > deemed&nbsp;to&nbsp;have&nbsp;suffered&nbsp;an&nbsp;error,&nbsp;exactly&nbsp;as&nbsp;for&nbsp;an<br>
> > > unexpected&nbsp;exception.</tt></dd></dl>
> > > 
> > > <dl><dt><a name="TestAdmin-id"><strong>id</strong></a>(self)</dt></dl>
> > > 
> > > <dl><dt><a name="TestAdmin-run"><strong>run</strong></a>(self, result<font color="#909090">=None</font>)</dt></dl>
> > > 
> > > <dl><dt><a name="TestAdmin-setUp"><strong>setUp</strong></a>(self)</dt><dd><tt>Hook&nbsp;method&nbsp;for&nbsp;setting&nbsp;up&nbsp;the&nbsp;test&nbsp;fixture&nbsp;before&nbsp;exercising&nbsp;it.</tt></dd></dl>
> > > 
> > > <dl><dt><a name="TestAdmin-shortDescription"><strong>shortDescription</strong></a>(self)</dt><dd><tt>Returns&nbsp;a&nbsp;one-line&nbsp;description&nbsp;of&nbsp;the&nbsp;test,&nbsp;or&nbsp;None&nbsp;if&nbsp;no<br>
> > > description&nbsp;has&nbsp;been&nbsp;provided.<br>
> > > &nbsp;<br>
> > > The&nbsp;default&nbsp;implementation&nbsp;of&nbsp;this&nbsp;method&nbsp;returns&nbsp;the&nbsp;first&nbsp;line&nbsp;of<br>
> > > the&nbsp;specified&nbsp;test&nbsp;method's&nbsp;docstring.</tt></dd></dl>
> > > 
> > > <dl><dt><a name="TestAdmin-tearDown"><strong>tearDown</strong></a>(self)</dt><dd><tt>Hook&nbsp;method&nbsp;for&nbsp;deconstructing&nbsp;the&nbsp;test&nbsp;fixture&nbsp;after&nbsp;testing&nbsp;it.</tt></dd></dl>
> > > 
> > > <hr>
> > > Data descriptors inherited from <a href="unittest.html#TestCase">unittest.TestCase</a>:<br>
> > > <dl><dt><strong>__dict__</strong></dt>
> > > <dd><tt>dictionary&nbsp;for&nbsp;instance&nbsp;variables&nbsp;(if&nbsp;defined)</tt></dd>
> > > </dl>
> > > <dl><dt><strong>__weakref__</strong></dt>
> > > <dd><tt>list&nbsp;of&nbsp;weak&nbsp;references&nbsp;to&nbsp;the&nbsp;object&nbsp;(if&nbsp;defined)</tt></dd>
> > > </dl>
> > > <hr>
> > > Data and other attributes inherited from <a href="unittest.html#TestCase">unittest.TestCase</a>:<br>
> > > <dl><dt><strong>failureException</strong> = &lt;type 'exceptions.AssertionError'&gt;<dd><tt>Assertion&nbsp;failed.</tt></dl>
> > > 
> > > </td></tr></table></td></tr></table>
> > > </body></html>
> > \ No newline at end of file
> > 
> > ***************************
> > * Changes in revision 38 
> > ***************************
> > 
> > ------------------------------------------------------------------------
> > r38 | ting | 2009-03-25 22:38:20 -0500 (Wed, 25 Mar 2009) | 1 line
> > 
> > adding validation/validator html doc
> > ------------------------------------------------------------------------
> > 
> > Index: validator.html
> > ===================================================================
> > 0a1,45
> > > 
> > > <!doctype html PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
> > > <html><head><title>Python: module validator</title>
> > > </head><body bgcolor="#f0f0f8">
> > > 
> > > <table width="100%" cellspacing=0 cellpadding=2 border=0 summary="heading">
> > > <tr bgcolor="#7799ee">
> > > <td valign=bottom>&nbsp;<br>
> > > <font color="#ffffff" face="helvetica, arial">&nbsp;<br><big><big><strong>validator</strong></big></big></font></td
> > > ><td align=right valign=bottom
> > > ><font color="#ffffff" face="helvetica, arial"><a href=".">index</a><br><a href="file:/home/ting/svn/cs373_pj5/validator.py">/home/ting/svn/cs373_pj5/validator.py</a></font></td></tr></table>
> > >     <p></p>
> > > <p>
> > > <table width="100%" cellspacing=0 cellpadding=2 border=0 summary="section">
> > > <tr bgcolor="#aa55cc">
> > > <td colspan=3 valign=bottom>&nbsp;<br>
> > > <font color="#fffff" face="helvetica, arial"><big><strong>Modules</strong></big></font></td></tr>
> > >     
> > > <tr><td bgcolor="#aa55cc"><tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</tt></td><td>&nbsp;</td>
> > > <td width="100%"><table width="100%" summary="list"><tr><td width="25%" valign=top><a href="Validation.html">Validation</a><br>
> > > </td><td width="25%" valign=top><a href="re.html">re</a><br>
> > > </td><td width="25%" valign=top></td><td width="25%" valign=top></td></tr></table></td></tr></table><p>
> > > <table width="100%" cellspacing=0 cellpadding=2 border=0 summary="section">
> > > <tr bgcolor="#ee77aa">
> > > <td colspan=3 valign=bottom>&nbsp;<br>
> > > <font color="#ffffff" face="helvetica, arial"><big><strong>Classes</strong></big></font></td></tr>
> > >     
> > > <tr><td bgcolor="#ee77aa"><tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</tt></td><td>&nbsp;</td>
> > > <td width="100%"><dl>
> > > <dt><font face="helvetica, arial"><a href="validator.html#Validator">Validator</a>
> > > </font></dt></dl>
> > >  <p>
> > > <table width="100%" cellspacing=0 cellpadding=2 border=0 summary="section">
> > > <tr bgcolor="#ffc8d8">
> > > <td colspan=3 valign=bottom>&nbsp;<br>
> > > <font color="#000000" face="helvetica, arial"><a name="Validator">class <strong>Validator</strong></a></font></td></tr>
> > >     
> > > <tr bgcolor="#ffc8d8"><td rowspan=2><tt>&nbsp;&nbsp;&nbsp;</tt></td>
> > > <td colspan=2><tt>Generic&nbsp;validator&nbsp;class&nbsp;depending&nbsp;on&nbsp;form&nbsp;type.<br>&nbsp;</tt></td></tr>
> > > <tr><td>&nbsp;</td>
> > > <td width="100%">Methods defined here:<br>
> > > <dl><dt><a name="Validator-__init__"><strong>__init__</strong></a>(self, form_data)</dt><dd><tt>Constructor&nbsp;validates&nbsp;k-v&nbsp;pairs&nbsp;found&nbsp;in&nbsp;form_data&nbsp;and&nbsp;returns&nbsp;results.</tt></dd></dl>
> > > 
> > > </td></tr></table></td></tr></table>
> > > </body></html>
> > \ No newline at end of file
> > Index: Validation.html
> > ===================================================================
> > 0a1,40
> > > 
> > > <!doctype html PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
> > > <html><head><title>Python: module Validation</title>
> > > </head><body bgcolor="#f0f0f8">
> > > 
> > > <table width="100%" cellspacing=0 cellpadding=2 border=0 summary="heading">
> > > <tr bgcolor="#7799ee">
> > > <td valign=bottom>&nbsp;<br>
> > > <font color="#ffffff" face="helvetica, arial">&nbsp;<br><big><big><strong>Validation</strong></big></big></font></td
> > > ><td align=right valign=bottom
> > > ><font color="#ffffff" face="helvetica, arial"><a href=".">index</a><br><a href="file:/home/ting/svn/cs373_pj5/Validation.py">/home/ting/svn/cs373_pj5/Validation.py</a></font></td></tr></table>
> > >     <p></p>
> > > <p>
> > > <table width="100%" cellspacing=0 cellpadding=2 border=0 summary="section">
> > > <tr bgcolor="#aa55cc">
> > > <td colspan=3 valign=bottom>&nbsp;<br>
> > > <font color="#fffff" face="helvetica, arial"><big><strong>Modules</strong></big></font></td></tr>
> > >     
> > > <tr><td bgcolor="#aa55cc"><tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</tt></td><td>&nbsp;</td>
> > > <td width="100%"><table width="100%" summary="list"><tr><td width="25%" valign=top><a href="re.html">re</a><br>
> > > </td><td width="25%" valign=top></td><td width="25%" valign=top></td><td width="25%" valign=top></td></tr></table></td></tr></table><p>
> > > <table width="100%" cellspacing=0 cellpadding=2 border=0 summary="section">
> > > <tr bgcolor="#eeaa77">
> > > <td colspan=3 valign=bottom>&nbsp;<br>
> > > <font color="#ffffff" face="helvetica, arial"><big><strong>Functions</strong></big></font></td></tr>
> > >     
> > > <tr><td bgcolor="#eeaa77"><tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</tt></td><td>&nbsp;</td>
> > > <td width="100%"><dl><dt><a name="-citizen"><strong>citizen</strong></a>(s)</dt><dd><tt>Resident/Citizen&nbsp;validator.</tt></dd></dl>
> > >  <dl><dt><a name="-class_number"><strong>class_number</strong></a>(s)</dt><dd><tt>Class&nbsp;number&nbsp;validator.</tt></dd></dl>
> > >  <dl><dt><a name="-comment"><strong>comment</strong></a>(s)</dt><dd><tt>Comment&nbsp;validator.</tt></dd></dl>
> > >  <dl><dt><a name="-date"><strong>date</strong></a>(s)</dt><dd><tt>Date&nbsp;validator.</tt></dd></dl>
> > >  <dl><dt><a name="-degree_type"><strong>degree_type</strong></a>(s)</dt><dd><tt>Degree&nbsp;validator.</tt></dd></dl>
> > >  <dl><dt><a name="-email"><strong>email</strong></a>(s)</dt><dd><tt>E-mail&nbsp;address&nbsp;validator.</tt></dd></dl>
> > >  <dl><dt><a name="-name"><strong>name</strong></a>(s)</dt><dd><tt>Name&nbsp;validator.</tt></dd></dl>
> > >  <dl><dt><a name="-number"><strong>number</strong></a>(s)</dt><dd><tt>Number&nbsp;validator.</tt></dd></dl>
> > >  <dl><dt><a name="-phone_number"><strong>phone_number</strong></a>(s)</dt><dd><tt>Phone&nbsp;number&nbsp;validator.</tt></dd></dl>
> > >  <dl><dt><a name="-phone_number_ext"><strong>phone_number_ext</strong></a>(s)</dt><dd><tt>Phone&nbsp;number&nbsp;extension&nbsp;validator.</tt></dd></dl>
> > >  <dl><dt><a name="-yes_no"><strong>yes_no</strong></a>(s)</dt><dd><tt>yes/no&nbsp;validator.</tt></dd></dl>
> > > </td></tr></table>
> > > </body></html>
> > \ No newline at end of file
> > 
> 

***************************
* Changes in revision 42 
***************************

------------------------------------------------------------------------
r42 | estesox | 2009-03-25 22:59:40 -0500 (Wed, 25 Mar 2009) | 2 lines

"Validation.pydoc.html"

------------------------------------------------------------------------

Index: Validation.pydoc.html
===================================================================
0a1,40
> 
> <!doctype html PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
> <html><head><title>Python: module Validation</title>
> </head><body bgcolor="#f0f0f8">
> 
> <table width="100%" cellspacing=0 cellpadding=2 border=0 summary="heading">
> <tr bgcolor="#7799ee">
> <td valign=bottom>&nbsp;<br>
> <font color="#ffffff" face="helvetica, arial">&nbsp;<br><big><big><strong>Validation</strong></big></big></font></td
> ><td align=right valign=bottom
> ><font color="#ffffff" face="helvetica, arial"><a href=".">index</a><br><a href="file:/cygdrive/c/CS/cs373/5/Validation.py">/cygdrive/c/CS/cs373/5/Validation.py</a></font></td></tr></table>
>     <p></p>
> <p>
> <table width="100%" cellspacing=0 cellpadding=2 border=0 summary="section">
> <tr bgcolor="#aa55cc">
> <td colspan=3 valign=bottom>&nbsp;<br>
> <font color="#fffff" face="helvetica, arial"><big><strong>Modules</strong></big></font></td></tr>
>     
> <tr><td bgcolor="#aa55cc"><tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</tt></td><td>&nbsp;</td>
> <td width="100%"><table width="100%" summary="list"><tr><td width="25%" valign=top><a href="re.html">re</a><br>
> </td><td width="25%" valign=top></td><td width="25%" valign=top></td><td width="25%" valign=top></td></tr></table></td></tr></table><p>
> <table width="100%" cellspacing=0 cellpadding=2 border=0 summary="section">
> <tr bgcolor="#eeaa77">
> <td colspan=3 valign=bottom>&nbsp;<br>
> <font color="#ffffff" face="helvetica, arial"><big><strong>Functions</strong></big></font></td></tr>
>     
> <tr><td bgcolor="#eeaa77"><tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</tt></td><td>&nbsp;</td>
> <td width="100%"><dl><dt><a name="-citizen"><strong>citizen</strong></a>(s)</dt><dd><tt>Resident/Citizen&nbsp;validator.</tt></dd></dl>
>  <dl><dt><a name="-class_number"><strong>class_number</strong></a>(s)</dt><dd><tt>Class&nbsp;number&nbsp;validator.</tt></dd></dl>
>  <dl><dt><a name="-comment"><strong>comment</strong></a>(s)</dt><dd><tt>Comment&nbsp;validator.</tt></dd></dl>
>  <dl><dt><a name="-date"><strong>date</strong></a>(s)</dt><dd><tt>Date&nbsp;validator.</tt></dd></dl>
>  <dl><dt><a name="-degree_type"><strong>degree_type</strong></a>(s)</dt><dd><tt>Degree&nbsp;validator.</tt></dd></dl>
>  <dl><dt><a name="-email"><strong>email</strong></a>(s)</dt><dd><tt>E-mail&nbsp;address&nbsp;validator.</tt></dd></dl>
>  <dl><dt><a name="-name"><strong>name</strong></a>(s)</dt><dd><tt>Name&nbsp;validator.</tt></dd></dl>
>  <dl><dt><a name="-number"><strong>number</strong></a>(s)</dt><dd><tt>Number&nbsp;validator.</tt></dd></dl>
>  <dl><dt><a name="-phone_number"><strong>phone_number</strong></a>(s)</dt><dd><tt>Phone&nbsp;number&nbsp;validator.</tt></dd></dl>
>  <dl><dt><a name="-phone_number_ext"><strong>phone_number_ext</strong></a>(s)</dt><dd><tt>Phone&nbsp;number&nbsp;extension&nbsp;validator.</tt></dd></dl>
>  <dl><dt><a name="-yes_no"><strong>yes_no</strong></a>(s)</dt><dd><tt>yes/no&nbsp;validator.</tt></dd></dl>
> </td></tr></table>
> </body></html>
\ No newline at end of file

***************************
* Changes in revision 43 
***************************

------------------------------------------------------------------------
r43 | estesox | 2009-03-25 23:01:24 -0500 (Wed, 25 Mar 2009) | 2 lines

validator.pydoc.html

------------------------------------------------------------------------

Index: validator.pydoc.html
===================================================================
0a1,45
> 
> <!doctype html PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
> <html><head><title>Python: module validator</title>
> </head><body bgcolor="#f0f0f8">
> 
> <table width="100%" cellspacing=0 cellpadding=2 border=0 summary="heading">
> <tr bgcolor="#7799ee">
> <td valign=bottom>&nbsp;<br>
> <font color="#ffffff" face="helvetica, arial">&nbsp;<br><big><big><strong>validator</strong></big></big></font></td
> ><td align=right valign=bottom
> ><font color="#ffffff" face="helvetica, arial"><a href=".">index</a><br><a href="file:/cygdrive/c/CS/cs373/5/validator.py">/cygdrive/c/CS/cs373/5/validator.py</a></font></td></tr></table>
>     <p></p>
> <p>
> <table width="100%" cellspacing=0 cellpadding=2 border=0 summary="section">
> <tr bgcolor="#aa55cc">
> <td colspan=3 valign=bottom>&nbsp;<br>
> <font color="#fffff" face="helvetica, arial"><big><strong>Modules</strong></big></font></td></tr>
>     
> <tr><td bgcolor="#aa55cc"><tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</tt></td><td>&nbsp;</td>
> <td width="100%"><table width="100%" summary="list"><tr><td width="25%" valign=top><a href="Validation.html">Validation</a><br>
> </td><td width="25%" valign=top><a href="re.html">re</a><br>
> </td><td width="25%" valign=top></td><td width="25%" valign=top></td></tr></table></td></tr></table><p>
> <table width="100%" cellspacing=0 cellpadding=2 border=0 summary="section">
> <tr bgcolor="#ee77aa">
> <td colspan=3 valign=bottom>&nbsp;<br>
> <font color="#ffffff" face="helvetica, arial"><big><strong>Classes</strong></big></font></td></tr>
>     
> <tr><td bgcolor="#ee77aa"><tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</tt></td><td>&nbsp;</td>
> <td width="100%"><dl>
> <dt><font face="helvetica, arial"><a href="validator.html#Validator">Validator</a>
> </font></dt></dl>
>  <p>
> <table width="100%" cellspacing=0 cellpadding=2 border=0 summary="section">
> <tr bgcolor="#ffc8d8">
> <td colspan=3 valign=bottom>&nbsp;<br>
> <font color="#000000" face="helvetica, arial"><a name="Validator">class <strong>Validator</strong></a></font></td></tr>
>     
> <tr bgcolor="#ffc8d8"><td rowspan=2><tt>&nbsp;&nbsp;&nbsp;</tt></td>
> <td colspan=2><tt>Generic&nbsp;validator&nbsp;class&nbsp;depending&nbsp;on&nbsp;form&nbsp;type.<br>&nbsp;</tt></td></tr>
> <tr><td>&nbsp;</td>
> <td width="100%">Methods defined here:<br>
> <dl><dt><a name="Validator-__init__"><strong>__init__</strong></a>(self, form_data)</dt><dd><tt>Constructor&nbsp;validates&nbsp;k-v&nbsp;pairs&nbsp;found&nbsp;in&nbsp;form_data&nbsp;and&nbsp;returns&nbsp;results.</tt></dd></dl>
> 
> </td></tr></table></td></tr></table>
> </body></html>
\ No newline at end of file

***************************
* Changes in revision 44 
***************************

------------------------------------------------------------------------
r44 | estesox | 2009-03-25 23:04:32 -0500 (Wed, 25 Mar 2009) | 2 lines

index.pydoc.html

------------------------------------------------------------------------

Index: index.pydoc.html
===================================================================
0a1,122
> 
> <!doctype html PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
> <html><head><title>Python: module index</title>
> </head><body bgcolor="#f0f0f8">
> 
> <table width="100%" cellspacing=0 cellpadding=2 border=0 summary="heading">
> <tr bgcolor="#7799ee">
> <td valign=bottom>&nbsp;<br>
> <font color="#ffffff" face="helvetica, arial">&nbsp;<br><big><big><strong>index</strong></big></big></font></td
> ><td align=right valign=bottom
> ><font color="#ffffff" face="helvetica, arial"><a href=".">index</a><br><a href="file:/cygdrive/c/CS/cs373/5/index.py">/cygdrive/c/CS/cs373/5/index.py</a></font></td></tr></table>
>     <p></p>
> <p>
> <table width="100%" cellspacing=0 cellpadding=2 border=0 summary="section">
> <tr bgcolor="#aa55cc">
> <td colspan=3 valign=bottom>&nbsp;<br>
> <font color="#fffff" face="helvetica, arial"><big><strong>Modules</strong></big></font></td></tr>
>     
> <tr><td bgcolor="#aa55cc"><tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</tt></td><td>&nbsp;</td>
> <td width="100%"><table width="100%" summary="list"><tr><td width="25%" valign=top><a href="os.html">os</a><br>
> </td><td width="25%" valign=top></td><td width="25%" valign=top></td><td width="25%" valign=top></td></tr></table></td></tr></table><p>
> <table width="100%" cellspacing=0 cellpadding=2 border=0 summary="section">
> <tr bgcolor="#ee77aa">
> <td colspan=3 valign=bottom>&nbsp;<br>
> <font color="#ffffff" face="helvetica, arial"><big><strong>Classes</strong></big></font></td></tr>
>     
> <tr><td bgcolor="#ee77aa"><tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</tt></td><td>&nbsp;</td>
> <td width="100%"><dl>
> <dt><font face="helvetica, arial"><a href="index.html#Admin">Admin</a>
> </font></dt><dt><font face="helvetica, arial"><a href="index.html#Applicant">Applicant</a>
> </font></dt><dt><font face="helvetica, arial"><a href="index.html#Index">Index</a>
> </font></dt><dt><font face="helvetica, arial"><a href="index.html#Instructor">Instructor</a>
> </font></dt><dt><font face="helvetica, arial"><a href="index.html#Is_valid">Is_valid</a>
> </font></dt></dl>
>  <p>
> <table width="100%" cellspacing=0 cellpadding=2 border=0 summary="section">
> <tr bgcolor="#ffc8d8">
> <td colspan=3 valign=bottom>&nbsp;<br>
> <font color="#000000" face="helvetica, arial"><a name="Admin">class <strong>Admin</strong></a></font></td></tr>
>     
> <tr bgcolor="#ffc8d8"><td rowspan=2><tt>&nbsp;&nbsp;&nbsp;</tt></td>
> <td colspan=2><tt>Class&nbsp;for&nbsp;handling&nbsp;the&nbsp;admin&nbsp;form&nbsp;and&nbsp;validation.<br>&nbsp;</tt></td></tr>
> <tr><td>&nbsp;</td>
> <td width="100%">Methods defined here:<br>
> <dl><dt><a name="Admin-__init__"><strong>__init__</strong></a>(self)</dt><dd><tt>Constructor&nbsp;initializes&nbsp;results.</tt></dd></dl>
> 
> <dl><dt><a name="Admin-get"><strong>get</strong></a>(self)</dt><dd><tt>Displays&nbsp;the&nbsp;class&nbsp;template&nbsp;upon&nbsp;get&nbsp;request.</tt></dd></dl>
> 
> <dl><dt><a name="Admin-post"><strong>post</strong></a>(self)</dt><dd><tt>Validates&nbsp;form&nbsp;elements&nbsp;and&nbsp;will&nbsp;eventually&nbsp;submit&nbsp;the&nbsp;information&nbsp;to&nbsp;a&nbsp;database.</tt></dd></dl>
> 
> <dl><dt><a name="Admin-template"><strong>template</strong></a>(self)</dt><dd><tt>Renders&nbsp;the&nbsp;template.</tt></dd></dl>
> 
> </td></tr></table> <p>
> <table width="100%" cellspacing=0 cellpadding=2 border=0 summary="section">
> <tr bgcolor="#ffc8d8">
> <td colspan=3 valign=bottom>&nbsp;<br>
> <font color="#000000" face="helvetica, arial"><a name="Applicant">class <strong>Applicant</strong></a></font></td></tr>
>     
> <tr bgcolor="#ffc8d8"><td rowspan=2><tt>&nbsp;&nbsp;&nbsp;</tt></td>
> <td colspan=2><tt>Class&nbsp;for&nbsp;handling&nbsp;the&nbsp;applicant&nbsp;form&nbsp;and&nbsp;validation.<br>&nbsp;</tt></td></tr>
> <tr><td>&nbsp;</td>
> <td width="100%">Methods defined here:<br>
> <dl><dt><a name="Applicant-__init__"><strong>__init__</strong></a>(self)</dt><dd><tt>Constructor&nbsp;initializes&nbsp;results.</tt></dd></dl>
> 
> <dl><dt><a name="Applicant-get"><strong>get</strong></a>(self)</dt><dd><tt>Displays&nbsp;the&nbsp;class&nbsp;template&nbsp;upon&nbsp;get&nbsp;request.</tt></dd></dl>
> 
> <dl><dt><a name="Applicant-post"><strong>post</strong></a>(self)</dt><dd><tt>Validates&nbsp;form&nbsp;elements&nbsp;and&nbsp;will&nbsp;eventually&nbsp;submit&nbsp;the&nbsp;information&nbsp;to&nbsp;a&nbsp;database.</tt></dd></dl>
> 
> <dl><dt><a name="Applicant-template"><strong>template</strong></a>(self)</dt><dd><tt>Renders&nbsp;the&nbsp;template.</tt></dd></dl>
> 
> </td></tr></table> <p>
> <table width="100%" cellspacing=0 cellpadding=2 border=0 summary="section">
> <tr bgcolor="#ffc8d8">
> <td colspan=3 valign=bottom>&nbsp;<br>
> <font color="#000000" face="helvetica, arial"><a name="Index">class <strong>Index</strong></a></font></td></tr>
>     
> <tr bgcolor="#ffc8d8"><td rowspan=2><tt>&nbsp;&nbsp;&nbsp;</tt></td>
> <td colspan=2><tt>Default&nbsp;class&nbsp;if&nbsp;nothing&nbsp;is&nbsp;passed&nbsp;to&nbsp;the&nbsp;index.<br>&nbsp;</tt></td></tr>
> <tr><td>&nbsp;</td>
> <td width="100%">Methods defined here:<br>
> <dl><dt><a name="Index-get"><strong>get</strong></a>(self)</dt><dd><tt>Displays&nbsp;the&nbsp;class&nbsp;template.</tt></dd></dl>
> 
> </td></tr></table> <p>
> <table width="100%" cellspacing=0 cellpadding=2 border=0 summary="section">
> <tr bgcolor="#ffc8d8">
> <td colspan=3 valign=bottom>&nbsp;<br>
> <font color="#000000" face="helvetica, arial"><a name="Instructor">class <strong>Instructor</strong></a></font></td></tr>
>     
> <tr bgcolor="#ffc8d8"><td rowspan=2><tt>&nbsp;&nbsp;&nbsp;</tt></td>
> <td colspan=2><tt>Class&nbsp;for&nbsp;handling&nbsp;the&nbsp;instructor&nbsp;form&nbsp;and&nbsp;validation.<br>&nbsp;</tt></td></tr>
> <tr><td>&nbsp;</td>
> <td width="100%">Methods defined here:<br>
> <dl><dt><a name="Instructor-__init__"><strong>__init__</strong></a>(self)</dt><dd><tt>Constructor&nbsp;initializes&nbsp;results.</tt></dd></dl>
> 
> <dl><dt><a name="Instructor-get"><strong>get</strong></a>(self)</dt><dd><tt>Displays&nbsp;the&nbsp;class&nbsp;template&nbsp;upon&nbsp;get&nbsp;request.</tt></dd></dl>
> 
> <dl><dt><a name="Instructor-post"><strong>post</strong></a>(self)</dt><dd><tt>Validates&nbsp;form&nbsp;elements&nbsp;and&nbsp;will&nbsp;eventually&nbsp;submit&nbsp;the&nbsp;information&nbsp;to&nbsp;a&nbsp;database.</tt></dd></dl>
> 
> <dl><dt><a name="Instructor-template"><strong>template</strong></a>(self)</dt><dd><tt>Renders&nbsp;the&nbsp;template.</tt></dd></dl>
> 
> </td></tr></table> <p>
> <table width="100%" cellspacing=0 cellpadding=2 border=0 summary="section">
> <tr bgcolor="#ffc8d8">
> <td colspan=3 valign=bottom>&nbsp;<br>
> <font color="#000000" face="helvetica, arial"><a name="Is_valid">class <strong>Is_valid</strong></a></font></td></tr>
>     
> <tr bgcolor="#ffc8d8"><td rowspan=2><tt>&nbsp;&nbsp;&nbsp;</tt></td>
> <td colspan=2><tt>Validates&nbsp;each&nbsp;field&nbsp;entry&nbsp;upon&nbsp;get&nbsp;request.<br>&nbsp;</tt></td></tr>
> <tr><td>&nbsp;</td>
> <td width="100%">Methods defined here:<br>
> <dl><dt><a name="Is_valid-get"><strong>get</strong></a>(self)</dt></dl>
> 
> </td></tr></table></td></tr></table><p>
> <table width="100%" cellspacing=0 cellpadding=2 border=0 summary="section">
> <tr bgcolor="#eeaa77">
> <td colspan=3 valign=bottom>&nbsp;<br>
> <font color="#ffffff" face="helvetica, arial"><big><strong>Functions</strong></big></font></td></tr>
>     
> <tr><td bgcolor="#eeaa77"><tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</tt></td><td>&nbsp;</td>
> <td width="100%"><dl><dt><a name="-main"><strong>main</strong></a>()</dt><dd><tt>Runs&nbsp;the&nbsp;program&nbsp;when&nbsp;called.</tt></dd></dl>
> </td></tr></table>
> </body></html>
\ No newline at end of file

***************************
* Changes in revision 45 
***************************

------------------------------------------------------------------------
r45 | estesox | 2009-03-25 23:06:39 -0500 (Wed, 25 Mar 2009) | 2 lines

TestValidation.pydoc.html

------------------------------------------------------------------------

Index: TestValidation.pydoc.html
===================================================================
0a1,170
> 
> <!doctype html PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
> <html><head><title>Python: module TestValidation</title>
> </head><body bgcolor="#f0f0f8">
> 
> <table width="100%" cellspacing=0 cellpadding=2 border=0 summary="heading">
> <tr bgcolor="#7799ee">
> <td valign=bottom>&nbsp;<br>
> <font color="#ffffff" face="helvetica, arial">&nbsp;<br><big><big><strong>TestValidation</strong></big></big></font></td
> ><td align=right valign=bottom
> ><font color="#ffffff" face="helvetica, arial"><a href=".">index</a><br><a href="file:/cygdrive/c/CS/cs373/5/TestValidation.py">/cygdrive/c/CS/cs373/5/TestValidation.py</a></font></td></tr></table>
>     <p></p>
> <p>
> <table width="100%" cellspacing=0 cellpadding=2 border=0 summary="section">
> <tr bgcolor="#ee77aa">
> <td colspan=3 valign=bottom>&nbsp;<br>
> <font color="#ffffff" face="helvetica, arial"><big><strong>Classes</strong></big></font></td></tr>
>     
> <tr><td bgcolor="#ee77aa"><tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</tt></td><td>&nbsp;</td>
> <td width="100%"><dl>
> <dt><font face="helvetica, arial"><a href="TestValidation.html#TestAdmin">TestAdmin</a>
> </font></dt></dl>
>  <p>
> <table width="100%" cellspacing=0 cellpadding=2 border=0 summary="section">
> <tr bgcolor="#ffc8d8">
> <td colspan=3 valign=bottom>&nbsp;<br>
> <font color="#000000" face="helvetica, arial"><a name="TestAdmin">class <strong>TestAdmin</strong></a></font></td></tr>
>     
> <tr bgcolor="#ffc8d8"><td rowspan=2><tt>&nbsp;&nbsp;&nbsp;</tt></td>
> <td colspan=2><tt>Test&nbsp;phone&nbsp;number&nbsp;validation.<br>&nbsp;</tt></td></tr>
> <tr><td>&nbsp;</td>
> <td width="100%">Methods defined here:<br>
> <dl><dt><a name="TestAdmin-testPhoneNumber1"><strong>testPhoneNumber1</strong></a>(self)</dt></dl>
> 
> <dl><dt><a name="TestAdmin-testPhoneNumber2"><strong>testPhoneNumber2</strong></a>(self)</dt></dl>
> 
> <dl><dt><a name="TestAdmin-testPhoneNumber3"><strong>testPhoneNumber3</strong></a>(self)</dt></dl>
> 
> <dl><dt><a name="TestAdmin-testPhoneNumber4"><strong>testPhoneNumber4</strong></a>(self)</dt></dl>
> 
> <dl><dt><a name="TestAdmin-testPhoneNumber5"><strong>testPhoneNumber5</strong></a>(self)</dt></dl>
> 
> <dl><dt><a name="TestAdmin-testPhoneNumber6"><strong>testPhoneNumber6</strong></a>(self)</dt></dl>
> 
> <dl><dt><a name="TestAdmin-testcitizen1"><strong>testcitizen1</strong></a>(self)</dt></dl>
> 
> <dl><dt><a name="TestAdmin-testcitizen2"><strong>testcitizen2</strong></a>(self)</dt></dl>
> 
> <dl><dt><a name="TestAdmin-testcitizen3"><strong>testcitizen3</strong></a>(self)</dt></dl>
> 
> <dl><dt><a name="TestAdmin-testcitizen4"><strong>testcitizen4</strong></a>(self)</dt></dl>
> 
> <dl><dt><a name="TestAdmin-testclass_number1"><strong>testclass_number1</strong></a>(self)</dt></dl>
> 
> <dl><dt><a name="TestAdmin-testclass_number2"><strong>testclass_number2</strong></a>(self)</dt></dl>
> 
> <dl><dt><a name="TestAdmin-testclass_number3"><strong>testclass_number3</strong></a>(self)</dt></dl>
> 
> <dl><dt><a name="TestAdmin-testclass_number4"><strong>testclass_number4</strong></a>(self)</dt></dl>
> 
> <dl><dt><a name="TestAdmin-testclass_number5"><strong>testclass_number5</strong></a>(self)</dt></dl>
> 
> <dl><dt><a name="TestAdmin-testclass_number6"><strong>testclass_number6</strong></a>(self)</dt></dl>
> 
> <dl><dt><a name="TestAdmin-testclass_number7"><strong>testclass_number7</strong></a>(self)</dt></dl>
> 
> <dl><dt><a name="TestAdmin-testclass_number8"><strong>testclass_number8</strong></a>(self)</dt></dl>
> 
> <dl><dt><a name="TestAdmin-testclass_number9"><strong>testclass_number9</strong></a>(self)</dt></dl>
> 
> <dl><dt><a name="TestAdmin-testcomment1"><strong>testcomment1</strong></a>(self)</dt></dl>
> 
> <dl><dt><a name="TestAdmin-testdate1"><strong>testdate1</strong></a>(self)</dt></dl>
> 
> <dl><dt><a name="TestAdmin-testdate10"><strong>testdate10</strong></a>(self)</dt></dl>
> 
> <dl><dt><a name="TestAdmin-testdate11"><strong>testdate11</strong></a>(self)</dt></dl>
> 
> <dl><dt><a name="TestAdmin-testdate12"><strong>testdate12</strong></a>(self)</dt></dl>
> 
> <dl><dt><a name="TestAdmin-testdate2"><strong>testdate2</strong></a>(self)</dt></dl>
> 
> <dl><dt><a name="TestAdmin-testdate3"><strong>testdate3</strong></a>(self)</dt></dl>
> 
> <dl><dt><a name="TestAdmin-testdate4"><strong>testdate4</strong></a>(self)</dt></dl>
> 
> <dl><dt><a name="TestAdmin-testdate5"><strong>testdate5</strong></a>(self)</dt></dl>
> 
> <dl><dt><a name="TestAdmin-testdate6"><strong>testdate6</strong></a>(self)</dt></dl>
> 
> <dl><dt><a name="TestAdmin-testdate7"><strong>testdate7</strong></a>(self)</dt></dl>
> 
> <dl><dt><a name="TestAdmin-testdate8"><strong>testdate8</strong></a>(self)</dt></dl>
> 
> <dl><dt><a name="TestAdmin-testdate9"><strong>testdate9</strong></a>(self)</dt></dl>
> 
> <dl><dt><a name="TestAdmin-testdegree1"><strong>testdegree1</strong></a>(self)</dt></dl>
> 
> <dl><dt><a name="TestAdmin-testdegree2"><strong>testdegree2</strong></a>(self)</dt></dl>
> 
> <dl><dt><a name="TestAdmin-testdegree3"><strong>testdegree3</strong></a>(self)</dt></dl>
> 
> <dl><dt><a name="TestAdmin-testdegree4"><strong>testdegree4</strong></a>(self)</dt></dl>
> 
> <dl><dt><a name="TestAdmin-testemail1"><strong>testemail1</strong></a>(self)</dt></dl>
> 
> <dl><dt><a name="TestAdmin-testemail10"><strong>testemail10</strong></a>(self)</dt></dl>
> 
> <dl><dt><a name="TestAdmin-testemail11"><strong>testemail11</strong></a>(self)</dt></dl>
> 
> <dl><dt><a name="TestAdmin-testemail12"><strong>testemail12</strong></a>(self)</dt></dl>
> 
> <dl><dt><a name="TestAdmin-testemail13"><strong>testemail13</strong></a>(self)</dt></dl>
> 
> <dl><dt><a name="TestAdmin-testemail2"><strong>testemail2</strong></a>(self)</dt></dl>
> 
> <dl><dt><a name="TestAdmin-testemail3"><strong>testemail3</strong></a>(self)</dt></dl>
> 
> <dl><dt><a name="TestAdmin-testemail4"><strong>testemail4</strong></a>(self)</dt></dl>
> 
> <dl><dt><a name="TestAdmin-testemail5"><strong>testemail5</strong></a>(self)</dt></dl>
> 
> <dl><dt><a name="TestAdmin-testemail6"><strong>testemail6</strong></a>(self)</dt></dl>
> 
> <dl><dt><a name="TestAdmin-testemail7"><strong>testemail7</strong></a>(self)</dt></dl>
> 
> <dl><dt><a name="TestAdmin-testemail8"><strong>testemail8</strong></a>(self)</dt></dl>
> 
> <dl><dt><a name="TestAdmin-testemail9"><strong>testemail9</strong></a>(self)</dt></dl>
> 
> <dl><dt><a name="TestAdmin-testname1"><strong>testname1</strong></a>(self)</dt></dl>
> 
> <dl><dt><a name="TestAdmin-testname2"><strong>testname2</strong></a>(self)</dt></dl>
> 
> <dl><dt><a name="TestAdmin-testname3"><strong>testname3</strong></a>(self)</dt></dl>
> 
> <dl><dt><a name="TestAdmin-testname4"><strong>testname4</strong></a>(self)</dt></dl>
> 
> <dl><dt><a name="TestAdmin-testname5"><strong>testname5</strong></a>(self)</dt></dl>
> 
> <dl><dt><a name="TestAdmin-testname6"><strong>testname6</strong></a>(self)</dt></dl>
> 
> <dl><dt><a name="TestAdmin-testname7"><strong>testname7</strong></a>(self)</dt></dl>
> 
> <dl><dt><a name="TestAdmin-testname8"><strong>testname8</strong></a>(self)</dt></dl>
> 
> <dl><dt><a name="TestAdmin-testnumber1"><strong>testnumber1</strong></a>(self)</dt></dl>
> 
> <dl><dt><a name="TestAdmin-testnumber2"><strong>testnumber2</strong></a>(self)</dt></dl>
> 
> <dl><dt><a name="TestAdmin-testnumber3"><strong>testnumber3</strong></a>(self)</dt></dl>
> 
> <dl><dt><a name="TestAdmin-testphone_number_ext1"><strong>testphone_number_ext1</strong></a>(self)</dt></dl>
> 
> <dl><dt><a name="TestAdmin-testphone_number_ext2"><strong>testphone_number_ext2</strong></a>(self)</dt></dl>
> 
> <dl><dt><a name="TestAdmin-testphone_number_ext3"><strong>testphone_number_ext3</strong></a>(self)</dt></dl>
> 
> <dl><dt><a name="TestAdmin-testphone_number_ext4"><strong>testphone_number_ext4</strong></a>(self)</dt></dl>
> 
> <dl><dt><a name="TestAdmin-testyesno1"><strong>testyesno1</strong></a>(self)</dt></dl>
> 
> <dl><dt><a name="TestAdmin-testyesno2"><strong>testyesno2</strong></a>(self)</dt></dl>
> 
> <dl><dt><a name="TestAdmin-testyesno3"><strong>testyesno3</strong></a>(self)</dt></dl>
> 
> <dl><dt><a name="TestAdmin-testyesno4"><strong>testyesno4</strong></a>(self)</dt></dl>
> 
> </td></tr></table></td></tr></table>
> </body></html>
\ No newline at end of file

***************************
* Changes in revision 46 
***************************

------------------------------------------------------------------------
r46 | estesox | 2009-03-25 23:17:16 -0500 (Wed, 25 Mar 2009) | 2 lines

already had a pydoc for TestValidation.py

------------------------------------------------------------------------

Index: TestValidation.pydoc.html
===================================================================
1,170d0
< 
< <!doctype html PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
< <html><head><title>Python: module TestValidation</title>
< </head><body bgcolor="#f0f0f8">
< 
< <table width="100%" cellspacing=0 cellpadding=2 border=0 summary="heading">
< <tr bgcolor="#7799ee">
< <td valign=bottom>&nbsp;<br>
< <font color="#ffffff" face="helvetica, arial">&nbsp;<br><big><big><strong>TestValidation</strong></big></big></font></td
< ><td align=right valign=bottom
< ><font color="#ffffff" face="helvetica, arial"><a href=".">index</a><br><a href="file:/cygdrive/c/CS/cs373/5/TestValidation.py">/cygdrive/c/CS/cs373/5/TestValidation.py</a></font></td></tr></table>
<     <p></p>
< <p>
< <table width="100%" cellspacing=0 cellpadding=2 border=0 summary="section">
< <tr bgcolor="#ee77aa">
< <td colspan=3 valign=bottom>&nbsp;<br>
< <font color="#ffffff" face="helvetica, arial"><big><strong>Classes</strong></big></font></td></tr>
<     
< <tr><td bgcolor="#ee77aa"><tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</tt></td><td>&nbsp;</td>
< <td width="100%"><dl>
< <dt><font face="helvetica, arial"><a href="TestValidation.html#TestAdmin">TestAdmin</a>
< </font></dt></dl>
<  <p>
< <table width="100%" cellspacing=0 cellpadding=2 border=0 summary="section">
< <tr bgcolor="#ffc8d8">
< <td colspan=3 valign=bottom>&nbsp;<br>
< <font color="#000000" face="helvetica, arial"><a name="TestAdmin">class <strong>TestAdmin</strong></a></font></td></tr>
<     
< <tr bgcolor="#ffc8d8"><td rowspan=2><tt>&nbsp;&nbsp;&nbsp;</tt></td>
< <td colspan=2><tt>Test&nbsp;phone&nbsp;number&nbsp;validation.<br>&nbsp;</tt></td></tr>
< <tr><td>&nbsp;</td>
< <td width="100%">Methods defined here:<br>
< <dl><dt><a name="TestAdmin-testPhoneNumber1"><strong>testPhoneNumber1</strong></a>(self)</dt></dl>
< 
< <dl><dt><a name="TestAdmin-testPhoneNumber2"><strong>testPhoneNumber2</strong></a>(self)</dt></dl>
< 
< <dl><dt><a name="TestAdmin-testPhoneNumber3"><strong>testPhoneNumber3</strong></a>(self)</dt></dl>
< 
< <dl><dt><a name="TestAdmin-testPhoneNumber4"><strong>testPhoneNumber4</strong></a>(self)</dt></dl>
< 
< <dl><dt><a name="TestAdmin-testPhoneNumber5"><strong>testPhoneNumber5</strong></a>(self)</dt></dl>
< 
< <dl><dt><a name="TestAdmin-testPhoneNumber6"><strong>testPhoneNumber6</strong></a>(self)</dt></dl>
< 
< <dl><dt><a name="TestAdmin-testcitizen1"><strong>testcitizen1</strong></a>(self)</dt></dl>
< 
< <dl><dt><a name="TestAdmin-testcitizen2"><strong>testcitizen2</strong></a>(self)</dt></dl>
< 
< <dl><dt><a name="TestAdmin-testcitizen3"><strong>testcitizen3</strong></a>(self)</dt></dl>
< 
< <dl><dt><a name="TestAdmin-testcitizen4"><strong>testcitizen4</strong></a>(self)</dt></dl>
< 
< <dl><dt><a name="TestAdmin-testclass_number1"><strong>testclass_number1</strong></a>(self)</dt></dl>
< 
< <dl><dt><a name="TestAdmin-testclass_number2"><strong>testclass_number2</strong></a>(self)</dt></dl>
< 
< <dl><dt><a name="TestAdmin-testclass_number3"><strong>testclass_number3</strong></a>(self)</dt></dl>
< 
< <dl><dt><a name="TestAdmin-testclass_number4"><strong>testclass_number4</strong></a>(self)</dt></dl>
< 
< <dl><dt><a name="TestAdmin-testclass_number5"><strong>testclass_number5</strong></a>(self)</dt></dl>
< 
< <dl><dt><a name="TestAdmin-testclass_number6"><strong>testclass_number6</strong></a>(self)</dt></dl>
< 
< <dl><dt><a name="TestAdmin-testclass_number7"><strong>testclass_number7</strong></a>(self)</dt></dl>
< 
< <dl><dt><a name="TestAdmin-testclass_number8"><strong>testclass_number8</strong></a>(self)</dt></dl>
< 
< <dl><dt><a name="TestAdmin-testclass_number9"><strong>testclass_number9</strong></a>(self)</dt></dl>
< 
< <dl><dt><a name="TestAdmin-testcomment1"><strong>testcomment1</strong></a>(self)</dt></dl>
< 
< <dl><dt><a name="TestAdmin-testdate1"><strong>testdate1</strong></a>(self)</dt></dl>
< 
< <dl><dt><a name="TestAdmin-testdate10"><strong>testdate10</strong></a>(self)</dt></dl>
< 
< <dl><dt><a name="TestAdmin-testdate11"><strong>testdate11</strong></a>(self)</dt></dl>
< 
< <dl><dt><a name="TestAdmin-testdate12"><strong>testdate12</strong></a>(self)</dt></dl>
< 
< <dl><dt><a name="TestAdmin-testdate2"><strong>testdate2</strong></a>(self)</dt></dl>
< 
< <dl><dt><a name="TestAdmin-testdate3"><strong>testdate3</strong></a>(self)</dt></dl>
< 
< <dl><dt><a name="TestAdmin-testdate4"><strong>testdate4</strong></a>(self)</dt></dl>
< 
< <dl><dt><a name="TestAdmin-testdate5"><strong>testdate5</strong></a>(self)</dt></dl>
< 
< <dl><dt><a name="TestAdmin-testdate6"><strong>testdate6</strong></a>(self)</dt></dl>
< 
< <dl><dt><a name="TestAdmin-testdate7"><strong>testdate7</strong></a>(self)</dt></dl>
< 
< <dl><dt><a name="TestAdmin-testdate8"><strong>testdate8</strong></a>(self)</dt></dl>
< 
< <dl><dt><a name="TestAdmin-testdate9"><strong>testdate9</strong></a>(self)</dt></dl>
< 
< <dl><dt><a name="TestAdmin-testdegree1"><strong>testdegree1</strong></a>(self)</dt></dl>
< 
< <dl><dt><a name="TestAdmin-testdegree2"><strong>testdegree2</strong></a>(self)</dt></dl>
< 
< <dl><dt><a name="TestAdmin-testdegree3"><strong>testdegree3</strong></a>(self)</dt></dl>
< 
< <dl><dt><a name="TestAdmin-testdegree4"><strong>testdegree4</strong></a>(self)</dt></dl>
< 
< <dl><dt><a name="TestAdmin-testemail1"><strong>testemail1</strong></a>(self)</dt></dl>
< 
< <dl><dt><a name="TestAdmin-testemail10"><strong>testemail10</strong></a>(self)</dt></dl>
< 
< <dl><dt><a name="TestAdmin-testemail11"><strong>testemail11</strong></a>(self)</dt></dl>
< 
< <dl><dt><a name="TestAdmin-testemail12"><strong>testemail12</strong></a>(self)</dt></dl>
< 
< <dl><dt><a name="TestAdmin-testemail13"><strong>testemail13</strong></a>(self)</dt></dl>
< 
< <dl><dt><a name="TestAdmin-testemail2"><strong>testemail2</strong></a>(self)</dt></dl>
< 
< <dl><dt><a name="TestAdmin-testemail3"><strong>testemail3</strong></a>(self)</dt></dl>
< 
< <dl><dt><a name="TestAdmin-testemail4"><strong>testemail4</strong></a>(self)</dt></dl>
< 
< <dl><dt><a name="TestAdmin-testemail5"><strong>testemail5</strong></a>(self)</dt></dl>
< 
< <dl><dt><a name="TestAdmin-testemail6"><strong>testemail6</strong></a>(self)</dt></dl>
< 
< <dl><dt><a name="TestAdmin-testemail7"><strong>testemail7</strong></a>(self)</dt></dl>
< 
< <dl><dt><a name="TestAdmin-testemail8"><strong>testemail8</strong></a>(self)</dt></dl>
< 
< <dl><dt><a name="TestAdmin-testemail9"><strong>testemail9</strong></a>(self)</dt></dl>
< 
< <dl><dt><a name="TestAdmin-testname1"><strong>testname1</strong></a>(self)</dt></dl>
< 
< <dl><dt><a name="TestAdmin-testname2"><strong>testname2</strong></a>(self)</dt></dl>
< 
< <dl><dt><a name="TestAdmin-testname3"><strong>testname3</strong></a>(self)</dt></dl>
< 
< <dl><dt><a name="TestAdmin-testname4"><strong>testname4</strong></a>(self)</dt></dl>
< 
< <dl><dt><a name="TestAdmin-testname5"><strong>testname5</strong></a>(self)</dt></dl>
< 
< <dl><dt><a name="TestAdmin-testname6"><strong>testname6</strong></a>(self)</dt></dl>
< 
< <dl><dt><a name="TestAdmin-testname7"><strong>testname7</strong></a>(self)</dt></dl>
< 
< <dl><dt><a name="TestAdmin-testname8"><strong>testname8</strong></a>(self)</dt></dl>
< 
< <dl><dt><a name="TestAdmin-testnumber1"><strong>testnumber1</strong></a>(self)</dt></dl>
< 
< <dl><dt><a name="TestAdmin-testnumber2"><strong>testnumber2</strong></a>(self)</dt></dl>
< 
< <dl><dt><a name="TestAdmin-testnumber3"><strong>testnumber3</strong></a>(self)</dt></dl>
< 
< <dl><dt><a name="TestAdmin-testphone_number_ext1"><strong>testphone_number_ext1</strong></a>(self)</dt></dl>
< 
< <dl><dt><a name="TestAdmin-testphone_number_ext2"><strong>testphone_number_ext2</strong></a>(self)</dt></dl>
< 
< <dl><dt><a name="TestAdmin-testphone_number_ext3"><strong>testphone_number_ext3</strong></a>(self)</dt></dl>
< 
< <dl><dt><a name="TestAdmin-testphone_number_ext4"><strong>testphone_number_ext4</strong></a>(self)</dt></dl>
< 
< <dl><dt><a name="TestAdmin-testyesno1"><strong>testyesno1</strong></a>(self)</dt></dl>
< 
< <dl><dt><a name="TestAdmin-testyesno2"><strong>testyesno2</strong></a>(self)</dt></dl>
< 
< <dl><dt><a name="TestAdmin-testyesno3"><strong>testyesno3</strong></a>(self)</dt></dl>
< 
< <dl><dt><a name="TestAdmin-testyesno4"><strong>testyesno4</strong></a>(self)</dt></dl>
< 
< </td></tr></table></td></tr></table>
< </body></html>
\ No newline at end of file

***************************
* Changes in revision 47 
***************************

------------------------------------------------------------------------
r47 | estesox | 2009-03-25 23:18:46 -0500 (Wed, 25 Mar 2009) | 2 lines

already had pydocs of validator.py and Validation.py

------------------------------------------------------------------------

Index: validator.pydoc.html
===================================================================
1,45d0
< 
< <!doctype html PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
< <html><head><title>Python: module validator</title>
< </head><body bgcolor="#f0f0f8">
< 
< <table width="100%" cellspacing=0 cellpadding=2 border=0 summary="heading">
< <tr bgcolor="#7799ee">
< <td valign=bottom>&nbsp;<br>
< <font color="#ffffff" face="helvetica, arial">&nbsp;<br><big><big><strong>validator</strong></big></big></font></td
< ><td align=right valign=bottom
< ><font color="#ffffff" face="helvetica, arial"><a href=".">index</a><br><a href="file:/cygdrive/c/CS/cs373/5/validator.py">/cygdrive/c/CS/cs373/5/validator.py</a></font></td></tr></table>
<     <p></p>
< <p>
< <table width="100%" cellspacing=0 cellpadding=2 border=0 summary="section">
< <tr bgcolor="#aa55cc">
< <td colspan=3 valign=bottom>&nbsp;<br>
< <font color="#fffff" face="helvetica, arial"><big><strong>Modules</strong></big></font></td></tr>
<     
< <tr><td bgcolor="#aa55cc"><tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</tt></td><td>&nbsp;</td>
< <td width="100%"><table width="100%" summary="list"><tr><td width="25%" valign=top><a href="Validation.html">Validation</a><br>
< </td><td width="25%" valign=top><a href="re.html">re</a><br>
< </td><td width="25%" valign=top></td><td width="25%" valign=top></td></tr></table></td></tr></table><p>
< <table width="100%" cellspacing=0 cellpadding=2 border=0 summary="section">
< <tr bgcolor="#ee77aa">
< <td colspan=3 valign=bottom>&nbsp;<br>
< <font color="#ffffff" face="helvetica, arial"><big><strong>Classes</strong></big></font></td></tr>
<     
< <tr><td bgcolor="#ee77aa"><tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</tt></td><td>&nbsp;</td>
< <td width="100%"><dl>
< <dt><font face="helvetica, arial"><a href="validator.html#Validator">Validator</a>
< </font></dt></dl>
<  <p>
< <table width="100%" cellspacing=0 cellpadding=2 border=0 summary="section">
< <tr bgcolor="#ffc8d8">
< <td colspan=3 valign=bottom>&nbsp;<br>
< <font color="#000000" face="helvetica, arial"><a name="Validator">class <strong>Validator</strong></a></font></td></tr>
<     
< <tr bgcolor="#ffc8d8"><td rowspan=2><tt>&nbsp;&nbsp;&nbsp;</tt></td>
< <td colspan=2><tt>Generic&nbsp;validator&nbsp;class&nbsp;depending&nbsp;on&nbsp;form&nbsp;type.<br>&nbsp;</tt></td></tr>
< <tr><td>&nbsp;</td>
< <td width="100%">Methods defined here:<br>
< <dl><dt><a name="Validator-__init__"><strong>__init__</strong></a>(self, form_data)</dt><dd><tt>Constructor&nbsp;validates&nbsp;k-v&nbsp;pairs&nbsp;found&nbsp;in&nbsp;form_data&nbsp;and&nbsp;returns&nbsp;results.</tt></dd></dl>
< 
< </td></tr></table></td></tr></table>
< </body></html>
\ No newline at end of file
Index: Validation.pydoc.html
===================================================================
1,40d0
< 
< <!doctype html PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
< <html><head><title>Python: module Validation</title>
< </head><body bgcolor="#f0f0f8">
< 
< <table width="100%" cellspacing=0 cellpadding=2 border=0 summary="heading">
< <tr bgcolor="#7799ee">
< <td valign=bottom>&nbsp;<br>
< <font color="#ffffff" face="helvetica, arial">&nbsp;<br><big><big><strong>Validation</strong></big></big></font></td
< ><td align=right valign=bottom
< ><font color="#ffffff" face="helvetica, arial"><a href=".">index</a><br><a href="file:/cygdrive/c/CS/cs373/5/Validation.py">/cygdrive/c/CS/cs373/5/Validation.py</a></font></td></tr></table>
<     <p></p>
< <p>
< <table width="100%" cellspacing=0 cellpadding=2 border=0 summary="section">
< <tr bgcolor="#aa55cc">
< <td colspan=3 valign=bottom>&nbsp;<br>
< <font color="#fffff" face="helvetica, arial"><big><strong>Modules</strong></big></font></td></tr>
<     
< <tr><td bgcolor="#aa55cc"><tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</tt></td><td>&nbsp;</td>
< <td width="100%"><table width="100%" summary="list"><tr><td width="25%" valign=top><a href="re.html">re</a><br>
< </td><td width="25%" valign=top></td><td width="25%" valign=top></td><td width="25%" valign=top></td></tr></table></td></tr></table><p>
< <table width="100%" cellspacing=0 cellpadding=2 border=0 summary="section">
< <tr bgcolor="#eeaa77">
< <td colspan=3 valign=bottom>&nbsp;<br>
< <font color="#ffffff" face="helvetica, arial"><big><strong>Functions</strong></big></font></td></tr>
<     
< <tr><td bgcolor="#eeaa77"><tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</tt></td><td>&nbsp;</td>
< <td width="100%"><dl><dt><a name="-citizen"><strong>citizen</strong></a>(s)</dt><dd><tt>Resident/Citizen&nbsp;validator.</tt></dd></dl>
<  <dl><dt><a name="-class_number"><strong>class_number</strong></a>(s)</dt><dd><tt>Class&nbsp;number&nbsp;validator.</tt></dd></dl>
<  <dl><dt><a name="-comment"><strong>comment</strong></a>(s)</dt><dd><tt>Comment&nbsp;validator.</tt></dd></dl>
<  <dl><dt><a name="-date"><strong>date</strong></a>(s)</dt><dd><tt>Date&nbsp;validator.</tt></dd></dl>
<  <dl><dt><a name="-degree_type"><strong>degree_type</strong></a>(s)</dt><dd><tt>Degree&nbsp;validator.</tt></dd></dl>
<  <dl><dt><a name="-email"><strong>email</strong></a>(s)</dt><dd><tt>E-mail&nbsp;address&nbsp;validator.</tt></dd></dl>
<  <dl><dt><a name="-name"><strong>name</strong></a>(s)</dt><dd><tt>Name&nbsp;validator.</tt></dd></dl>
<  <dl><dt><a name="-number"><strong>number</strong></a>(s)</dt><dd><tt>Number&nbsp;validator.</tt></dd></dl>
<  <dl><dt><a name="-phone_number"><strong>phone_number</strong></a>(s)</dt><dd><tt>Phone&nbsp;number&nbsp;validator.</tt></dd></dl>
<  <dl><dt><a name="-phone_number_ext"><strong>phone_number_ext</strong></a>(s)</dt><dd><tt>Phone&nbsp;number&nbsp;extension&nbsp;validator.</tt></dd></dl>
<  <dl><dt><a name="-yes_no"><strong>yes_no</strong></a>(s)</dt><dd><tt>yes/no&nbsp;validator.</tt></dd></dl>
< </td></tr></table>
< </body></html>
\ No newline at end of file

***************************
* Changes in revision 48 
***************************

------------------------------------------------------------------------
r48 | ting | 2009-03-25 23:20:06 -0500 (Wed, 25 Mar 2009) | 1 line

remove redundant pydoc htmls
------------------------------------------------------------------------

Index: validator.html
===================================================================
1,45d0
< 
< <!doctype html PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
< <html><head><title>Python: module validator</title>
< </head><body bgcolor="#f0f0f8">
< 
< <table width="100%" cellspacing=0 cellpadding=2 border=0 summary="heading">
< <tr bgcolor="#7799ee">
< <td valign=bottom>&nbsp;<br>
< <font color="#ffffff" face="helvetica, arial">&nbsp;<br><big><big><strong>validator</strong></big></big></font></td
< ><td align=right valign=bottom
< ><font color="#ffffff" face="helvetica, arial"><a href=".">index</a><br><a href="file:/home/ting/svn/cs373_pj5/validator.py">/home/ting/svn/cs373_pj5/validator.py</a></font></td></tr></table>
<     <p></p>
< <p>
< <table width="100%" cellspacing=0 cellpadding=2 border=0 summary="section">
< <tr bgcolor="#aa55cc">
< <td colspan=3 valign=bottom>&nbsp;<br>
< <font color="#fffff" face="helvetica, arial"><big><strong>Modules</strong></big></font></td></tr>
<     
< <tr><td bgcolor="#aa55cc"><tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</tt></td><td>&nbsp;</td>
< <td width="100%"><table width="100%" summary="list"><tr><td width="25%" valign=top><a href="Validation.html">Validation</a><br>
< </td><td width="25%" valign=top><a href="re.html">re</a><br>
< </td><td width="25%" valign=top></td><td width="25%" valign=top></td></tr></table></td></tr></table><p>
< <table width="100%" cellspacing=0 cellpadding=2 border=0 summary="section">
< <tr bgcolor="#ee77aa">
< <td colspan=3 valign=bottom>&nbsp;<br>
< <font color="#ffffff" face="helvetica, arial"><big><strong>Classes</strong></big></font></td></tr>
<     
< <tr><td bgcolor="#ee77aa"><tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</tt></td><td>&nbsp;</td>
< <td width="100%"><dl>
< <dt><font face="helvetica, arial"><a href="validator.html#Validator">Validator</a>
< </font></dt></dl>
<  <p>
< <table width="100%" cellspacing=0 cellpadding=2 border=0 summary="section">
< <tr bgcolor="#ffc8d8">
< <td colspan=3 valign=bottom>&nbsp;<br>
< <font color="#000000" face="helvetica, arial"><a name="Validator">class <strong>Validator</strong></a></font></td></tr>
<     
< <tr bgcolor="#ffc8d8"><td rowspan=2><tt>&nbsp;&nbsp;&nbsp;</tt></td>
< <td colspan=2><tt>Generic&nbsp;validator&nbsp;class&nbsp;depending&nbsp;on&nbsp;form&nbsp;type.<br>&nbsp;</tt></td></tr>
< <tr><td>&nbsp;</td>
< <td width="100%">Methods defined here:<br>
< <dl><dt><a name="Validator-__init__"><strong>__init__</strong></a>(self, form_data)</dt><dd><tt>Constructor&nbsp;validates&nbsp;k-v&nbsp;pairs&nbsp;found&nbsp;in&nbsp;form_data&nbsp;and&nbsp;returns&nbsp;results.</tt></dd></dl>
< 
< </td></tr></table></td></tr></table>
< </body></html>
\ No newline at end of file
Index: Validation.html
===================================================================
1,40d0
< 
< <!doctype html PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
< <html><head><title>Python: module Validation</title>
< </head><body bgcolor="#f0f0f8">
< 
< <table width="100%" cellspacing=0 cellpadding=2 border=0 summary="heading">
< <tr bgcolor="#7799ee">
< <td valign=bottom>&nbsp;<br>
< <font color="#ffffff" face="helvetica, arial">&nbsp;<br><big><big><strong>Validation</strong></big></big></font></td
< ><td align=right valign=bottom
< ><font color="#ffffff" face="helvetica, arial"><a href=".">index</a><br><a href="file:/home/ting/svn/cs373_pj5/Validation.py">/home/ting/svn/cs373_pj5/Validation.py</a></font></td></tr></table>
<     <p></p>
< <p>
< <table width="100%" cellspacing=0 cellpadding=2 border=0 summary="section">
< <tr bgcolor="#aa55cc">
< <td colspan=3 valign=bottom>&nbsp;<br>
< <font color="#fffff" face="helvetica, arial"><big><strong>Modules</strong></big></font></td></tr>
<     
< <tr><td bgcolor="#aa55cc"><tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</tt></td><td>&nbsp;</td>
< <td width="100%"><table width="100%" summary="list"><tr><td width="25%" valign=top><a href="re.html">re</a><br>
< </td><td width="25%" valign=top></td><td width="25%" valign=top></td><td width="25%" valign=top></td></tr></table></td></tr></table><p>
< <table width="100%" cellspacing=0 cellpadding=2 border=0 summary="section">
< <tr bgcolor="#eeaa77">
< <td colspan=3 valign=bottom>&nbsp;<br>
< <font color="#ffffff" face="helvetica, arial"><big><strong>Functions</strong></big></font></td></tr>
<     
< <tr><td bgcolor="#eeaa77"><tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</tt></td><td>&nbsp;</td>
< <td width="100%"><dl><dt><a name="-citizen"><strong>citizen</strong></a>(s)</dt><dd><tt>Resident/Citizen&nbsp;validator.</tt></dd></dl>
<  <dl><dt><a name="-class_number"><strong>class_number</strong></a>(s)</dt><dd><tt>Class&nbsp;number&nbsp;validator.</tt></dd></dl>
<  <dl><dt><a name="-comment"><strong>comment</strong></a>(s)</dt><dd><tt>Comment&nbsp;validator.</tt></dd></dl>
<  <dl><dt><a name="-date"><strong>date</strong></a>(s)</dt><dd><tt>Date&nbsp;validator.</tt></dd></dl>
<  <dl><dt><a name="-degree_type"><strong>degree_type</strong></a>(s)</dt><dd><tt>Degree&nbsp;validator.</tt></dd></dl>
<  <dl><dt><a name="-email"><strong>email</strong></a>(s)</dt><dd><tt>E-mail&nbsp;address&nbsp;validator.</tt></dd></dl>
<  <dl><dt><a name="-name"><strong>name</strong></a>(s)</dt><dd><tt>Name&nbsp;validator.</tt></dd></dl>
<  <dl><dt><a name="-number"><strong>number</strong></a>(s)</dt><dd><tt>Number&nbsp;validator.</tt></dd></dl>
<  <dl><dt><a name="-phone_number"><strong>phone_number</strong></a>(s)</dt><dd><tt>Phone&nbsp;number&nbsp;validator.</tt></dd></dl>
<  <dl><dt><a name="-phone_number_ext"><strong>phone_number_ext</strong></a>(s)</dt><dd><tt>Phone&nbsp;number&nbsp;extension&nbsp;validator.</tt></dd></dl>
<  <dl><dt><a name="-yes_no"><strong>yes_no</strong></a>(s)</dt><dd><tt>yes/no&nbsp;validator.</tt></dd></dl>
< </td></tr></table>
< </body></html>
\ No newline at end of file
Index: TestValidation.html
===================================================================
1,320d0
< 
< <!doctype html PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
< <html><head><title>Python: module TestValidation</title>
< </head><body bgcolor="#f0f0f8">
< 
< <table width="100%" cellspacing=0 cellpadding=2 border=0 summary="heading">
< <tr bgcolor="#7799ee">
< <td valign=bottom>&nbsp;<br>
< <font color="#ffffff" face="helvetica, arial">&nbsp;<br><big><big><strong>TestValidation</strong></big></big></font></td
< ><td align=right valign=bottom
< ><font color="#ffffff" face="helvetica, arial"><a href=".">index</a><br><a href="file:/home/ting/svn/cs373_pj5/TestValidation.py">/home/ting/svn/cs373_pj5/TestValidation.py</a></font></td></tr></table>
<     <p></p>
< <p>
< <table width="100%" cellspacing=0 cellpadding=2 border=0 summary="section">
< <tr bgcolor="#aa55cc">
< <td colspan=3 valign=bottom>&nbsp;<br>
< <font color="#fffff" face="helvetica, arial"><big><strong>Modules</strong></big></font></td></tr>
<     
< <tr><td bgcolor="#aa55cc"><tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</tt></td><td>&nbsp;</td>
< <td width="100%"><table width="100%" summary="list"><tr><td width="25%" valign=top><a href="Validation.html">Validation</a><br>
< </td><td width="25%" valign=top><a href="unittest.html">unittest</a><br>
< </td><td width="25%" valign=top></td><td width="25%" valign=top></td></tr></table></td></tr></table><p>
< <table width="100%" cellspacing=0 cellpadding=2 border=0 summary="section">
< <tr bgcolor="#ee77aa">
< <td colspan=3 valign=bottom>&nbsp;<br>
< <font color="#ffffff" face="helvetica, arial"><big><strong>Classes</strong></big></font></td></tr>
<     
< <tr><td bgcolor="#ee77aa"><tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</tt></td><td>&nbsp;</td>
< <td width="100%"><dl>
< <dt><font face="helvetica, arial"><a href="unittest.html#TestCase">unittest.TestCase</a>(<a href="__builtin__.html#object">__builtin__.object</a>)
< </font></dt><dd>
< <dl>
< <dt><font face="helvetica, arial"><a href="TestValidation.html#TestAdmin">TestAdmin</a>
< </font></dt></dl>
< </dd>
< </dl>
<  <p>
< <table width="100%" cellspacing=0 cellpadding=2 border=0 summary="section">
< <tr bgcolor="#ffc8d8">
< <td colspan=3 valign=bottom>&nbsp;<br>
< <font color="#000000" face="helvetica, arial"><a name="TestAdmin">class <strong>TestAdmin</strong></a>(<a href="unittest.html#TestCase">unittest.TestCase</a>)</font></td></tr>
<     
< <tr bgcolor="#ffc8d8"><td rowspan=2><tt>&nbsp;&nbsp;&nbsp;</tt></td>
< <td colspan=2><tt>Test&nbsp;phone&nbsp;number&nbsp;validation.<br>&nbsp;</tt></td></tr>
< <tr><td>&nbsp;</td>
< <td width="100%"><dl><dt>Method resolution order:</dt>
< <dd><a href="TestValidation.html#TestAdmin">TestAdmin</a></dd>
< <dd><a href="unittest.html#TestCase">unittest.TestCase</a></dd>
< <dd><a href="__builtin__.html#object">__builtin__.object</a></dd>
< </dl>
< <hr>
< Methods defined here:<br>
< <dl><dt><a name="TestAdmin-testPhoneNumber1"><strong>testPhoneNumber1</strong></a>(self)</dt></dl>
< 
< <dl><dt><a name="TestAdmin-testPhoneNumber2"><strong>testPhoneNumber2</strong></a>(self)</dt></dl>
< 
< <dl><dt><a name="TestAdmin-testPhoneNumber3"><strong>testPhoneNumber3</strong></a>(self)</dt></dl>
< 
< <dl><dt><a name="TestAdmin-testPhoneNumber4"><strong>testPhoneNumber4</strong></a>(self)</dt></dl>
< 
< <dl><dt><a name="TestAdmin-testPhoneNumber5"><strong>testPhoneNumber5</strong></a>(self)</dt></dl>
< 
< <dl><dt><a name="TestAdmin-testPhoneNumber6"><strong>testPhoneNumber6</strong></a>(self)</dt></dl>
< 
< <dl><dt><a name="TestAdmin-testcitizen1"><strong>testcitizen1</strong></a>(self)</dt></dl>
< 
< <dl><dt><a name="TestAdmin-testcitizen2"><strong>testcitizen2</strong></a>(self)</dt></dl>
< 
< <dl><dt><a name="TestAdmin-testcitizen3"><strong>testcitizen3</strong></a>(self)</dt></dl>
< 
< <dl><dt><a name="TestAdmin-testcitizen4"><strong>testcitizen4</strong></a>(self)</dt></dl>
< 
< <dl><dt><a name="TestAdmin-testclass_number1"><strong>testclass_number1</strong></a>(self)</dt></dl>
< 
< <dl><dt><a name="TestAdmin-testclass_number2"><strong>testclass_number2</strong></a>(self)</dt></dl>
< 
< <dl><dt><a name="TestAdmin-testclass_number3"><strong>testclass_number3</strong></a>(self)</dt></dl>
< 
< <dl><dt><a name="TestAdmin-testclass_number4"><strong>testclass_number4</strong></a>(self)</dt></dl>
< 
< <dl><dt><a name="TestAdmin-testclass_number5"><strong>testclass_number5</strong></a>(self)</dt></dl>
< 
< <dl><dt><a name="TestAdmin-testclass_number6"><strong>testclass_number6</strong></a>(self)</dt></dl>
< 
< <dl><dt><a name="TestAdmin-testclass_number7"><strong>testclass_number7</strong></a>(self)</dt></dl>
< 
< <dl><dt><a name="TestAdmin-testclass_number8"><strong>testclass_number8</strong></a>(self)</dt></dl>
< 
< <dl><dt><a name="TestAdmin-testclass_number9"><strong>testclass_number9</strong></a>(self)</dt></dl>
< 
< <dl><dt><a name="TestAdmin-testcomment1"><strong>testcomment1</strong></a>(self)</dt></dl>
< 
< <dl><dt><a name="TestAdmin-testdate1"><strong>testdate1</strong></a>(self)</dt></dl>
< 
< <dl><dt><a name="TestAdmin-testdate10"><strong>testdate10</strong></a>(self)</dt></dl>
< 
< <dl><dt><a name="TestAdmin-testdate11"><strong>testdate11</strong></a>(self)</dt></dl>
< 
< <dl><dt><a name="TestAdmin-testdate12"><strong>testdate12</strong></a>(self)</dt></dl>
< 
< <dl><dt><a name="TestAdmin-testdate2"><strong>testdate2</strong></a>(self)</dt></dl>
< 
< <dl><dt><a name="TestAdmin-testdate3"><strong>testdate3</strong></a>(self)</dt></dl>
< 
< <dl><dt><a name="TestAdmin-testdate4"><strong>testdate4</strong></a>(self)</dt></dl>
< 
< <dl><dt><a name="TestAdmin-testdate5"><strong>testdate5</strong></a>(self)</dt></dl>
< 
< <dl><dt><a name="TestAdmin-testdate6"><strong>testdate6</strong></a>(self)</dt></dl>
< 
< <dl><dt><a name="TestAdmin-testdate7"><strong>testdate7</strong></a>(self)</dt></dl>
< 
< <dl><dt><a name="TestAdmin-testdate8"><strong>testdate8</strong></a>(self)</dt></dl>
< 
< <dl><dt><a name="TestAdmin-testdate9"><strong>testdate9</strong></a>(self)</dt></dl>
< 
< <dl><dt><a name="TestAdmin-testdegree1"><strong>testdegree1</strong></a>(self)</dt></dl>
< 
< <dl><dt><a name="TestAdmin-testdegree2"><strong>testdegree2</strong></a>(self)</dt></dl>
< 
< <dl><dt><a name="TestAdmin-testdegree3"><strong>testdegree3</strong></a>(self)</dt></dl>
< 
< <dl><dt><a name="TestAdmin-testdegree4"><strong>testdegree4</strong></a>(self)</dt></dl>
< 
< <dl><dt><a name="TestAdmin-testemail1"><strong>testemail1</strong></a>(self)</dt></dl>
< 
< <dl><dt><a name="TestAdmin-testemail10"><strong>testemail10</strong></a>(self)</dt></dl>
< 
< <dl><dt><a name="TestAdmin-testemail11"><strong>testemail11</strong></a>(self)</dt></dl>
< 
< <dl><dt><a name="TestAdmin-testemail12"><strong>testemail12</strong></a>(self)</dt></dl>
< 
< <dl><dt><a name="TestAdmin-testemail13"><strong>testemail13</strong></a>(self)</dt></dl>
< 
< <dl><dt><a name="TestAdmin-testemail2"><strong>testemail2</strong></a>(self)</dt></dl>
< 
< <dl><dt><a name="TestAdmin-testemail3"><strong>testemail3</strong></a>(self)</dt></dl>
< 
< <dl><dt><a name="TestAdmin-testemail4"><strong>testemail4</strong></a>(self)</dt></dl>
< 
< <dl><dt><a name="TestAdmin-testemail5"><strong>testemail5</strong></a>(self)</dt></dl>
< 
< <dl><dt><a name="TestAdmin-testemail6"><strong>testemail6</strong></a>(self)</dt></dl>
< 
< <dl><dt><a name="TestAdmin-testemail7"><strong>testemail7</strong></a>(self)</dt></dl>
< 
< <dl><dt><a name="TestAdmin-testemail8"><strong>testemail8</strong></a>(self)</dt></dl>
< 
< <dl><dt><a name="TestAdmin-testemail9"><strong>testemail9</strong></a>(self)</dt></dl>
< 
< <dl><dt><a name="TestAdmin-testname1"><strong>testname1</strong></a>(self)</dt></dl>
< 
< <dl><dt><a name="TestAdmin-testname2"><strong>testname2</strong></a>(self)</dt></dl>
< 
< <dl><dt><a name="TestAdmin-testname3"><strong>testname3</strong></a>(self)</dt></dl>
< 
< <dl><dt><a name="TestAdmin-testname4"><strong>testname4</strong></a>(self)</dt></dl>
< 
< <dl><dt><a name="TestAdmin-testname5"><strong>testname5</strong></a>(self)</dt></dl>
< 
< <dl><dt><a name="TestAdmin-testname6"><strong>testname6</strong></a>(self)</dt></dl>
< 
< <dl><dt><a name="TestAdmin-testname7"><strong>testname7</strong></a>(self)</dt></dl>
< 
< <dl><dt><a name="TestAdmin-testname8"><strong>testname8</strong></a>(self)</dt></dl>
< 
< <dl><dt><a name="TestAdmin-testnumber1"><strong>testnumber1</strong></a>(self)</dt></dl>
< 
< <dl><dt><a name="TestAdmin-testnumber2"><strong>testnumber2</strong></a>(self)</dt></dl>
< 
< <dl><dt><a name="TestAdmin-testnumber3"><strong>testnumber3</strong></a>(self)</dt></dl>
< 
< <dl><dt><a name="TestAdmin-testphone_number_ext1"><strong>testphone_number_ext1</strong></a>(self)</dt></dl>
< 
< <dl><dt><a name="TestAdmin-testphone_number_ext2"><strong>testphone_number_ext2</strong></a>(self)</dt></dl>
< 
< <dl><dt><a name="TestAdmin-testphone_number_ext3"><strong>testphone_number_ext3</strong></a>(self)</dt></dl>
< 
< <dl><dt><a name="TestAdmin-testphone_number_ext4"><strong>testphone_number_ext4</strong></a>(self)</dt></dl>
< 
< <dl><dt><a name="TestAdmin-testyesno1"><strong>testyesno1</strong></a>(self)</dt></dl>
< 
< <dl><dt><a name="TestAdmin-testyesno2"><strong>testyesno2</strong></a>(self)</dt></dl>
< 
< <dl><dt><a name="TestAdmin-testyesno3"><strong>testyesno3</strong></a>(self)</dt></dl>
< 
< <dl><dt><a name="TestAdmin-testyesno4"><strong>testyesno4</strong></a>(self)</dt></dl>
< 
< <hr>
< Methods inherited from <a href="unittest.html#TestCase">unittest.TestCase</a>:<br>
< <dl><dt><a name="TestAdmin-__call__"><strong>__call__</strong></a>(self, *args, **kwds)</dt></dl>
< 
< <dl><dt><a name="TestAdmin-__init__"><strong>__init__</strong></a>(self, methodName<font color="#909090">='runTest'</font>)</dt><dd><tt>Create&nbsp;an&nbsp;instance&nbsp;of&nbsp;the&nbsp;class&nbsp;that&nbsp;will&nbsp;use&nbsp;the&nbsp;named&nbsp;test<br>
< method&nbsp;when&nbsp;executed.&nbsp;Raises&nbsp;a&nbsp;ValueError&nbsp;if&nbsp;the&nbsp;instance&nbsp;does<br>
< not&nbsp;have&nbsp;a&nbsp;method&nbsp;with&nbsp;the&nbsp;specified&nbsp;name.</tt></dd></dl>
< 
< <dl><dt><a name="TestAdmin-__repr__"><strong>__repr__</strong></a>(self)</dt></dl>
< 
< <dl><dt><a name="TestAdmin-__str__"><strong>__str__</strong></a>(self)</dt></dl>
< 
< <dl><dt><a name="TestAdmin-assertAlmostEqual"><strong>assertAlmostEqual</strong></a> = failUnlessAlmostEqual(self, first, second, places<font color="#909090">=7</font>, msg<font color="#909090">=None</font>)</dt><dd><tt>Fail&nbsp;if&nbsp;the&nbsp;two&nbsp;objects&nbsp;are&nbsp;unequal&nbsp;as&nbsp;determined&nbsp;by&nbsp;their<br>
< difference&nbsp;rounded&nbsp;to&nbsp;the&nbsp;given&nbsp;number&nbsp;of&nbsp;decimal&nbsp;places<br>
< (default&nbsp;7)&nbsp;and&nbsp;comparing&nbsp;to&nbsp;zero.<br>
< &nbsp;<br>
< Note&nbsp;that&nbsp;decimal&nbsp;places&nbsp;(from&nbsp;zero)&nbsp;are&nbsp;usually&nbsp;not&nbsp;the&nbsp;same<br>
< as&nbsp;significant&nbsp;digits&nbsp;(measured&nbsp;from&nbsp;the&nbsp;most&nbsp;signficant&nbsp;digit).</tt></dd></dl>
< 
< <dl><dt><a name="TestAdmin-assertAlmostEquals"><strong>assertAlmostEquals</strong></a> = failUnlessAlmostEqual(self, first, second, places<font color="#909090">=7</font>, msg<font color="#909090">=None</font>)</dt><dd><tt>Fail&nbsp;if&nbsp;the&nbsp;two&nbsp;objects&nbsp;are&nbsp;unequal&nbsp;as&nbsp;determined&nbsp;by&nbsp;their<br>
< difference&nbsp;rounded&nbsp;to&nbsp;the&nbsp;given&nbsp;number&nbsp;of&nbsp;decimal&nbsp;places<br>
< (default&nbsp;7)&nbsp;and&nbsp;comparing&nbsp;to&nbsp;zero.<br>
< &nbsp;<br>
< Note&nbsp;that&nbsp;decimal&nbsp;places&nbsp;(from&nbsp;zero)&nbsp;are&nbsp;usually&nbsp;not&nbsp;the&nbsp;same<br>
< as&nbsp;significant&nbsp;digits&nbsp;(measured&nbsp;from&nbsp;the&nbsp;most&nbsp;signficant&nbsp;digit).</tt></dd></dl>
< 
< <dl><dt><a name="TestAdmin-assertEqual"><strong>assertEqual</strong></a> = failUnlessEqual(self, first, second, msg<font color="#909090">=None</font>)</dt><dd><tt>Fail&nbsp;if&nbsp;the&nbsp;two&nbsp;objects&nbsp;are&nbsp;unequal&nbsp;as&nbsp;determined&nbsp;by&nbsp;the&nbsp;'=='<br>
< operator.</tt></dd></dl>
< 
< <dl><dt><a name="TestAdmin-assertEquals"><strong>assertEquals</strong></a> = failUnlessEqual(self, first, second, msg<font color="#909090">=None</font>)</dt><dd><tt>Fail&nbsp;if&nbsp;the&nbsp;two&nbsp;objects&nbsp;are&nbsp;unequal&nbsp;as&nbsp;determined&nbsp;by&nbsp;the&nbsp;'=='<br>
< operator.</tt></dd></dl>
< 
< <dl><dt><a name="TestAdmin-assertFalse"><strong>assertFalse</strong></a> = failIf(self, expr, msg<font color="#909090">=None</font>)</dt><dd><tt>Fail&nbsp;the&nbsp;test&nbsp;if&nbsp;the&nbsp;expression&nbsp;is&nbsp;true.</tt></dd></dl>
< 
< <dl><dt><a name="TestAdmin-assertNotAlmostEqual"><strong>assertNotAlmostEqual</strong></a> = failIfAlmostEqual(self, first, second, places<font color="#909090">=7</font>, msg<font color="#909090">=None</font>)</dt><dd><tt>Fail&nbsp;if&nbsp;the&nbsp;two&nbsp;objects&nbsp;are&nbsp;equal&nbsp;as&nbsp;determined&nbsp;by&nbsp;their<br>
< difference&nbsp;rounded&nbsp;to&nbsp;the&nbsp;given&nbsp;number&nbsp;of&nbsp;decimal&nbsp;places<br>
< (default&nbsp;7)&nbsp;and&nbsp;comparing&nbsp;to&nbsp;zero.<br>
< &nbsp;<br>
< Note&nbsp;that&nbsp;decimal&nbsp;places&nbsp;(from&nbsp;zero)&nbsp;are&nbsp;usually&nbsp;not&nbsp;the&nbsp;same<br>
< as&nbsp;significant&nbsp;digits&nbsp;(measured&nbsp;from&nbsp;the&nbsp;most&nbsp;signficant&nbsp;digit).</tt></dd></dl>
< 
< <dl><dt><a name="TestAdmin-assertNotAlmostEquals"><strong>assertNotAlmostEquals</strong></a> = failIfAlmostEqual(self, first, second, places<font color="#909090">=7</font>, msg<font color="#909090">=None</font>)</dt><dd><tt>Fail&nbsp;if&nbsp;the&nbsp;two&nbsp;objects&nbsp;are&nbsp;equal&nbsp;as&nbsp;determined&nbsp;by&nbsp;their<br>
< difference&nbsp;rounded&nbsp;to&nbsp;the&nbsp;given&nbsp;number&nbsp;of&nbsp;decimal&nbsp;places<br>
< (default&nbsp;7)&nbsp;and&nbsp;comparing&nbsp;to&nbsp;zero.<br>
< &nbsp;<br>
< Note&nbsp;that&nbsp;decimal&nbsp;places&nbsp;(from&nbsp;zero)&nbsp;are&nbsp;usually&nbsp;not&nbsp;the&nbsp;same<br>
< as&nbsp;significant&nbsp;digits&nbsp;(measured&nbsp;from&nbsp;the&nbsp;most&nbsp;signficant&nbsp;digit).</tt></dd></dl>
< 
< <dl><dt><a name="TestAdmin-assertNotEqual"><strong>assertNotEqual</strong></a> = failIfEqual(self, first, second, msg<font color="#909090">=None</font>)</dt><dd><tt>Fail&nbsp;if&nbsp;the&nbsp;two&nbsp;objects&nbsp;are&nbsp;equal&nbsp;as&nbsp;determined&nbsp;by&nbsp;the&nbsp;'=='<br>
< operator.</tt></dd></dl>
< 
< <dl><dt><a name="TestAdmin-assertNotEquals"><strong>assertNotEquals</strong></a> = failIfEqual(self, first, second, msg<font color="#909090">=None</font>)</dt><dd><tt>Fail&nbsp;if&nbsp;the&nbsp;two&nbsp;objects&nbsp;are&nbsp;equal&nbsp;as&nbsp;determined&nbsp;by&nbsp;the&nbsp;'=='<br>
< operator.</tt></dd></dl>
< 
< <dl><dt><a name="TestAdmin-assertRaises"><strong>assertRaises</strong></a> = failUnlessRaises(self, excClass, callableObj, *args, **kwargs)</dt><dd><tt>Fail&nbsp;unless&nbsp;an&nbsp;exception&nbsp;of&nbsp;class&nbsp;excClass&nbsp;is&nbsp;thrown<br>
< by&nbsp;callableObj&nbsp;when&nbsp;invoked&nbsp;with&nbsp;arguments&nbsp;args&nbsp;and&nbsp;keyword<br>
< arguments&nbsp;kwargs.&nbsp;If&nbsp;a&nbsp;different&nbsp;type&nbsp;of&nbsp;exception&nbsp;is<br>
< thrown,&nbsp;it&nbsp;will&nbsp;not&nbsp;be&nbsp;caught,&nbsp;and&nbsp;the&nbsp;test&nbsp;case&nbsp;will&nbsp;be<br>
< deemed&nbsp;to&nbsp;have&nbsp;suffered&nbsp;an&nbsp;error,&nbsp;exactly&nbsp;as&nbsp;for&nbsp;an<br>
< unexpected&nbsp;exception.</tt></dd></dl>
< 
< <dl><dt><a name="TestAdmin-assertTrue"><strong>assertTrue</strong></a> = failUnless(self, expr, msg<font color="#909090">=None</font>)</dt><dd><tt>Fail&nbsp;the&nbsp;test&nbsp;unless&nbsp;the&nbsp;expression&nbsp;is&nbsp;true.</tt></dd></dl>
< 
< <dl><dt><a name="TestAdmin-assert_"><strong>assert_</strong></a> = failUnless(self, expr, msg<font color="#909090">=None</font>)</dt><dd><tt>Fail&nbsp;the&nbsp;test&nbsp;unless&nbsp;the&nbsp;expression&nbsp;is&nbsp;true.</tt></dd></dl>
< 
< <dl><dt><a name="TestAdmin-countTestCases"><strong>countTestCases</strong></a>(self)</dt></dl>
< 
< <dl><dt><a name="TestAdmin-debug"><strong>debug</strong></a>(self)</dt><dd><tt>Run&nbsp;the&nbsp;test&nbsp;without&nbsp;collecting&nbsp;errors&nbsp;in&nbsp;a&nbsp;TestResult</tt></dd></dl>
< 
< <dl><dt><a name="TestAdmin-defaultTestResult"><strong>defaultTestResult</strong></a>(self)</dt></dl>
< 
< <dl><dt><a name="TestAdmin-fail"><strong>fail</strong></a>(self, msg<font color="#909090">=None</font>)</dt><dd><tt>Fail&nbsp;immediately,&nbsp;with&nbsp;the&nbsp;given&nbsp;message.</tt></dd></dl>
< 
< <dl><dt><a name="TestAdmin-failIf"><strong>failIf</strong></a>(self, expr, msg<font color="#909090">=None</font>)</dt><dd><tt>Fail&nbsp;the&nbsp;test&nbsp;if&nbsp;the&nbsp;expression&nbsp;is&nbsp;true.</tt></dd></dl>
< 
< <dl><dt><a name="TestAdmin-failIfAlmostEqual"><strong>failIfAlmostEqual</strong></a>(self, first, second, places<font color="#909090">=7</font>, msg<font color="#909090">=None</font>)</dt><dd><tt>Fail&nbsp;if&nbsp;the&nbsp;two&nbsp;objects&nbsp;are&nbsp;equal&nbsp;as&nbsp;determined&nbsp;by&nbsp;their<br>
< difference&nbsp;rounded&nbsp;to&nbsp;the&nbsp;given&nbsp;number&nbsp;of&nbsp;decimal&nbsp;places<br>
< (default&nbsp;7)&nbsp;and&nbsp;comparing&nbsp;to&nbsp;zero.<br>
< &nbsp;<br>
< Note&nbsp;that&nbsp;decimal&nbsp;places&nbsp;(from&nbsp;zero)&nbsp;are&nbsp;usually&nbsp;not&nbsp;the&nbsp;same<br>
< as&nbsp;significant&nbsp;digits&nbsp;(measured&nbsp;from&nbsp;the&nbsp;most&nbsp;signficant&nbsp;digit).</tt></dd></dl>
< 
< <dl><dt><a name="TestAdmin-failIfEqual"><strong>failIfEqual</strong></a>(self, first, second, msg<font color="#909090">=None</font>)</dt><dd><tt>Fail&nbsp;if&nbsp;the&nbsp;two&nbsp;objects&nbsp;are&nbsp;equal&nbsp;as&nbsp;determined&nbsp;by&nbsp;the&nbsp;'=='<br>
< operator.</tt></dd></dl>
< 
< <dl><dt><a name="TestAdmin-failUnless"><strong>failUnless</strong></a>(self, expr, msg<font color="#909090">=None</font>)</dt><dd><tt>Fail&nbsp;the&nbsp;test&nbsp;unless&nbsp;the&nbsp;expression&nbsp;is&nbsp;true.</tt></dd></dl>
< 
< <dl><dt><a name="TestAdmin-failUnlessAlmostEqual"><strong>failUnlessAlmostEqual</strong></a>(self, first, second, places<font color="#909090">=7</font>, msg<font color="#909090">=None</font>)</dt><dd><tt>Fail&nbsp;if&nbsp;the&nbsp;two&nbsp;objects&nbsp;are&nbsp;unequal&nbsp;as&nbsp;determined&nbsp;by&nbsp;their<br>
< difference&nbsp;rounded&nbsp;to&nbsp;the&nbsp;given&nbsp;number&nbsp;of&nbsp;decimal&nbsp;places<br>
< (default&nbsp;7)&nbsp;and&nbsp;comparing&nbsp;to&nbsp;zero.<br>
< &nbsp;<br>
< Note&nbsp;that&nbsp;decimal&nbsp;places&nbsp;(from&nbsp;zero)&nbsp;are&nbsp;usually&nbsp;not&nbsp;the&nbsp;same<br>
< as&nbsp;significant&nbsp;digits&nbsp;(measured&nbsp;from&nbsp;the&nbsp;most&nbsp;signficant&nbsp;digit).</tt></dd></dl>
< 
< <dl><dt><a name="TestAdmin-failUnlessEqual"><strong>failUnlessEqual</strong></a>(self, first, second, msg<font color="#909090">=None</font>)</dt><dd><tt>Fail&nbsp;if&nbsp;the&nbsp;two&nbsp;objects&nbsp;are&nbsp;unequal&nbsp;as&nbsp;determined&nbsp;by&nbsp;the&nbsp;'=='<br>
< operator.</tt></dd></dl>
< 
< <dl><dt><a name="TestAdmin-failUnlessRaises"><strong>failUnlessRaises</strong></a>(self, excClass, callableObj, *args, **kwargs)</dt><dd><tt>Fail&nbsp;unless&nbsp;an&nbsp;exception&nbsp;of&nbsp;class&nbsp;excClass&nbsp;is&nbsp;thrown<br>
< by&nbsp;callableObj&nbsp;when&nbsp;invoked&nbsp;with&nbsp;arguments&nbsp;args&nbsp;and&nbsp;keyword<br>
< arguments&nbsp;kwargs.&nbsp;If&nbsp;a&nbsp;different&nbsp;type&nbsp;of&nbsp;exception&nbsp;is<br>
< thrown,&nbsp;it&nbsp;will&nbsp;not&nbsp;be&nbsp;caught,&nbsp;and&nbsp;the&nbsp;test&nbsp;case&nbsp;will&nbsp;be<br>
< deemed&nbsp;to&nbsp;have&nbsp;suffered&nbsp;an&nbsp;error,&nbsp;exactly&nbsp;as&nbsp;for&nbsp;an<br>
< unexpected&nbsp;exception.</tt></dd></dl>
< 
< <dl><dt><a name="TestAdmin-id"><strong>id</strong></a>(self)</dt></dl>
< 
< <dl><dt><a name="TestAdmin-run"><strong>run</strong></a>(self, result<font color="#909090">=None</font>)</dt></dl>
< 
< <dl><dt><a name="TestAdmin-setUp"><strong>setUp</strong></a>(self)</dt><dd><tt>Hook&nbsp;method&nbsp;for&nbsp;setting&nbsp;up&nbsp;the&nbsp;test&nbsp;fixture&nbsp;before&nbsp;exercising&nbsp;it.</tt></dd></dl>
< 
< <dl><dt><a name="TestAdmin-shortDescription"><strong>shortDescription</strong></a>(self)</dt><dd><tt>Returns&nbsp;a&nbsp;one-line&nbsp;description&nbsp;of&nbsp;the&nbsp;test,&nbsp;or&nbsp;None&nbsp;if&nbsp;no<br>
< description&nbsp;has&nbsp;been&nbsp;provided.<br>
< &nbsp;<br>
< The&nbsp;default&nbsp;implementation&nbsp;of&nbsp;this&nbsp;method&nbsp;returns&nbsp;the&nbsp;first&nbsp;line&nbsp;of<br>
< the&nbsp;specified&nbsp;test&nbsp;method's&nbsp;docstring.</tt></dd></dl>
< 
< <dl><dt><a name="TestAdmin-tearDown"><strong>tearDown</strong></a>(self)</dt><dd><tt>Hook&nbsp;method&nbsp;for&nbsp;deconstructing&nbsp;the&nbsp;test&nbsp;fixture&nbsp;after&nbsp;testing&nbsp;it.</tt></dd></dl>
< 
< <hr>
< Data descriptors inherited from <a href="unittest.html#TestCase">unittest.TestCase</a>:<br>
< <dl><dt><strong>__dict__</strong></dt>
< <dd><tt>dictionary&nbsp;for&nbsp;instance&nbsp;variables&nbsp;(if&nbsp;defined)</tt></dd>
< </dl>
< <dl><dt><strong>__weakref__</strong></dt>
< <dd><tt>list&nbsp;of&nbsp;weak&nbsp;references&nbsp;to&nbsp;the&nbsp;object&nbsp;(if&nbsp;defined)</tt></dd>
< </dl>
< <hr>
< Data and other attributes inherited from <a href="unittest.html#TestCase">unittest.TestCase</a>:<br>
< <dl><dt><strong>failureException</strong> = &lt;type 'exceptions.AssertionError'&gt;<dd><tt>Assertion&nbsp;failed.</tt></dl>
< 
< </td></tr></table></td></tr></table>
< </body></html>
\ No newline at end of file
Index: TestValidation.pydoc.html
===================================================================
0a1,320
> 
> <!doctype html PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
> <html><head><title>Python: module TestValidation</title>
> </head><body bgcolor="#f0f0f8">
> 
> <table width="100%" cellspacing=0 cellpadding=2 border=0 summary="heading">
> <tr bgcolor="#7799ee">
> <td valign=bottom>&nbsp;<br>
> <font color="#ffffff" face="helvetica, arial">&nbsp;<br><big><big><strong>TestValidation</strong></big></big></font></td
> ><td align=right valign=bottom
> ><font color="#ffffff" face="helvetica, arial"><a href=".">index</a><br><a href="file:/home/ting/svn/cs373_pj5/TestValidation.py">/home/ting/svn/cs373_pj5/TestValidation.py</a></font></td></tr></table>
>     <p></p>
> <p>
> <table width="100%" cellspacing=0 cellpadding=2 border=0 summary="section">
> <tr bgcolor="#aa55cc">
> <td colspan=3 valign=bottom>&nbsp;<br>
> <font color="#fffff" face="helvetica, arial"><big><strong>Modules</strong></big></font></td></tr>
>     
> <tr><td bgcolor="#aa55cc"><tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</tt></td><td>&nbsp;</td>
> <td width="100%"><table width="100%" summary="list"><tr><td width="25%" valign=top><a href="Validation.html">Validation</a><br>
> </td><td width="25%" valign=top><a href="unittest.html">unittest</a><br>
> </td><td width="25%" valign=top></td><td width="25%" valign=top></td></tr></table></td></tr></table><p>
> <table width="100%" cellspacing=0 cellpadding=2 border=0 summary="section">
> <tr bgcolor="#ee77aa">
> <td colspan=3 valign=bottom>&nbsp;<br>
> <font color="#ffffff" face="helvetica, arial"><big><strong>Classes</strong></big></font></td></tr>
>     
> <tr><td bgcolor="#ee77aa"><tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</tt></td><td>&nbsp;</td>
> <td width="100%"><dl>
> <dt><font face="helvetica, arial"><a href="unittest.html#TestCase">unittest.TestCase</a>(<a href="__builtin__.html#object">__builtin__.object</a>)
> </font></dt><dd>
> <dl>
> <dt><font face="helvetica, arial"><a href="TestValidation.html#TestAdmin">TestAdmin</a>
> </font></dt></dl>
> </dd>
> </dl>
>  <p>
> <table width="100%" cellspacing=0 cellpadding=2 border=0 summary="section">
> <tr bgcolor="#ffc8d8">
> <td colspan=3 valign=bottom>&nbsp;<br>
> <font color="#000000" face="helvetica, arial"><a name="TestAdmin">class <strong>TestAdmin</strong></a>(<a href="unittest.html#TestCase">unittest.TestCase</a>)</font></td></tr>
>     
> <tr bgcolor="#ffc8d8"><td rowspan=2><tt>&nbsp;&nbsp;&nbsp;</tt></td>
> <td colspan=2><tt>Test&nbsp;phone&nbsp;number&nbsp;validation.<br>&nbsp;</tt></td></tr>
> <tr><td>&nbsp;</td>
> <td width="100%"><dl><dt>Method resolution order:</dt>
> <dd><a href="TestValidation.html#TestAdmin">TestAdmin</a></dd>
> <dd><a href="unittest.html#TestCase">unittest.TestCase</a></dd>
> <dd><a href="__builtin__.html#object">__builtin__.object</a></dd>
> </dl>
> <hr>
> Methods defined here:<br>
> <dl><dt><a name="TestAdmin-testPhoneNumber1"><strong>testPhoneNumber1</strong></a>(self)</dt></dl>
> 
> <dl><dt><a name="TestAdmin-testPhoneNumber2"><strong>testPhoneNumber2</strong></a>(self)</dt></dl>
> 
> <dl><dt><a name="TestAdmin-testPhoneNumber3"><strong>testPhoneNumber3</strong></a>(self)</dt></dl>
> 
> <dl><dt><a name="TestAdmin-testPhoneNumber4"><strong>testPhoneNumber4</strong></a>(self)</dt></dl>
> 
> <dl><dt><a name="TestAdmin-testPhoneNumber5"><strong>testPhoneNumber5</strong></a>(self)</dt></dl>
> 
> <dl><dt><a name="TestAdmin-testPhoneNumber6"><strong>testPhoneNumber6</strong></a>(self)</dt></dl>
> 
> <dl><dt><a name="TestAdmin-testcitizen1"><strong>testcitizen1</strong></a>(self)</dt></dl>
> 
> <dl><dt><a name="TestAdmin-testcitizen2"><strong>testcitizen2</strong></a>(self)</dt></dl>
> 
> <dl><dt><a name="TestAdmin-testcitizen3"><strong>testcitizen3</strong></a>(self)</dt></dl>
> 
> <dl><dt><a name="TestAdmin-testcitizen4"><strong>testcitizen4</strong></a>(self)</dt></dl>
> 
> <dl><dt><a name="TestAdmin-testclass_number1"><strong>testclass_number1</strong></a>(self)</dt></dl>
> 
> <dl><dt><a name="TestAdmin-testclass_number2"><strong>testclass_number2</strong></a>(self)</dt></dl>
> 
> <dl><dt><a name="TestAdmin-testclass_number3"><strong>testclass_number3</strong></a>(self)</dt></dl>
> 
> <dl><dt><a name="TestAdmin-testclass_number4"><strong>testclass_number4</strong></a>(self)</dt></dl>
> 
> <dl><dt><a name="TestAdmin-testclass_number5"><strong>testclass_number5</strong></a>(self)</dt></dl>
> 
> <dl><dt><a name="TestAdmin-testclass_number6"><strong>testclass_number6</strong></a>(self)</dt></dl>
> 
> <dl><dt><a name="TestAdmin-testclass_number7"><strong>testclass_number7</strong></a>(self)</dt></dl>
> 
> <dl><dt><a name="TestAdmin-testclass_number8"><strong>testclass_number8</strong></a>(self)</dt></dl>
> 
> <dl><dt><a name="TestAdmin-testclass_number9"><strong>testclass_number9</strong></a>(self)</dt></dl>
> 
> <dl><dt><a name="TestAdmin-testcomment1"><strong>testcomment1</strong></a>(self)</dt></dl>
> 
> <dl><dt><a name="TestAdmin-testdate1"><strong>testdate1</strong></a>(self)</dt></dl>
> 
> <dl><dt><a name="TestAdmin-testdate10"><strong>testdate10</strong></a>(self)</dt></dl>
> 
> <dl><dt><a name="TestAdmin-testdate11"><strong>testdate11</strong></a>(self)</dt></dl>
> 
> <dl><dt><a name="TestAdmin-testdate12"><strong>testdate12</strong></a>(self)</dt></dl>
> 
> <dl><dt><a name="TestAdmin-testdate2"><strong>testdate2</strong></a>(self)</dt></dl>
> 
> <dl><dt><a name="TestAdmin-testdate3"><strong>testdate3</strong></a>(self)</dt></dl>
> 
> <dl><dt><a name="TestAdmin-testdate4"><strong>testdate4</strong></a>(self)</dt></dl>
> 
> <dl><dt><a name="TestAdmin-testdate5"><strong>testdate5</strong></a>(self)</dt></dl>
> 
> <dl><dt><a name="TestAdmin-testdate6"><strong>testdate6</strong></a>(self)</dt></dl>
> 
> <dl><dt><a name="TestAdmin-testdate7"><strong>testdate7</strong></a>(self)</dt></dl>
> 
> <dl><dt><a name="TestAdmin-testdate8"><strong>testdate8</strong></a>(self)</dt></dl>
> 
> <dl><dt><a name="TestAdmin-testdate9"><strong>testdate9</strong></a>(self)</dt></dl>
> 
> <dl><dt><a name="TestAdmin-testdegree1"><strong>testdegree1</strong></a>(self)</dt></dl>
> 
> <dl><dt><a name="TestAdmin-testdegree2"><strong>testdegree2</strong></a>(self)</dt></dl>
> 
> <dl><dt><a name="TestAdmin-testdegree3"><strong>testdegree3</strong></a>(self)</dt></dl>
> 
> <dl><dt><a name="TestAdmin-testdegree4"><strong>testdegree4</strong></a>(self)</dt></dl>
> 
> <dl><dt><a name="TestAdmin-testemail1"><strong>testemail1</strong></a>(self)</dt></dl>
> 
> <dl><dt><a name="TestAdmin-testemail10"><strong>testemail10</strong></a>(self)</dt></dl>
> 
> <dl><dt><a name="TestAdmin-testemail11"><strong>testemail11</strong></a>(self)</dt></dl>
> 
> <dl><dt><a name="TestAdmin-testemail12"><strong>testemail12</strong></a>(self)</dt></dl>
> 
> <dl><dt><a name="TestAdmin-testemail13"><strong>testemail13</strong></a>(self)</dt></dl>
> 
> <dl><dt><a name="TestAdmin-testemail2"><strong>testemail2</strong></a>(self)</dt></dl>
> 
> <dl><dt><a name="TestAdmin-testemail3"><strong>testemail3</strong></a>(self)</dt></dl>
> 
> <dl><dt><a name="TestAdmin-testemail4"><strong>testemail4</strong></a>(self)</dt></dl>
> 
> <dl><dt><a name="TestAdmin-testemail5"><strong>testemail5</strong></a>(self)</dt></dl>
> 
> <dl><dt><a name="TestAdmin-testemail6"><strong>testemail6</strong></a>(self)</dt></dl>
> 
> <dl><dt><a name="TestAdmin-testemail7"><strong>testemail7</strong></a>(self)</dt></dl>
> 
> <dl><dt><a name="TestAdmin-testemail8"><strong>testemail8</strong></a>(self)</dt></dl>
> 
> <dl><dt><a name="TestAdmin-testemail9"><strong>testemail9</strong></a>(self)</dt></dl>
> 
> <dl><dt><a name="TestAdmin-testname1"><strong>testname1</strong></a>(self)</dt></dl>
> 
> <dl><dt><a name="TestAdmin-testname2"><strong>testname2</strong></a>(self)</dt></dl>
> 
> <dl><dt><a name="TestAdmin-testname3"><strong>testname3</strong></a>(self)</dt></dl>
> 
> <dl><dt><a name="TestAdmin-testname4"><strong>testname4</strong></a>(self)</dt></dl>
> 
> <dl><dt><a name="TestAdmin-testname5"><strong>testname5</strong></a>(self)</dt></dl>
> 
> <dl><dt><a name="TestAdmin-testname6"><strong>testname6</strong></a>(self)</dt></dl>
> 
> <dl><dt><a name="TestAdmin-testname7"><strong>testname7</strong></a>(self)</dt></dl>
> 
> <dl><dt><a name="TestAdmin-testname8"><strong>testname8</strong></a>(self)</dt></dl>
> 
> <dl><dt><a name="TestAdmin-testnumber1"><strong>testnumber1</strong></a>(self)</dt></dl>
> 
> <dl><dt><a name="TestAdmin-testnumber2"><strong>testnumber2</strong></a>(self)</dt></dl>
> 
> <dl><dt><a name="TestAdmin-testnumber3"><strong>testnumber3</strong></a>(self)</dt></dl>
> 
> <dl><dt><a name="TestAdmin-testphone_number_ext1"><strong>testphone_number_ext1</strong></a>(self)</dt></dl>
> 
> <dl><dt><a name="TestAdmin-testphone_number_ext2"><strong>testphone_number_ext2</strong></a>(self)</dt></dl>
> 
> <dl><dt><a name="TestAdmin-testphone_number_ext3"><strong>testphone_number_ext3</strong></a>(self)</dt></dl>
> 
> <dl><dt><a name="TestAdmin-testphone_number_ext4"><strong>testphone_number_ext4</strong></a>(self)</dt></dl>
> 
> <dl><dt><a name="TestAdmin-testyesno1"><strong>testyesno1</strong></a>(self)</dt></dl>
> 
> <dl><dt><a name="TestAdmin-testyesno2"><strong>testyesno2</strong></a>(self)</dt></dl>
> 
> <dl><dt><a name="TestAdmin-testyesno3"><strong>testyesno3</strong></a>(self)</dt></dl>
> 
> <dl><dt><a name="TestAdmin-testyesno4"><strong>testyesno4</strong></a>(self)</dt></dl>
> 
> <hr>
> Methods inherited from <a href="unittest.html#TestCase">unittest.TestCase</a>:<br>
> <dl><dt><a name="TestAdmin-__call__"><strong>__call__</strong></a>(self, *args, **kwds)</dt></dl>
> 
> <dl><dt><a name="TestAdmin-__init__"><strong>__init__</strong></a>(self, methodName<font color="#909090">='runTest'</font>)</dt><dd><tt>Create&nbsp;an&nbsp;instance&nbsp;of&nbsp;the&nbsp;class&nbsp;that&nbsp;will&nbsp;use&nbsp;the&nbsp;named&nbsp;test<br>
> method&nbsp;when&nbsp;executed.&nbsp;Raises&nbsp;a&nbsp;ValueError&nbsp;if&nbsp;the&nbsp;instance&nbsp;does<br>
> not&nbsp;have&nbsp;a&nbsp;method&nbsp;with&nbsp;the&nbsp;specified&nbsp;name.</tt></dd></dl>
> 
> <dl><dt><a name="TestAdmin-__repr__"><strong>__repr__</strong></a>(self)</dt></dl>
> 
> <dl><dt><a name="TestAdmin-__str__"><strong>__str__</strong></a>(self)</dt></dl>
> 
> <dl><dt><a name="TestAdmin-assertAlmostEqual"><strong>assertAlmostEqual</strong></a> = failUnlessAlmostEqual(self, first, second, places<font color="#909090">=7</font>, msg<font color="#909090">=None</font>)</dt><dd><tt>Fail&nbsp;if&nbsp;the&nbsp;two&nbsp;objects&nbsp;are&nbsp;unequal&nbsp;as&nbsp;determined&nbsp;by&nbsp;their<br>
> difference&nbsp;rounded&nbsp;to&nbsp;the&nbsp;given&nbsp;number&nbsp;of&nbsp;decimal&nbsp;places<br>
> (default&nbsp;7)&nbsp;and&nbsp;comparing&nbsp;to&nbsp;zero.<br>
> &nbsp;<br>
> Note&nbsp;that&nbsp;decimal&nbsp;places&nbsp;(from&nbsp;zero)&nbsp;are&nbsp;usually&nbsp;not&nbsp;the&nbsp;same<br>
> as&nbsp;significant&nbsp;digits&nbsp;(measured&nbsp;from&nbsp;the&nbsp;most&nbsp;signficant&nbsp;digit).</tt></dd></dl>
> 
> <dl><dt><a name="TestAdmin-assertAlmostEquals"><strong>assertAlmostEquals</strong></a> = failUnlessAlmostEqual(self, first, second, places<font color="#909090">=7</font>, msg<font color="#909090">=None</font>)</dt><dd><tt>Fail&nbsp;if&nbsp;the&nbsp;two&nbsp;objects&nbsp;are&nbsp;unequal&nbsp;as&nbsp;determined&nbsp;by&nbsp;their<br>
> difference&nbsp;rounded&nbsp;to&nbsp;the&nbsp;given&nbsp;number&nbsp;of&nbsp;decimal&nbsp;places<br>
> (default&nbsp;7)&nbsp;and&nbsp;comparing&nbsp;to&nbsp;zero.<br>
> &nbsp;<br>
> Note&nbsp;that&nbsp;decimal&nbsp;places&nbsp;(from&nbsp;zero)&nbsp;are&nbsp;usually&nbsp;not&nbsp;the&nbsp;same<br>
> as&nbsp;significant&nbsp;digits&nbsp;(measured&nbsp;from&nbsp;the&nbsp;most&nbsp;signficant&nbsp;digit).</tt></dd></dl>
> 
> <dl><dt><a name="TestAdmin-assertEqual"><strong>assertEqual</strong></a> = failUnlessEqual(self, first, second, msg<font color="#909090">=None</font>)</dt><dd><tt>Fail&nbsp;if&nbsp;the&nbsp;two&nbsp;objects&nbsp;are&nbsp;unequal&nbsp;as&nbsp;determined&nbsp;by&nbsp;the&nbsp;'=='<br>
> operator.</tt></dd></dl>
> 
> <dl><dt><a name="TestAdmin-assertEquals"><strong>assertEquals</strong></a> = failUnlessEqual(self, first, second, msg<font color="#909090">=None</font>)</dt><dd><tt>Fail&nbsp;if&nbsp;the&nbsp;two&nbsp;objects&nbsp;are&nbsp;unequal&nbsp;as&nbsp;determined&nbsp;by&nbsp;the&nbsp;'=='<br>
> operator.</tt></dd></dl>
> 
> <dl><dt><a name="TestAdmin-assertFalse"><strong>assertFalse</strong></a> = failIf(self, expr, msg<font color="#909090">=None</font>)</dt><dd><tt>Fail&nbsp;the&nbsp;test&nbsp;if&nbsp;the&nbsp;expression&nbsp;is&nbsp;true.</tt></dd></dl>
> 
> <dl><dt><a name="TestAdmin-assertNotAlmostEqual"><strong>assertNotAlmostEqual</strong></a> = failIfAlmostEqual(self, first, second, places<font color="#909090">=7</font>, msg<font color="#909090">=None</font>)</dt><dd><tt>Fail&nbsp;if&nbsp;the&nbsp;two&nbsp;objects&nbsp;are&nbsp;equal&nbsp;as&nbsp;determined&nbsp;by&nbsp;their<br>
> difference&nbsp;rounded&nbsp;to&nbsp;the&nbsp;given&nbsp;number&nbsp;of&nbsp;decimal&nbsp;places<br>
> (default&nbsp;7)&nbsp;and&nbsp;comparing&nbsp;to&nbsp;zero.<br>
> &nbsp;<br>
> Note&nbsp;that&nbsp;decimal&nbsp;places&nbsp;(from&nbsp;zero)&nbsp;are&nbsp;usually&nbsp;not&nbsp;the&nbsp;same<br>
> as&nbsp;significant&nbsp;digits&nbsp;(measured&nbsp;from&nbsp;the&nbsp;most&nbsp;signficant&nbsp;digit).</tt></dd></dl>
> 
> <dl><dt><a name="TestAdmin-assertNotAlmostEquals"><strong>assertNotAlmostEquals</strong></a> = failIfAlmostEqual(self, first, second, places<font color="#909090">=7</font>, msg<font color="#909090">=None</font>)</dt><dd><tt>Fail&nbsp;if&nbsp;the&nbsp;two&nbsp;objects&nbsp;are&nbsp;equal&nbsp;as&nbsp;determined&nbsp;by&nbsp;their<br>
> difference&nbsp;rounded&nbsp;to&nbsp;the&nbsp;given&nbsp;number&nbsp;of&nbsp;decimal&nbsp;places<br>
> (default&nbsp;7)&nbsp;and&nbsp;comparing&nbsp;to&nbsp;zero.<br>
> &nbsp;<br>
> Note&nbsp;that&nbsp;decimal&nbsp;places&nbsp;(from&nbsp;zero)&nbsp;are&nbsp;usually&nbsp;not&nbsp;the&nbsp;same<br>
> as&nbsp;significant&nbsp;digits&nbsp;(measured&nbsp;from&nbsp;the&nbsp;most&nbsp;signficant&nbsp;digit).</tt></dd></dl>
> 
> <dl><dt><a name="TestAdmin-assertNotEqual"><strong>assertNotEqual</strong></a> = failIfEqual(self, first, second, msg<font color="#909090">=None</font>)</dt><dd><tt>Fail&nbsp;if&nbsp;the&nbsp;two&nbsp;objects&nbsp;are&nbsp;equal&nbsp;as&nbsp;determined&nbsp;by&nbsp;the&nbsp;'=='<br>
> operator.</tt></dd></dl>
> 
> <dl><dt><a name="TestAdmin-assertNotEquals"><strong>assertNotEquals</strong></a> = failIfEqual(self, first, second, msg<font color="#909090">=None</font>)</dt><dd><tt>Fail&nbsp;if&nbsp;the&nbsp;two&nbsp;objects&nbsp;are&nbsp;equal&nbsp;as&nbsp;determined&nbsp;by&nbsp;the&nbsp;'=='<br>
> operator.</tt></dd></dl>
> 
> <dl><dt><a name="TestAdmin-assertRaises"><strong>assertRaises</strong></a> = failUnlessRaises(self, excClass, callableObj, *args, **kwargs)</dt><dd><tt>Fail&nbsp;unless&nbsp;an&nbsp;exception&nbsp;of&nbsp;class&nbsp;excClass&nbsp;is&nbsp;thrown<br>
> by&nbsp;callableObj&nbsp;when&nbsp;invoked&nbsp;with&nbsp;arguments&nbsp;args&nbsp;and&nbsp;keyword<br>
> arguments&nbsp;kwargs.&nbsp;If&nbsp;a&nbsp;different&nbsp;type&nbsp;of&nbsp;exception&nbsp;is<br>
> thrown,&nbsp;it&nbsp;will&nbsp;not&nbsp;be&nbsp;caught,&nbsp;and&nbsp;the&nbsp;test&nbsp;case&nbsp;will&nbsp;be<br>
> deemed&nbsp;to&nbsp;have&nbsp;suffered&nbsp;an&nbsp;error,&nbsp;exactly&nbsp;as&nbsp;for&nbsp;an<br>
> unexpected&nbsp;exception.</tt></dd></dl>
> 
> <dl><dt><a name="TestAdmin-assertTrue"><strong>assertTrue</strong></a> = failUnless(self, expr, msg<font color="#909090">=None</font>)</dt><dd><tt>Fail&nbsp;the&nbsp;test&nbsp;unless&nbsp;the&nbsp;expression&nbsp;is&nbsp;true.</tt></dd></dl>
> 
> <dl><dt><a name="TestAdmin-assert_"><strong>assert_</strong></a> = failUnless(self, expr, msg<font color="#909090">=None</font>)</dt><dd><tt>Fail&nbsp;the&nbsp;test&nbsp;unless&nbsp;the&nbsp;expression&nbsp;is&nbsp;true.</tt></dd></dl>
> 
> <dl><dt><a name="TestAdmin-countTestCases"><strong>countTestCases</strong></a>(self)</dt></dl>
> 
> <dl><dt><a name="TestAdmin-debug"><strong>debug</strong></a>(self)</dt><dd><tt>Run&nbsp;the&nbsp;test&nbsp;without&nbsp;collecting&nbsp;errors&nbsp;in&nbsp;a&nbsp;TestResult</tt></dd></dl>
> 
> <dl><dt><a name="TestAdmin-defaultTestResult"><strong>defaultTestResult</strong></a>(self)</dt></dl>
> 
> <dl><dt><a name="TestAdmin-fail"><strong>fail</strong></a>(self, msg<font color="#909090">=None</font>)</dt><dd><tt>Fail&nbsp;immediately,&nbsp;with&nbsp;the&nbsp;given&nbsp;message.</tt></dd></dl>
> 
> <dl><dt><a name="TestAdmin-failIf"><strong>failIf</strong></a>(self, expr, msg<font color="#909090">=None</font>)</dt><dd><tt>Fail&nbsp;the&nbsp;test&nbsp;if&nbsp;the&nbsp;expression&nbsp;is&nbsp;true.</tt></dd></dl>
> 
> <dl><dt><a name="TestAdmin-failIfAlmostEqual"><strong>failIfAlmostEqual</strong></a>(self, first, second, places<font color="#909090">=7</font>, msg<font color="#909090">=None</font>)</dt><dd><tt>Fail&nbsp;if&nbsp;the&nbsp;two&nbsp;objects&nbsp;are&nbsp;equal&nbsp;as&nbsp;determined&nbsp;by&nbsp;their<br>
> difference&nbsp;rounded&nbsp;to&nbsp;the&nbsp;given&nbsp;number&nbsp;of&nbsp;decimal&nbsp;places<br>
> (default&nbsp;7)&nbsp;and&nbsp;comparing&nbsp;to&nbsp;zero.<br>
> &nbsp;<br>
> Note&nbsp;that&nbsp;decimal&nbsp;places&nbsp;(from&nbsp;zero)&nbsp;are&nbsp;usually&nbsp;not&nbsp;the&nbsp;same<br>
> as&nbsp;significant&nbsp;digits&nbsp;(measured&nbsp;from&nbsp;the&nbsp;most&nbsp;signficant&nbsp;digit).</tt></dd></dl>
> 
> <dl><dt><a name="TestAdmin-failIfEqual"><strong>failIfEqual</strong></a>(self, first, second, msg<font color="#909090">=None</font>)</dt><dd><tt>Fail&nbsp;if&nbsp;the&nbsp;two&nbsp;objects&nbsp;are&nbsp;equal&nbsp;as&nbsp;determined&nbsp;by&nbsp;the&nbsp;'=='<br>
> operator.</tt></dd></dl>
> 
> <dl><dt><a name="TestAdmin-failUnless"><strong>failUnless</strong></a>(self, expr, msg<font color="#909090">=None</font>)</dt><dd><tt>Fail&nbsp;the&nbsp;test&nbsp;unless&nbsp;the&nbsp;expression&nbsp;is&nbsp;true.</tt></dd></dl>
> 
> <dl><dt><a name="TestAdmin-failUnlessAlmostEqual"><strong>failUnlessAlmostEqual</strong></a>(self, first, second, places<font color="#909090">=7</font>, msg<font color="#909090">=None</font>)</dt><dd><tt>Fail&nbsp;if&nbsp;the&nbsp;two&nbsp;objects&nbsp;are&nbsp;unequal&nbsp;as&nbsp;determined&nbsp;by&nbsp;their<br>
> difference&nbsp;rounded&nbsp;to&nbsp;the&nbsp;given&nbsp;number&nbsp;of&nbsp;decimal&nbsp;places<br>
> (default&nbsp;7)&nbsp;and&nbsp;comparing&nbsp;to&nbsp;zero.<br>
> &nbsp;<br>
> Note&nbsp;that&nbsp;decimal&nbsp;places&nbsp;(from&nbsp;zero)&nbsp;are&nbsp;usually&nbsp;not&nbsp;the&nbsp;same<br>
> as&nbsp;significant&nbsp;digits&nbsp;(measured&nbsp;from&nbsp;the&nbsp;most&nbsp;signficant&nbsp;digit).</tt></dd></dl>
> 
> <dl><dt><a name="TestAdmin-failUnlessEqual"><strong>failUnlessEqual</strong></a>(self, first, second, msg<font color="#909090">=None</font>)</dt><dd><tt>Fail&nbsp;if&nbsp;the&nbsp;two&nbsp;objects&nbsp;are&nbsp;unequal&nbsp;as&nbsp;determined&nbsp;by&nbsp;the&nbsp;'=='<br>
> operator.</tt></dd></dl>
> 
> <dl><dt><a name="TestAdmin-failUnlessRaises"><strong>failUnlessRaises</strong></a>(self, excClass, callableObj, *args, **kwargs)</dt><dd><tt>Fail&nbsp;unless&nbsp;an&nbsp;exception&nbsp;of&nbsp;class&nbsp;excClass&nbsp;is&nbsp;thrown<br>
> by&nbsp;callableObj&nbsp;when&nbsp;invoked&nbsp;with&nbsp;arguments&nbsp;args&nbsp;and&nbsp;keyword<br>
> arguments&nbsp;kwargs.&nbsp;If&nbsp;a&nbsp;different&nbsp;type&nbsp;of&nbsp;exception&nbsp;is<br>
> thrown,&nbsp;it&nbsp;will&nbsp;not&nbsp;be&nbsp;caught,&nbsp;and&nbsp;the&nbsp;test&nbsp;case&nbsp;will&nbsp;be<br>
> deemed&nbsp;to&nbsp;have&nbsp;suffered&nbsp;an&nbsp;error,&nbsp;exactly&nbsp;as&nbsp;for&nbsp;an<br>
> unexpected&nbsp;exception.</tt></dd></dl>
> 
> <dl><dt><a name="TestAdmin-id"><strong>id</strong></a>(self)</dt></dl>
> 
> <dl><dt><a name="TestAdmin-run"><strong>run</strong></a>(self, result<font color="#909090">=None</font>)</dt></dl>
> 
> <dl><dt><a name="TestAdmin-setUp"><strong>setUp</strong></a>(self)</dt><dd><tt>Hook&nbsp;method&nbsp;for&nbsp;setting&nbsp;up&nbsp;the&nbsp;test&nbsp;fixture&nbsp;before&nbsp;exercising&nbsp;it.</tt></dd></dl>
> 
> <dl><dt><a name="TestAdmin-shortDescription"><strong>shortDescription</strong></a>(self)</dt><dd><tt>Returns&nbsp;a&nbsp;one-line&nbsp;description&nbsp;of&nbsp;the&nbsp;test,&nbsp;or&nbsp;None&nbsp;if&nbsp;no<br>
> description&nbsp;has&nbsp;been&nbsp;provided.<br>
> &nbsp;<br>
> The&nbsp;default&nbsp;implementation&nbsp;of&nbsp;this&nbsp;method&nbsp;returns&nbsp;the&nbsp;first&nbsp;line&nbsp;of<br>
> the&nbsp;specified&nbsp;test&nbsp;method's&nbsp;docstring.</tt></dd></dl>
> 
> <dl><dt><a name="TestAdmin-tearDown"><strong>tearDown</strong></a>(self)</dt><dd><tt>Hook&nbsp;method&nbsp;for&nbsp;deconstructing&nbsp;the&nbsp;test&nbsp;fixture&nbsp;after&nbsp;testing&nbsp;it.</tt></dd></dl>
> 
> <hr>
> Data descriptors inherited from <a href="unittest.html#TestCase">unittest.TestCase</a>:<br>
> <dl><dt><strong>__dict__</strong></dt>
> <dd><tt>dictionary&nbsp;for&nbsp;instance&nbsp;variables&nbsp;(if&nbsp;defined)</tt></dd>
> </dl>
> <dl><dt><strong>__weakref__</strong></dt>
> <dd><tt>list&nbsp;of&nbsp;weak&nbsp;references&nbsp;to&nbsp;the&nbsp;object&nbsp;(if&nbsp;defined)</tt></dd>
> </dl>
> <hr>
> Data and other attributes inherited from <a href="unittest.html#TestCase">unittest.TestCase</a>:<br>
> <dl><dt><strong>failureException</strong> = &lt;type 'exceptions.AssertionError'&gt;<dd><tt>Assertion&nbsp;failed.</tt></dl>
> 
> </td></tr></table></td></tr></table>
> </body></html>
\ No newline at end of file

Property changes on: TestValidation.pydoc.html
___________________________________________________________________
Added: svn:mergeinfo


***************************
* Changes in revision 49 
***************************

------------------------------------------------------------------------
r49 | ting | 2009-03-25 23:22:49 -0500 (Wed, 25 Mar 2009) | 1 line

add in missing pydocs
------------------------------------------------------------------------

Index: validator.pydoc.html
===================================================================
0a1,45
> 
> <!doctype html PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
> <html><head><title>Python: module validator</title>
> </head><body bgcolor="#f0f0f8">
> 
> <table width="100%" cellspacing=0 cellpadding=2 border=0 summary="heading">
> <tr bgcolor="#7799ee">
> <td valign=bottom>&nbsp;<br>
> <font color="#ffffff" face="helvetica, arial">&nbsp;<br><big><big><strong>validator</strong></big></big></font></td
> ><td align=right valign=bottom
> ><font color="#ffffff" face="helvetica, arial"><a href=".">index</a><br><a href="file:/v/filer4b/v35q001/ting/svn/cs373_pj5/validator.py">/v/filer4b/v35q001/ting/svn/cs373_pj5/validator.py</a></font></td></tr></table>
>     <p></p>
> <p>
> <table width="100%" cellspacing=0 cellpadding=2 border=0 summary="section">
> <tr bgcolor="#aa55cc">
> <td colspan=3 valign=bottom>&nbsp;<br>
> <font color="#fffff" face="helvetica, arial"><big><strong>Modules</strong></big></font></td></tr>
>     
> <tr><td bgcolor="#aa55cc"><tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</tt></td><td>&nbsp;</td>
> <td width="100%"><table width="100%" summary="list"><tr><td width="25%" valign=top><a href="Validation.html">Validation</a><br>
> </td><td width="25%" valign=top><a href="re.html">re</a><br>
> </td><td width="25%" valign=top></td><td width="25%" valign=top></td></tr></table></td></tr></table><p>
> <table width="100%" cellspacing=0 cellpadding=2 border=0 summary="section">
> <tr bgcolor="#ee77aa">
> <td colspan=3 valign=bottom>&nbsp;<br>
> <font color="#ffffff" face="helvetica, arial"><big><strong>Classes</strong></big></font></td></tr>
>     
> <tr><td bgcolor="#ee77aa"><tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</tt></td><td>&nbsp;</td>
> <td width="100%"><dl>
> <dt><font face="helvetica, arial"><a href="validator.html#Validator">Validator</a>
> </font></dt></dl>
>  <p>
> <table width="100%" cellspacing=0 cellpadding=2 border=0 summary="section">
> <tr bgcolor="#ffc8d8">
> <td colspan=3 valign=bottom>&nbsp;<br>
> <font color="#000000" face="helvetica, arial"><a name="Validator">class <strong>Validator</strong></a></font></td></tr>
>     
> <tr bgcolor="#ffc8d8"><td rowspan=2><tt>&nbsp;&nbsp;&nbsp;</tt></td>
> <td colspan=2><tt>Generic&nbsp;validator&nbsp;class&nbsp;depending&nbsp;on&nbsp;form&nbsp;type.<br>&nbsp;</tt></td></tr>
> <tr><td>&nbsp;</td>
> <td width="100%">Methods defined here:<br>
> <dl><dt><a name="Validator-__init__"><strong>__init__</strong></a>(self, form_data)</dt><dd><tt>Constructor&nbsp;validates&nbsp;k-v&nbsp;pairs&nbsp;found&nbsp;in&nbsp;form_data&nbsp;and&nbsp;returns&nbsp;results.</tt></dd></dl>
> 
> </td></tr></table></td></tr></table>
> </body></html>
\ No newline at end of file
Index: Validation.pydoc.html
===================================================================
0a1,40
> 
> <!doctype html PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
> <html><head><title>Python: module Validation</title>
> </head><body bgcolor="#f0f0f8">
> 
> <table width="100%" cellspacing=0 cellpadding=2 border=0 summary="heading">
> <tr bgcolor="#7799ee">
> <td valign=bottom>&nbsp;<br>
> <font color="#ffffff" face="helvetica, arial">&nbsp;<br><big><big><strong>Validation</strong></big></big></font></td
> ><td align=right valign=bottom
> ><font color="#ffffff" face="helvetica, arial"><a href=".">index</a><br><a href="file:/v/filer4b/v35q001/ting/svn/cs373_pj5/Validation.py">/v/filer4b/v35q001/ting/svn/cs373_pj5/Validation.py</a></font></td></tr></table>
>     <p></p>
> <p>
> <table width="100%" cellspacing=0 cellpadding=2 border=0 summary="section">
> <tr bgcolor="#aa55cc">
> <td colspan=3 valign=bottom>&nbsp;<br>
> <font color="#fffff" face="helvetica, arial"><big><strong>Modules</strong></big></font></td></tr>
>     
> <tr><td bgcolor="#aa55cc"><tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</tt></td><td>&nbsp;</td>
> <td width="100%"><table width="100%" summary="list"><tr><td width="25%" valign=top><a href="re.html">re</a><br>
> </td><td width="25%" valign=top></td><td width="25%" valign=top></td><td width="25%" valign=top></td></tr></table></td></tr></table><p>
> <table width="100%" cellspacing=0 cellpadding=2 border=0 summary="section">
> <tr bgcolor="#eeaa77">
> <td colspan=3 valign=bottom>&nbsp;<br>
> <font color="#ffffff" face="helvetica, arial"><big><strong>Functions</strong></big></font></td></tr>
>     
> <tr><td bgcolor="#eeaa77"><tt>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</tt></td><td>&nbsp;</td>
> <td width="100%"><dl><dt><a name="-citizen"><strong>citizen</strong></a>(s)</dt><dd><tt>Resident/Citizen&nbsp;validator.</tt></dd></dl>
>  <dl><dt><a name="-class_number"><strong>class_number</strong></a>(s)</dt><dd><tt>Class&nbsp;number&nbsp;validator.</tt></dd></dl>
>  <dl><dt><a name="-comment"><strong>comment</strong></a>(s)</dt><dd><tt>Comment&nbsp;validator.</tt></dd></dl>
>  <dl><dt><a name="-date"><strong>date</strong></a>(s)</dt><dd><tt>Date&nbsp;validator.</tt></dd></dl>
>  <dl><dt><a name="-degree_type"><strong>degree_type</strong></a>(s)</dt><dd><tt>Degree&nbsp;validator.</tt></dd></dl>
>  <dl><dt><a name="-email"><strong>email</strong></a>(s)</dt><dd><tt>E-mail&nbsp;address&nbsp;validator.</tt></dd></dl>
>  <dl><dt><a name="-name"><strong>name</strong></a>(s)</dt><dd><tt>Name&nbsp;validator.</tt></dd></dl>
>  <dl><dt><a name="-number"><strong>number</strong></a>(s)</dt><dd><tt>Number&nbsp;validator.</tt></dd></dl>
>  <dl><dt><a name="-phone_number"><strong>phone_number</strong></a>(s)</dt><dd><tt>Phone&nbsp;number&nbsp;validator.</tt></dd></dl>
>  <dl><dt><a name="-phone_number_ext"><strong>phone_number_ext</strong></a>(s)</dt><dd><tt>Phone&nbsp;number&nbsp;extension&nbsp;validator.</tt></dd></dl>
>  <dl><dt><a name="-yes_no"><strong>yes_no</strong></a>(s)</dt><dd><tt>yes/no&nbsp;validator.</tt></dd></dl>
> </td></tr></table>
> </body></html>
\ No newline at end of file

